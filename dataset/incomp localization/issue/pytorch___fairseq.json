[{"A": "fairseq-main/fairseq/modules/lightconv_layer/setup.py", "B": "fairseq-main/fairseq/modules/lightconv_layer/setup.py:setuptools"}, {"A": "fairseq-main/fairseq/modules/lightconv_layer/setup.py", "B": "fairseq-main/fairseq/modules/lightconv_layer/setup.py:torch"}, {"A": "fairseq-main/fairseq/modules/dynamicconv_layer/setup.py", "B": "fairseq-main/fairseq/modules/dynamicconv_layer/setup.py:setuptools"}, {"A": "fairseq-main/fairseq/modules/dynamicconv_layer/setup.py", "B": "fairseq-main/fairseq/modules/dynamicconv_layer/setup.py:torch"}, {"A": "fairseq-main/examples/MMPT/locallaunch.py", "B": "fairseq-main/examples/MMPT/locallaunch.py:omegaconf"}, {"A": "fairseq-main/examples/MMPT/locallaunch.py", "B": "fairseq-main/examples/MMPT/locallaunch.py:argparse"}, {"A": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py", "B": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py:tqdm"}, {"A": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py", "B": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py:pickle"}, {"A": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py", "B": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py:torch"}, {"A": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py", "B": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py:transformers"}, {"A": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py", "B": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py:numpy"}, {"A": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py", "B": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py:random"}, {"A": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py", "B": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py:json"}, {"A": "fairseq-main/examples/MMPT/mmpt/losses/loss.py", "B": "fairseq-main/examples/MMPT/mmpt/losses/loss.py:torch"}, {"A": "fairseq-main/examples/MMPT/mmpt/losses/nce.py", "B": "fairseq-main/examples/MMPT/mmpt/losses/nce.py:torch"}, {"A": "fairseq-main/examples/MMPT/mmpt/utils/shardedtensor.py", "B": "fairseq-main/examples/MMPT/mmpt/utils/shardedtensor.py:numpy"}, {"A": "fairseq-main/examples/MMPT/mmpt/utils/shardedtensor.py", "B": "fairseq-main/examples/MMPT/mmpt/utils/shardedtensor.py:pickle"}, {"A": "fairseq-main/examples/MMPT/mmpt/utils/load_config.py", "B": "fairseq-main/examples/MMPT/mmpt/utils/load_config.py:omegaconf"}, {"A": "fairseq-main/examples/MMPT/mmpt/utils/__init__.py", "B": "fairseq-main/examples/MMPT/mmpt/utils/__init__.py:random"}, {"A": "fairseq-main/examples/MMPT/mmpt/utils/__init__.py", "B": "fairseq-main/examples/MMPT/mmpt/utils/__init__.py:numpy"}, {"A": "fairseq-main/examples/MMPT/mmpt/utils/__init__.py", "B": "fairseq-main/examples/MMPT/mmpt/utils/__init__.py:torch"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py:pandas"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py:pickle"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py:torch"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py:transformers"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py:numpy"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py:random"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py:json"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py:typing"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py:pickle"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py:torch"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py:transformers"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py:numpy"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py:random"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py:json"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/processor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/processor.py:numpy"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/processor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/processor.py:torch"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/processor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/processor.py:transformers"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/how2retriprocessor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/how2retriprocessor.py:transformers"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/dedupprocessor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/dedupprocessor.py:tqdm"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/dedupprocessor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/dedupprocessor.py:pickle"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/dedupprocessor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/dedupprocessor.py:numpy"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/dedupprocessor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/dedupprocessor.py:random"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/dedupprocessor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/dedupprocessor.py:argparse"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/dedupprocessor.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/dedupprocessor.py:json"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/models/s3dg.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/models/s3dg.py:numpy"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/models/s3dg.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/models/s3dg.py:torch"}, {"A": "fairseq-main/examples/MMPT/mmpt/processors/models/s3dg.py", "B": "fairseq-main/examples/MMPT/mmpt/processors/models/s3dg.py:re"}, {"A": "fairseq-main/examples/laser/laser_src/multitask_data_utils.py", "B": "fairseq-main/examples/laser/laser_src/multitask_data_utils.py:numpy"}, {"A": "fairseq-main/hubconf.py", "B": "fairseq-main/hubconf.py:setuptools"}, {"A": "fairseq-main/hubconf.py", "B": "fairseq-main/hubconf.py:functools"}, {"A": "fairseq-main/examples/laser/laser_src/laser_task.py", "B": "fairseq-main/examples/laser/laser_src/laser_task.py:argparse"}, {"A": "fairseq-main/examples/laser/laser_src/laser_task.py", "B": "fairseq-main/examples/laser/laser_src/laser_task.py:json"}, {"A": "fairseq-main/examples/noisychannel/rerank_score_bw.py", "B": "fairseq-main/examples/noisychannel/rerank_score_bw.py:contextlib"}, {"A": "fairseq-main/fairseq/speech_generator.py", "B": "fairseq-main/fairseq/speech_generator.py:numpy"}, {"A": "fairseq-main/fairseq/speech_generator.py", "B": "fairseq-main/fairseq/speech_generator.py:torch"}, {"A": "fairseq-main/examples/noisychannel/rerank_utils.py", "B": "fairseq-main/examples/noisychannel/rerank_utils.py:contextlib"}, {"A": "fairseq-main/examples/noisychannel/rerank_utils.py", "B": "fairseq-main/examples/noisychannel/rerank_utils.py:re"}, {"A": "fairseq-main/fairseq/ngram_repeat_block.py", "B": "fairseq-main/fairseq/ngram_repeat_block.py:typing"}, {"A": "fairseq-main/fairseq/ngram_repeat_block.py", "B": "fairseq-main/fairseq/ngram_repeat_block.py:torch"}, {"A": "fairseq-main/examples/noisychannel/rerank_tune.py", "B": "fairseq-main/examples/noisychannel/rerank_tune.py:numpy"}, {"A": "fairseq-main/examples/noisychannel/rerank_tune.py", "B": "fairseq-main/examples/noisychannel/rerank_tune.py:random"}, {"A": "fairseq-main/examples/noisychannel/rerank_tune.py", "B": "fairseq-main/examples/noisychannel/rerank_tune.py:argparse"}, {"A": "fairseq-main/fairseq/trainer.py", "B": "fairseq-main/fairseq/trainer.py:typing"}, {"A": "fairseq-main/fairseq/trainer.py", "B": "fairseq-main/fairseq/trainer.py:torch"}, {"A": "fairseq-main/fairseq/trainer.py", "B": "fairseq-main/fairseq/trainer.py:omegaconf"}, {"A": "fairseq-main/fairseq/trainer.py", "B": "fairseq-main/fairseq/trainer.py:contextlib"}, {"A": "fairseq-main/fairseq/trainer.py", "B": "fairseq-main/fairseq/trainer.py:argparse"}, {"A": "fairseq-main/examples/noisychannel/rerank.py", "B": "fairseq-main/examples/noisychannel/rerank.py:numpy"}, {"A": "fairseq-main/examples/noisychannel/rerank.py", "B": "fairseq-main/examples/noisychannel/rerank.py:multiprocessing"}, {"A": "fairseq-main/fairseq/options.py", "B": "fairseq-main/fairseq/options.py:typing"}, {"A": "fairseq-main/fairseq/options.py", "B": "fairseq-main/fairseq/options.py:pathlib"}, {"A": "fairseq-main/fairseq/options.py", "B": "fairseq-main/fairseq/options.py:torch"}, {"A": "fairseq-main/fairseq/options.py", "B": "fairseq-main/fairseq/options.py:argparse"}, {"A": "fairseq-main/examples/noisychannel/rerank_generate.py", "B": "fairseq-main/examples/noisychannel/rerank_generate.py:contextlib"}, {"A": "fairseq-main/examples/textless_nlp/gslm/ulm/sample.py", "B": "fairseq-main/examples/textless_nlp/gslm/ulm/sample.py:tqdm"}, {"A": "fairseq-main/examples/textless_nlp/gslm/ulm/sample.py", "B": "fairseq-main/examples/textless_nlp/gslm/ulm/sample.py:numpy"}, {"A": "fairseq-main/fairseq/registry.py", "B": "fairseq-main/fairseq/registry.py:typing"}, {"A": "fairseq-main/fairseq/registry.py", "B": "fairseq-main/fairseq/registry.py:omegaconf"}, {"A": "fairseq-main/fairseq/registry.py", "B": "fairseq-main/fairseq/registry.py:argparse"}, {"A": "fairseq-main/fairseq/registry.py", "B": "fairseq-main/fairseq/registry.py:hydra"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/glow.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/glow.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tts_data.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tts_data.py:numpy"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tts_data.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tts_data.py:torch"}, {"A": "fairseq-main/fairseq/hub_utils.py", "B": "fairseq-main/fairseq/hub_utils.py:typing"}, {"A": "fairseq-main/fairseq/hub_utils.py", "B": "fairseq-main/fairseq/hub_utils.py:torch"}, {"A": "fairseq-main/fairseq/hub_utils.py", "B": "fairseq-main/fairseq/hub_utils.py:omegaconf"}, {"A": "fairseq-main/fairseq/hub_utils.py", "B": "fairseq-main/fairseq/hub_utils.py:argparse"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/synthesize_audio_from_units.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/synthesize_audio_from_units.py:argparse"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/synthesize_audio_from_units.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/synthesize_audio_from_units.py:soundfile"}, {"A": "fairseq-main/fairseq/sequence_generator.py", "B": "fairseq-main/fairseq/sequence_generator.py:typing"}, {"A": "fairseq-main/fairseq/sequence_generator.py", "B": "fairseq-main/fairseq/sequence_generator.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/utils.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/utils.py:torch"}, {"A": "fairseq-main/fairseq/iterative_refinement_generator.py", "B": "fairseq-main/fairseq/iterative_refinement_generator.py:numpy"}, {"A": "fairseq-main/fairseq/iterative_refinement_generator.py", "B": "fairseq-main/fairseq/iterative_refinement_generator.py:torch"}, {"A": "fairseq-main/fairseq/file_io.py", "B": "fairseq-main/fairseq/file_io.py:typing"}, {"A": "fairseq-main/fairseq/file_io.py", "B": "fairseq-main/fairseq/file_io.py:iopath"}, {"A": "fairseq-main/fairseq/binarizer.py", "B": "fairseq-main/fairseq/binarizer.py:typing"}, {"A": "fairseq-main/fairseq/binarizer.py", "B": "fairseq-main/fairseq/binarizer.py:torch"}, {"A": "fairseq-main/fairseq/binarizer.py", "B": "fairseq-main/fairseq/binarizer.py:dataclasses"}, {"A": "fairseq-main/fairseq/binarizer.py", "B": "fairseq-main/fairseq/binarizer.py:multiprocessing"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/stft.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/stft.py:numpy"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/stft.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/stft.py:librosa"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/stft.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/stft.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/stft.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/stft.py:scipy"}, {"A": "fairseq-main/fairseq/checkpoint_utils.py", "B": "fairseq-main/fairseq/checkpoint_utils.py:typing"}, {"A": "fairseq-main/fairseq/checkpoint_utils.py", "B": "fairseq-main/fairseq/checkpoint_utils.py:pathlib"}, {"A": "fairseq-main/fairseq/checkpoint_utils.py", "B": "fairseq-main/fairseq/checkpoint_utils.py:torch"}, {"A": "fairseq-main/fairseq/checkpoint_utils.py", "B": "fairseq-main/fairseq/checkpoint_utils.py:contextlib"}, {"A": "fairseq-main/fairseq/checkpoint_utils.py", "B": "fairseq-main/fairseq/checkpoint_utils.py:numpy"}, {"A": "fairseq-main/fairseq/checkpoint_utils.py", "B": "fairseq-main/fairseq/checkpoint_utils.py:traceback"}, {"A": "fairseq-main/fairseq/checkpoint_utils.py", "B": "fairseq-main/fairseq/checkpoint_utils.py:omegaconf"}, {"A": "fairseq-main/fairseq/checkpoint_utils.py", "B": "fairseq-main/fairseq/checkpoint_utils.py:inspect"}, {"A": "fairseq-main/fairseq/checkpoint_utils.py", "B": "fairseq-main/fairseq/checkpoint_utils.py:re"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/utils.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/utils.py:librosa"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/utils.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/utils.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/utils.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/utils.py:numpy"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/utils.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/utils.py:soundfile"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/utils.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/utils.py:json"}, {"A": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/utils.py", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/utils.py:scipy"}, {"A": "fairseq-main/fairseq/tokenizer.py", "B": "fairseq-main/fairseq/tokenizer.py:re"}, {"A": "fairseq-main/fairseq/file_chunker_utils.py", "B": "fairseq-main/fairseq/file_chunker_utils.py:typing"}, {"A": "fairseq-main/fairseq/pdb.py", "B": "fairseq-main/fairseq/pdb.py:multiprocessing"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/cluster_kmeans.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/cluster_kmeans.py:joblib"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/cluster_kmeans.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/cluster_kmeans.py:numpy"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/cluster_kmeans.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/cluster_kmeans.py:argparse"}, {"A": "fairseq-main/fairseq/file_utils.py", "B": "fairseq-main/fairseq/file_utils.py:urlparse"}, {"A": "fairseq-main/fairseq/file_utils.py", "B": "fairseq-main/fairseq/file_utils.py:functools"}, {"A": "fairseq-main/fairseq/file_utils.py", "B": "fairseq-main/fairseq/file_utils.py:tqdm"}, {"A": "fairseq-main/fairseq/file_utils.py", "B": "fairseq-main/fairseq/file_utils.py:pathlib"}, {"A": "fairseq-main/fairseq/file_utils.py", "B": "fairseq-main/fairseq/file_utils.py:botocore"}, {"A": "fairseq-main/fairseq/file_utils.py", "B": "fairseq-main/fairseq/file_utils.py:torch"}, {"A": "fairseq-main/fairseq/file_utils.py", "B": "fairseq-main/fairseq/file_utils.py:tempfile"}, {"A": "fairseq-main/fairseq/file_utils.py", "B": "fairseq-main/fairseq/file_utils.py:boto3"}, {"A": "fairseq-main/fairseq/file_utils.py", "B": "fairseq-main/fairseq/file_utils.py:fnmatch"}, {"A": "fairseq-main/fairseq/file_utils.py", "B": "fairseq-main/fairseq/file_utils.py:hashlib"}, {"A": "fairseq-main/fairseq/file_utils.py", "B": "fairseq-main/fairseq/file_utils.py:urllib"}, {"A": "fairseq-main/fairseq/file_utils.py", "B": "fairseq-main/fairseq/file_utils.py:requests"}, {"A": "fairseq-main/fairseq/file_utils.py", "B": "fairseq-main/fairseq/file_utils.py:json"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/dump_feats.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/dump_feats.py:argparse"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/quantize_with_kmeans.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/quantize_with_kmeans.py:joblib"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/quantize_with_kmeans.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/quantize_with_kmeans.py:numpy"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/quantize_with_kmeans.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/quantize_with_kmeans.py:argparse"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/utils.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/utils.py:typing"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/w2v2_feature_reader.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/w2v2_feature_reader.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/w2v2_feature_reader.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/w2v2_feature_reader.py:soundfile"}, {"A": "fairseq-main/fairseq/sequence_scorer.py", "B": "fairseq-main/fairseq/sequence_scorer.py:torch"}, {"A": "fairseq-main/fairseq/incremental_decoding_utils.py", "B": "fairseq-main/fairseq/incremental_decoding_utils.py:typing"}, {"A": "fairseq-main/fairseq/incremental_decoding_utils.py", "B": "fairseq-main/fairseq/incremental_decoding_utils.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/hubert_feature_reader.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/hubert_feature_reader.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/hubert_feature_reader.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/hubert_feature_reader.py:soundfile"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/logmel_feature_reader.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/logmel_feature_reader.py:torchaudio"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/logmel_feature_reader.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/logmel_feature_reader.py:soundfile"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/logmel_feature_reader.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/logmel_feature_reader.py:torch"}, {"A": "fairseq-main/fairseq/utils.py", "B": "fairseq-main/fairseq/utils.py:typing"}, {"A": "fairseq-main/fairseq/utils.py", "B": "fairseq-main/fairseq/utils.py:torch"}, {"A": "fairseq-main/fairseq/utils.py", "B": "fairseq-main/fairseq/utils.py:contextlib"}, {"A": "fairseq-main/fairseq/utils.py", "B": "fairseq-main/fairseq/utils.py:omegaconf"}, {"A": "fairseq-main/fairseq/utils.py", "B": "fairseq-main/fairseq/utils.py:argparse"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/utils.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/utils.py:tqdm"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/utils.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/utils.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/utils.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/utils.py:numpy"}, {"A": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/utils.py", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/utils.py:random"}, {"A": "fairseq-main/fairseq/token_generation_constraints.py", "B": "fairseq-main/fairseq/token_generation_constraints.py:typing"}, {"A": "fairseq-main/fairseq/token_generation_constraints.py", "B": "fairseq-main/fairseq/token_generation_constraints.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/self_auto_bleu.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/self_auto_bleu.py:pathlib"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/self_auto_bleu.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/self_auto_bleu.py:multiprocessing"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/self_auto_bleu.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/self_auto_bleu.py:numpy"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/self_auto_bleu.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/self_auto_bleu.py:argparse"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/self_auto_bleu.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/self_auto_bleu.py:nltk"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/self_auto_bleu.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/self_auto_bleu.py:json"}, {"A": "fairseq-main/fairseq/quantization_utils.py", "B": "fairseq-main/fairseq/quantization_utils.py:omegaconf"}, {"A": "fairseq-main/fairseq/search.py", "B": "fairseq-main/fairseq/search.py:typing"}, {"A": "fairseq-main/fairseq/search.py", "B": "fairseq-main/fairseq/search.py:torch"}, {"A": "fairseq-main/fairseq/nan_detector.py", "B": "fairseq-main/fairseq/nan_detector.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/ppx.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/ppx.py:pathlib"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/ppx.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/ppx.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/ppx.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/ppx.py:numpy"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/ppx.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/ppx.py:argparse"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/ppx.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/ppx.py:json"}, {"A": "fairseq-main/fairseq/model_parallel/models/transformer_lm.py", "B": "fairseq-main/fairseq/model_parallel/models/transformer_lm.py:torch"}, {"A": "fairseq-main/fairseq/model_parallel/models/transformer.py", "B": "fairseq-main/fairseq/model_parallel/models/transformer.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/continuation_eval.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/continuation_eval.py:numpy"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/continuation_eval.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/continuation_eval.py:argparse"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/continuation_eval.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/continuation_eval.py:json"}, {"A": "fairseq-main/fairseq/model_parallel/models/roberta/model.py", "B": "fairseq-main/fairseq/model_parallel/models/roberta/model.py:torch"}, {"A": "fairseq-main/fairseq/model_parallel/models/pipeline_parallel_transformer/layers.py", "B": "fairseq-main/fairseq/model_parallel/models/pipeline_parallel_transformer/layers.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/misc/cut_as.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/misc/cut_as.py:pathlib"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/misc/cut_as.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/misc/cut_as.py:argparse"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/misc/cut_as.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/misc/cut_as.py:torchaudio"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/misc/cut_as.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/misc/cut_as.py:json"}, {"A": "fairseq-main/fairseq/model_parallel/models/pipeline_parallel_transformer/model.py", "B": "fairseq-main/fairseq/model_parallel/models/pipeline_parallel_transformer/model.py:torch"}, {"A": "fairseq-main/fairseq/model_parallel/models/pipeline_parallel_transformer/model.py", "B": "fairseq-main/fairseq/model_parallel/models/pipeline_parallel_transformer/model.py:tempfile"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/abx_metrics/dump_abx_feats.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/abx_metrics/dump_abx_feats.py:joblib"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/abx_metrics/dump_abx_feats.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/abx_metrics/dump_abx_feats.py:numpy"}, {"A": "fairseq-main/examples/textless_nlp/gslm/metrics/abx_metrics/dump_abx_feats.py", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/abx_metrics/dump_abx_feats.py:argparse"}, {"A": "fairseq-main/fairseq/model_parallel/modules/multihead_attention.py", "B": "fairseq-main/fairseq/model_parallel/modules/multihead_attention.py:typing"}, {"A": "fairseq-main/fairseq/model_parallel/modules/multihead_attention.py", "B": "fairseq-main/fairseq/model_parallel/modules/multihead_attention.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/tools/resynthesize_speech.py", "B": "fairseq-main/examples/textless_nlp/gslm/tools/resynthesize_speech.py:joblib"}, {"A": "fairseq-main/examples/textless_nlp/gslm/tools/resynthesize_speech.py", "B": "fairseq-main/examples/textless_nlp/gslm/tools/resynthesize_speech.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/gslm/tools/resynthesize_speech.py", "B": "fairseq-main/examples/textless_nlp/gslm/tools/resynthesize_speech.py:argparse"}, {"A": "fairseq-main/examples/textless_nlp/gslm/tools/resynthesize_speech.py", "B": "fairseq-main/examples/textless_nlp/gslm/tools/resynthesize_speech.py:soundfile"}, {"A": "fairseq-main/fairseq/optim/adamax.py", "B": "fairseq-main/fairseq/optim/adamax.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/preprocess_f0.py", "B": "fairseq-main/examples/textless_nlp/pgslm/preprocess_f0.py:tqdm"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/preprocess_f0.py", "B": "fairseq-main/examples/textless_nlp/pgslm/preprocess_f0.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/preprocess_f0.py", "B": "fairseq-main/examples/textless_nlp/pgslm/preprocess_f0.py:argparse"}, {"A": "fairseq-main/fairseq/optim/sgd.py", "B": "fairseq-main/fairseq/optim/sgd.py:torch"}, {"A": "fairseq-main/fairseq/optim/fused_adam.py", "B": "fairseq-main/fairseq/optim/fused_adam.py:apex"}, {"A": "fairseq-main/fairseq/optim/fused_adam.py", "B": "fairseq-main/fairseq/optim/fused_adam.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/truncated_laplace.py", "B": "fairseq-main/examples/textless_nlp/pgslm/truncated_laplace.py:torch"}, {"A": "fairseq-main/fairseq/optim/fp16_optimizer.py", "B": "fairseq-main/fairseq/optim/fp16_optimizer.py:torch"}, {"A": "fairseq-main/fairseq/optim/fp16_optimizer.py", "B": "fairseq-main/fairseq/optim/fp16_optimizer.py:omegaconf"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/generate_waveform.py", "B": "fairseq-main/examples/textless_nlp/pgslm/generate_waveform.py:tqdm"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/generate_waveform.py", "B": "fairseq-main/examples/textless_nlp/pgslm/generate_waveform.py:pathlib"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/generate_waveform.py", "B": "fairseq-main/examples/textless_nlp/pgslm/generate_waveform.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/generate_waveform.py", "B": "fairseq-main/examples/textless_nlp/pgslm/generate_waveform.py:argparse"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/generate_waveform.py", "B": "fairseq-main/examples/textless_nlp/pgslm/generate_waveform.py:soundfile"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/generate_waveform.py", "B": "fairseq-main/examples/textless_nlp/pgslm/generate_waveform.py:json"}, {"A": "fairseq-main/fairseq/optim/nag.py", "B": "fairseq-main/fairseq/optim/nag.py:typing"}, {"A": "fairseq-main/fairseq/optim/nag.py", "B": "fairseq-main/fairseq/optim/nag.py:torch"}, {"A": "fairseq-main/fairseq/optim/nag.py", "B": "fairseq-main/fairseq/optim/nag.py:dataclasses"}, {"A": "fairseq-main/fairseq/optim/nag.py", "B": "fairseq-main/fairseq/optim/nag.py:omegaconf"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/inference_dataset.py", "B": "fairseq-main/examples/textless_nlp/pgslm/inference_dataset.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/prepare_dataset.py", "B": "fairseq-main/examples/textless_nlp/pgslm/prepare_dataset.py:tqdm"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/prepare_dataset.py", "B": "fairseq-main/examples/textless_nlp/pgslm/prepare_dataset.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/prepare_dataset.py", "B": "fairseq-main/examples/textless_nlp/pgslm/prepare_dataset.py:argparse"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/prepare_dataset.py", "B": "fairseq-main/examples/textless_nlp/pgslm/prepare_dataset.py:multiprocessing"}, {"A": "fairseq-main/fairseq/optim/cpu_adam.py", "B": "fairseq-main/fairseq/optim/cpu_adam.py:typing"}, {"A": "fairseq-main/fairseq/optim/cpu_adam.py", "B": "fairseq-main/fairseq/optim/cpu_adam.py:torch"}, {"A": "fairseq-main/fairseq/optim/cpu_adam.py", "B": "fairseq-main/fairseq/optim/cpu_adam.py:dataclasses"}, {"A": "fairseq-main/fairseq/optim/cpu_adam.py", "B": "fairseq-main/fairseq/optim/cpu_adam.py:omegaconf"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/data_utils.py", "B": "fairseq-main/examples/textless_nlp/pgslm/data_utils.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/data_utils.py", "B": "fairseq-main/examples/textless_nlp/pgslm/data_utils.py:tqdm"}, {"A": "fairseq-main/fairseq/optim/adadelta.py", "B": "fairseq-main/fairseq/optim/adadelta.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/naive_decoder.py", "B": "fairseq-main/examples/textless_nlp/pgslm/naive_decoder.py:torch"}, {"A": "fairseq-main/fairseq/optim/bmuf.py", "B": "fairseq-main/fairseq/optim/bmuf.py:torch"}, {"A": "fairseq-main/fairseq/optim/bmuf.py", "B": "fairseq-main/fairseq/optim/bmuf.py:dataclasses"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/quantize_f0.py", "B": "fairseq-main/examples/textless_nlp/pgslm/quantize_f0.py:functools"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/quantize_f0.py", "B": "fairseq-main/examples/textless_nlp/pgslm/quantize_f0.py:tqdm"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/quantize_f0.py", "B": "fairseq-main/examples/textless_nlp/pgslm/quantize_f0.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/quantize_f0.py", "B": "fairseq-main/examples/textless_nlp/pgslm/quantize_f0.py:numpy"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/quantize_f0.py", "B": "fairseq-main/examples/textless_nlp/pgslm/quantize_f0.py:argparse"}, {"A": "fairseq-main/fairseq/optim/composite.py", "B": "fairseq-main/fairseq/optim/composite.py:typing"}, {"A": "fairseq-main/fairseq/optim/composite.py", "B": "fairseq-main/fairseq/optim/composite.py:torch"}, {"A": "fairseq-main/fairseq/optim/composite.py", "B": "fairseq-main/fairseq/optim/composite.py:dataclasses"}, {"A": "fairseq-main/fairseq/optim/composite.py", "B": "fairseq-main/fairseq/optim/composite.py:omegaconf"}, {"A": "fairseq-main/fairseq/optim/amp_optimizer.py", "B": "fairseq-main/fairseq/optim/amp_optimizer.py:omegaconf"}, {"A": "fairseq-main/fairseq/optim/amp_optimizer.py", "B": "fairseq-main/fairseq/optim/amp_optimizer.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/sample/sample.py", "B": "fairseq-main/examples/textless_nlp/pgslm/sample/sample.py:json"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/sample/sample.py", "B": "fairseq-main/examples/textless_nlp/pgslm/sample/sample.py:tqdm"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/sample/sample.py", "B": "fairseq-main/examples/textless_nlp/pgslm/sample/sample.py:pathlib"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/sample/sample.py", "B": "fairseq-main/examples/textless_nlp/pgslm/sample/sample.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/sample/sample.py", "B": "fairseq-main/examples/textless_nlp/pgslm/sample/sample.py:numpy"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/sample/sample.py", "B": "fairseq-main/examples/textless_nlp/pgslm/sample/sample.py:random"}, {"A": "fairseq-main/fairseq/optim/fairseq_optimizer.py", "B": "fairseq-main/fairseq/optim/fairseq_optimizer.py:torch"}, {"A": "fairseq-main/fairseq/optim/adafactor.py", "B": "fairseq-main/fairseq/optim/adafactor.py:torch"}, {"A": "fairseq-main/fairseq/optim/__init__.py", "B": "fairseq-main/fairseq/optim/__init__.py:omegaconf"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/scripts/join_units_manifest.py", "B": "fairseq-main/examples/textless_nlp/pgslm/scripts/join_units_manifest.py:pathlib"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/scripts/join_units_manifest.py", "B": "fairseq-main/examples/textless_nlp/pgslm/scripts/join_units_manifest.py:argparse"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/scripts/join_units_manifest.py", "B": "fairseq-main/examples/textless_nlp/pgslm/scripts/join_units_manifest.py:json"}, {"A": "fairseq-main/fairseq/optim/adam.py", "B": "fairseq-main/fairseq/optim/adam.py:typing"}, {"A": "fairseq-main/fairseq/optim/adam.py", "B": "fairseq-main/fairseq/optim/adam.py:torch"}, {"A": "fairseq-main/fairseq/optim/adam.py", "B": "fairseq-main/fairseq/optim/adam.py:dataclasses"}, {"A": "fairseq-main/fairseq/optim/adam.py", "B": "fairseq-main/fairseq/optim/adam.py:omegaconf"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py", "B": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py:wandb"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py", "B": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py:pathlib"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py", "B": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py:torch"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py", "B": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py:numpy"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py", "B": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py:random"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py", "B": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py:nltk"}, {"A": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py", "B": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py:scipy"}, {"A": "fairseq-main/fairseq/optim/shard.py", "B": "fairseq-main/fairseq/optim/shard.py:typing"}, {"A": "fairseq-main/fairseq/optim/adagrad.py", "B": "fairseq-main/fairseq/optim/adagrad.py:torch"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/tri_stage_lr_scheduler.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/tri_stage_lr_scheduler.py:typing"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/tri_stage_lr_scheduler.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/tri_stage_lr_scheduler.py:dataclasses"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/tri_stage_lr_scheduler.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/tri_stage_lr_scheduler.py:omegaconf"}, {"A": "fairseq-main/examples/pointer_generator/postprocess.py", "B": "fairseq-main/examples/pointer_generator/postprocess.py:argparse"}, {"A": "fairseq-main/examples/pointer_generator/postprocess.py", "B": "fairseq-main/examples/pointer_generator/postprocess.py:re"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/polynomial_decay_schedule.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/polynomial_decay_schedule.py:typing"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/polynomial_decay_schedule.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/polynomial_decay_schedule.py:omegaconf"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/polynomial_decay_schedule.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/polynomial_decay_schedule.py:dataclasses"}, {"A": "fairseq-main/examples/pointer_generator/preprocess.py", "B": "fairseq-main/examples/pointer_generator/preprocess.py:argparse"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/fixed_schedule.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/fixed_schedule.py:typing"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/fixed_schedule.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/fixed_schedule.py:omegaconf"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/fixed_schedule.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/fixed_schedule.py:dataclasses"}, {"A": "fairseq-main/examples/pointer_generator/pointer_generator_src/transformer_pg.py", "B": "fairseq-main/examples/pointer_generator/pointer_generator_src/transformer_pg.py:typing"}, {"A": "fairseq-main/examples/pointer_generator/pointer_generator_src/transformer_pg.py", "B": "fairseq-main/examples/pointer_generator/pointer_generator_src/transformer_pg.py:torch"}, {"A": "fairseq-main/examples/bart/summarize.py", "B": "fairseq-main/examples/bart/summarize.py:argparse"}, {"A": "fairseq-main/examples/bart/summarize.py", "B": "fairseq-main/examples/bart/summarize.py:torch"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/triangular_lr_scheduler.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/triangular_lr_scheduler.py:typing"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/triangular_lr_scheduler.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/triangular_lr_scheduler.py:dataclasses"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/triangular_lr_scheduler.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/triangular_lr_scheduler.py:omegaconf"}, {"A": "fairseq-main/examples/speech_to_text/prep_mustc_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mustc_data.py:typing"}, {"A": "fairseq-main/examples/speech_to_text/prep_mustc_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mustc_data.py:pandas"}, {"A": "fairseq-main/examples/speech_to_text/prep_mustc_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mustc_data.py:tqdm"}, {"A": "fairseq-main/examples/speech_to_text/prep_mustc_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mustc_data.py:pathlib"}, {"A": "fairseq-main/examples/speech_to_text/prep_mustc_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mustc_data.py:torch"}, {"A": "fairseq-main/examples/speech_to_text/prep_mustc_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mustc_data.py:numpy"}, {"A": "fairseq-main/examples/speech_to_text/prep_mustc_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mustc_data.py:argparse"}, {"A": "fairseq-main/examples/speech_to_text/prep_mustc_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mustc_data.py:soundfile"}, {"A": "fairseq-main/examples/speech_to_text/prep_mustc_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mustc_data.py:tempfile"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/inverse_square_root_schedule.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/inverse_square_root_schedule.py:typing"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/inverse_square_root_schedule.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/inverse_square_root_schedule.py:dataclasses"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/inverse_square_root_schedule.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/inverse_square_root_schedule.py:omegaconf"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/pass_through.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/pass_through.py:dataclasses"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/reduce_lr_on_plateau.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/reduce_lr_on_plateau.py:typing"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/reduce_lr_on_plateau.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/reduce_lr_on_plateau.py:torch"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/reduce_lr_on_plateau.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/reduce_lr_on_plateau.py:dataclasses"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/reduce_lr_on_plateau.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/reduce_lr_on_plateau.py:omegaconf"}, {"A": "fairseq-main/examples/speech_to_text/prep_covost_data.py", "B": "fairseq-main/examples/speech_to_text/prep_covost_data.py:typing"}, {"A": "fairseq-main/examples/speech_to_text/prep_covost_data.py", "B": "fairseq-main/examples/speech_to_text/prep_covost_data.py:torchaudio"}, {"A": "fairseq-main/examples/speech_to_text/prep_covost_data.py", "B": "fairseq-main/examples/speech_to_text/prep_covost_data.py:pandas"}, {"A": "fairseq-main/examples/speech_to_text/prep_covost_data.py", "B": "fairseq-main/examples/speech_to_text/prep_covost_data.py:tqdm"}, {"A": "fairseq-main/examples/speech_to_text/prep_covost_data.py", "B": "fairseq-main/examples/speech_to_text/prep_covost_data.py:pathlib"}, {"A": "fairseq-main/examples/speech_to_text/prep_covost_data.py", "B": "fairseq-main/examples/speech_to_text/prep_covost_data.py:torch"}, {"A": "fairseq-main/examples/speech_to_text/prep_covost_data.py", "B": "fairseq-main/examples/speech_to_text/prep_covost_data.py:argparse"}, {"A": "fairseq-main/examples/speech_to_text/prep_covost_data.py", "B": "fairseq-main/examples/speech_to_text/prep_covost_data.py:tempfile"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/step_lr_scheduler.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/step_lr_scheduler.py:typing"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/step_lr_scheduler.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/step_lr_scheduler.py:dataclasses"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/step_lr_scheduler.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/step_lr_scheduler.py:omegaconf"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/fairseq_lr_scheduler.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/fairseq_lr_scheduler.py:argparse"}, {"A": "fairseq-main/examples/speech_to_text/data_utils.py", "B": "fairseq-main/examples/speech_to_text/data_utils.py:typing"}, {"A": "fairseq-main/examples/speech_to_text/data_utils.py", "B": "fairseq-main/examples/speech_to_text/data_utils.py:pandas"}, {"A": "fairseq-main/examples/speech_to_text/data_utils.py", "B": "fairseq-main/examples/speech_to_text/data_utils.py:functools"}, {"A": "fairseq-main/examples/speech_to_text/data_utils.py", "B": "fairseq-main/examples/speech_to_text/data_utils.py:tqdm"}, {"A": "fairseq-main/examples/speech_to_text/data_utils.py", "B": "fairseq-main/examples/speech_to_text/data_utils.py:pathlib"}, {"A": "fairseq-main/examples/speech_to_text/data_utils.py", "B": "fairseq-main/examples/speech_to_text/data_utils.py:torch"}, {"A": "fairseq-main/examples/speech_to_text/data_utils.py", "B": "fairseq-main/examples/speech_to_text/data_utils.py:numpy"}, {"A": "fairseq-main/examples/speech_to_text/data_utils.py", "B": "fairseq-main/examples/speech_to_text/data_utils.py:multiprocessing"}, {"A": "fairseq-main/examples/speech_to_text/data_utils.py", "B": "fairseq-main/examples/speech_to_text/data_utils.py:soundfile"}, {"A": "fairseq-main/examples/speech_to_text/data_utils.py", "B": "fairseq-main/examples/speech_to_text/data_utils.py:sentencepiece"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/__init__.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/__init__.py:omegaconf"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/cosine_lr_scheduler.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/cosine_lr_scheduler.py:typing"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/cosine_lr_scheduler.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/cosine_lr_scheduler.py:dataclasses"}, {"A": "fairseq-main/fairseq/optim/lr_scheduler/cosine_lr_scheduler.py", "B": "fairseq-main/fairseq/optim/lr_scheduler/cosine_lr_scheduler.py:omegaconf"}, {"A": "fairseq-main/fairseq/models/fairseq_decoder.py", "B": "fairseq-main/fairseq/models/fairseq_decoder.py:typing"}, {"A": "fairseq-main/fairseq/models/fairseq_decoder.py", "B": "fairseq-main/fairseq/models/fairseq_decoder.py:torch"}, {"A": "fairseq-main/fairseq/models/transformer_from_pretrained_xlm.py", "B": "fairseq-main/fairseq/models/transformer_from_pretrained_xlm.py:typing"}, {"A": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py:typing"}, {"A": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py:pandas"}, {"A": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py:tqdm"}, {"A": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py:pathlib"}, {"A": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py:torch"}, {"A": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py:argparse"}, {"A": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py:soundfile"}, {"A": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py", "B": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py:tempfile"}, {"A": "fairseq-main/fairseq/models/fairseq_model.py", "B": "fairseq-main/fairseq/models/fairseq_model.py:typing"}, {"A": "fairseq-main/fairseq/models/fairseq_model.py", "B": "fairseq-main/fairseq/models/fairseq_model.py:torch"}, {"A": "fairseq-main/fairseq/models/fairseq_model.py", "B": "fairseq-main/fairseq/models/fairseq_model.py:omegaconf"}, {"A": "fairseq-main/fairseq/models/fairseq_model.py", "B": "fairseq-main/fairseq/models/fairseq_model.py:argparse"}, {"A": "fairseq-main/fairseq/models/fairseq_incremental_decoder.py", "B": "fairseq-main/fairseq/models/fairseq_incremental_decoder.py:typing"}, {"A": "fairseq-main/fairseq/models/fairseq_incremental_decoder.py", "B": "fairseq-main/fairseq/models/fairseq_incremental_decoder.py:torch"}, {"A": "fairseq-main/examples/speech_to_text/prep_librispeech_data.py", "B": "fairseq-main/examples/speech_to_text/prep_librispeech_data.py:torchaudio"}, {"A": "fairseq-main/examples/speech_to_text/prep_librispeech_data.py", "B": "fairseq-main/examples/speech_to_text/prep_librispeech_data.py:pandas"}, {"A": "fairseq-main/examples/speech_to_text/prep_librispeech_data.py", "B": "fairseq-main/examples/speech_to_text/prep_librispeech_data.py:tqdm"}, {"A": "fairseq-main/examples/speech_to_text/prep_librispeech_data.py", "B": "fairseq-main/examples/speech_to_text/prep_librispeech_data.py:pathlib"}, {"A": "fairseq-main/examples/speech_to_text/prep_librispeech_data.py", "B": "fairseq-main/examples/speech_to_text/prep_librispeech_data.py:argparse"}, {"A": "fairseq-main/examples/speech_to_text/prep_librispeech_data.py", "B": "fairseq-main/examples/speech_to_text/prep_librispeech_data.py:tempfile"}, {"A": "fairseq-main/fairseq/models/fconv_self_att.py", "B": "fairseq-main/fairseq/models/fconv_self_att.py:torch"}, {"A": "fairseq-main/fairseq/models/fairseq_encoder.py", "B": "fairseq-main/fairseq/models/fairseq_encoder.py:typing"}, {"A": "fairseq-main/fairseq/models/fairseq_encoder.py", "B": "fairseq-main/fairseq/models/fairseq_encoder.py:torch"}, {"A": "fairseq-main/examples/speech_to_text/seg_mustc_data.py", "B": "fairseq-main/examples/speech_to_text/seg_mustc_data.py:tqdm"}, {"A": "fairseq-main/examples/speech_to_text/seg_mustc_data.py", "B": "fairseq-main/examples/speech_to_text/seg_mustc_data.py:pathlib"}, {"A": "fairseq-main/examples/speech_to_text/seg_mustc_data.py", "B": "fairseq-main/examples/speech_to_text/seg_mustc_data.py:argparse"}, {"A": "fairseq-main/examples/speech_to_text/seg_mustc_data.py", "B": "fairseq-main/examples/speech_to_text/seg_mustc_data.py:soundfile"}, {"A": "fairseq-main/fairseq/models/masked_lm.py", "B": "fairseq-main/fairseq/models/masked_lm.py:torch"}, {"A": "fairseq-main/fairseq/models/lightconv.py", "B": "fairseq-main/fairseq/models/lightconv.py:torch"}, {"A": "fairseq-main/fairseq/models/lstm.py", "B": "fairseq-main/fairseq/models/lstm.py:typing"}, {"A": "fairseq-main/fairseq/models/lstm.py", "B": "fairseq-main/fairseq/models/lstm.py:torch"}, {"A": "fairseq-main/fairseq/models/distributed_fairseq_model.py", "B": "fairseq-main/fairseq/models/distributed_fairseq_model.py:torch"}, {"A": "fairseq-main/fairseq/models/distributed_fairseq_model.py", "B": "fairseq-main/fairseq/models/distributed_fairseq_model.py:signal"}, {"A": "fairseq-main/scripts/average_checkpoints.py", "B": "fairseq-main/scripts/average_checkpoints.py:torch"}, {"A": "fairseq-main/scripts/average_checkpoints.py", "B": "fairseq-main/scripts/average_checkpoints.py:argparse"}, {"A": "fairseq-main/scripts/average_checkpoints.py", "B": "fairseq-main/scripts/average_checkpoints.py:re"}, {"A": "fairseq-main/fairseq/models/fconv.py", "B": "fairseq-main/fairseq/models/fconv.py:torch"}, {"A": "fairseq-main/scripts/split_train_valid_docs.py", "B": "fairseq-main/scripts/split_train_valid_docs.py:random"}, {"A": "fairseq-main/scripts/split_train_valid_docs.py", "B": "fairseq-main/scripts/split_train_valid_docs.py:argparse"}, {"A": "fairseq-main/fairseq/models/transformer_ulm.py", "B": "fairseq-main/fairseq/models/transformer_ulm.py:typing"}, {"A": "fairseq-main/fairseq/models/transformer_ulm.py", "B": "fairseq-main/fairseq/models/transformer_ulm.py:torch"}, {"A": "fairseq-main/fairseq/models/transformer_ulm.py", "B": "fairseq-main/fairseq/models/transformer_ulm.py:dataclasses"}, {"A": "fairseq-main/fairseq/models/transformer_ulm.py", "B": "fairseq-main/fairseq/models/transformer_ulm.py:numpy"}, {"A": "fairseq-main/scripts/spm_encode.py", "B": "fairseq-main/scripts/spm_encode.py:__future__"}, {"A": "fairseq-main/scripts/spm_encode.py", "B": "fairseq-main/scripts/spm_encode.py:contextlib"}, {"A": "fairseq-main/scripts/spm_encode.py", "B": "fairseq-main/scripts/spm_encode.py:argparse"}, {"A": "fairseq-main/scripts/spm_encode.py", "B": "fairseq-main/scripts/spm_encode.py:sentencepiece"}, {"A": "fairseq-main/fairseq/models/transformer_lm.py", "B": "fairseq-main/fairseq/models/transformer_lm.py:typing"}, {"A": "fairseq-main/fairseq/models/transformer_lm.py", "B": "fairseq-main/fairseq/models/transformer_lm.py:omegaconf"}, {"A": "fairseq-main/fairseq/models/transformer_lm.py", "B": "fairseq-main/fairseq/models/transformer_lm.py:dataclasses"}, {"A": "fairseq-main/scripts/count_docs.py", "B": "fairseq-main/scripts/count_docs.py:numpy"}, {"A": "fairseq-main/scripts/count_docs.py", "B": "fairseq-main/scripts/count_docs.py:argparse"}, {"A": "fairseq-main/fairseq/models/model_utils.py", "B": "fairseq-main/fairseq/models/model_utils.py:typing"}, {"A": "fairseq-main/fairseq/models/model_utils.py", "B": "fairseq-main/fairseq/models/model_utils.py:torch"}, {"A": "fairseq-main/scripts/rm_pt.py", "B": "fairseq-main/scripts/rm_pt.py:argparse"}, {"A": "fairseq-main/scripts/rm_pt.py", "B": "fairseq-main/scripts/rm_pt.py:re"}, {"A": "fairseq-main/fairseq/models/__init__.py", "B": "fairseq-main/fairseq/models/__init__.py:omegaconf"}, {"A": "fairseq-main/fairseq/models/__init__.py", "B": "fairseq-main/fairseq/models/__init__.py:contextlib"}, {"A": "fairseq-main/fairseq/models/__init__.py", "B": "fairseq-main/fairseq/models/__init__.py:argparse"}, {"A": "fairseq-main/fairseq/models/__init__.py", "B": "fairseq-main/fairseq/models/__init__.py:hydra"}, {"A": "fairseq-main/scripts/spm_decode.py", "B": "fairseq-main/scripts/spm_decode.py:argparse"}, {"A": "fairseq-main/scripts/spm_decode.py", "B": "fairseq-main/scripts/spm_decode.py:__future__"}, {"A": "fairseq-main/scripts/spm_decode.py", "B": "fairseq-main/scripts/spm_decode.py:sentencepiece"}, {"A": "fairseq-main/scripts/spm_train.py", "B": "fairseq-main/scripts/spm_train.py:__future__"}, {"A": "fairseq-main/scripts/spm_train.py", "B": "fairseq-main/scripts/spm_train.py:sentencepiece"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec.py:typing"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec.py:torch"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec.py:dataclasses"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec.py:omegaconf"}, {"A": "fairseq-main/scripts/shard_docs.py", "B": "fairseq-main/scripts/shard_docs.py:contextlib"}, {"A": "fairseq-main/scripts/shard_docs.py", "B": "fairseq-main/scripts/shard_docs.py:argparse"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec2.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec2.py:typing"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec2.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec2.py:torch"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec2.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec2.py:dataclasses"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec2.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec2.py:numpy"}, {"A": "fairseq-main/scripts/build_sym_alignment.py", "B": "fairseq-main/scripts/build_sym_alignment.py:argparse"}, {"A": "fairseq-main/scripts/read_binarized.py", "B": "fairseq-main/scripts/read_binarized.py:argparse"}, {"A": "fairseq-main/scripts/constraints/extract.py", "B": "fairseq-main/scripts/constraints/extract.py:random"}, {"A": "fairseq-main/scripts/constraints/extract.py", "B": "fairseq-main/scripts/constraints/extract.py:argparse"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py:typing"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py:torch"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py:dataclasses"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py:numpy"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py:omegaconf"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py:contextlib"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py:argparse"}, {"A": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py:re"}, {"A": "fairseq-main/tests/test_character_token_embedder.py", "B": "fairseq-main/tests/test_character_token_embedder.py:torch"}, {"A": "fairseq-main/tests/test_backtranslation_dataset.py", "B": "fairseq-main/tests/test_backtranslation_dataset.py:torch"}, {"A": "fairseq-main/tests/test_huffman.py", "B": "fairseq-main/tests/test_huffman.py:typing"}, {"A": "fairseq-main/tests/test_huffman.py", "B": "fairseq-main/tests/test_huffman.py:tempfile"}, {"A": "fairseq-main/fairseq/models/wav2vec/utils.py", "B": "fairseq-main/fairseq/models/wav2vec/utils.py:torch"}, {"A": "fairseq-main/tests/test_multi_corpus_sampled_dataset.py", "B": "fairseq-main/tests/test_multi_corpus_sampled_dataset.py:torch"}, {"A": "fairseq-main/tests/test_multi_corpus_sampled_dataset.py", "B": "fairseq-main/tests/test_multi_corpus_sampled_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/models/roberta/model.py", "B": "fairseq-main/fairseq/models/roberta/model.py:omegaconf"}, {"A": "fairseq-main/fairseq/models/roberta/model.py", "B": "fairseq-main/fairseq/models/roberta/model.py:torch"}, {"A": "fairseq-main/tests/test_multi_corpus_dataset.py", "B": "fairseq-main/tests/test_multi_corpus_dataset.py:torch"}, {"A": "fairseq-main/tests/test_average_checkpoints.py", "B": "fairseq-main/tests/test_average_checkpoints.py:scripts"}, {"A": "fairseq-main/tests/test_average_checkpoints.py", "B": "fairseq-main/tests/test_average_checkpoints.py:torch"}, {"A": "fairseq-main/tests/test_average_checkpoints.py", "B": "fairseq-main/tests/test_average_checkpoints.py:numpy"}, {"A": "fairseq-main/tests/test_average_checkpoints.py", "B": "fairseq-main/tests/test_average_checkpoints.py:tempfile"}, {"A": "fairseq-main/fairseq/models/roberta/hub_interface.py", "B": "fairseq-main/fairseq/models/roberta/hub_interface.py:numpy"}, {"A": "fairseq-main/fairseq/models/roberta/hub_interface.py", "B": "fairseq-main/fairseq/models/roberta/hub_interface.py:spacy"}, {"A": "fairseq-main/fairseq/models/roberta/hub_interface.py", "B": "fairseq-main/fairseq/models/roberta/hub_interface.py:torch"}, {"A": "fairseq-main/tests/test_noising.py", "B": "fairseq-main/tests/test_noising.py:typing"}, {"A": "fairseq-main/tests/test_noising.py", "B": "fairseq-main/tests/test_noising.py:torch"}, {"A": "fairseq-main/fairseq/models/roberta/alignment_utils.py", "B": "fairseq-main/fairseq/models/roberta/alignment_utils.py:typing"}, {"A": "fairseq-main/fairseq/models/roberta/alignment_utils.py", "B": "fairseq-main/fairseq/models/roberta/alignment_utils.py:torch"}, {"A": "fairseq-main/fairseq/models/roberta/alignment_utils.py", "B": "fairseq-main/fairseq/models/roberta/alignment_utils.py:spacy"}, {"A": "fairseq-main/tests/test_binaries.py", "B": "fairseq-main/tests/test_binaries.py:typing"}, {"A": "fairseq-main/tests/test_binaries.py", "B": "fairseq-main/tests/test_binaries.py:torch"}, {"A": "fairseq-main/tests/test_binaries.py", "B": "fairseq-main/tests/test_binaries.py:random"}, {"A": "fairseq-main/tests/test_binaries.py", "B": "fairseq-main/tests/test_binaries.py:tempfile"}, {"A": "fairseq-main/tests/test_binaries.py", "B": "fairseq-main/tests/test_binaries.py:contextlib"}, {"A": "fairseq-main/tests/test_binaries.py", "B": "fairseq-main/tests/test_binaries.py:json"}, {"A": "fairseq-main/fairseq/models/speech_to_speech/s2s_conformer.py", "B": "fairseq-main/fairseq/models/speech_to_speech/s2s_conformer.py:pathlib"}, {"A": "fairseq-main/fairseq/models/speech_to_speech/s2s_conformer.py", "B": "fairseq-main/fairseq/models/speech_to_speech/s2s_conformer.py:torch"}, {"A": "fairseq-main/fairseq/models/speech_to_speech/modules.py", "B": "fairseq-main/fairseq/models/speech_to_speech/modules.py:torch"}, {"A": "fairseq-main/fairseq/models/speech_to_speech/s2s_transformer.py", "B": "fairseq-main/fairseq/models/speech_to_speech/s2s_transformer.py:typing"}, {"A": "fairseq-main/fairseq/models/speech_to_speech/s2s_transformer.py", "B": "fairseq-main/fairseq/models/speech_to_speech/s2s_transformer.py:pathlib"}, {"A": "fairseq-main/fairseq/models/speech_to_speech/s2s_transformer.py", "B": "fairseq-main/fairseq/models/speech_to_speech/s2s_transformer.py:torch"}, {"A": "fairseq-main/tests/test_online_backtranslation.py", "B": "fairseq-main/tests/test_online_backtranslation.py:typing"}, {"A": "fairseq-main/tests/test_online_backtranslation.py", "B": "fairseq-main/tests/test_online_backtranslation.py:pathlib"}, {"A": "fairseq-main/tests/test_online_backtranslation.py", "B": "fairseq-main/tests/test_online_backtranslation.py:torch"}, {"A": "fairseq-main/tests/test_online_backtranslation.py", "B": "fairseq-main/tests/test_online_backtranslation.py:tempfile"}, {"A": "fairseq-main/fairseq/models/transformer/transformer_encoder.py", "B": "fairseq-main/fairseq/models/transformer/transformer_encoder.py:typing"}, {"A": "fairseq-main/fairseq/models/transformer/transformer_encoder.py", "B": "fairseq-main/fairseq/models/transformer/transformer_encoder.py:torch"}, {"A": "fairseq-main/fairseq/models/transformer/transformer_decoder.py", "B": "fairseq-main/fairseq/models/transformer/transformer_decoder.py:typing"}, {"A": "fairseq-main/fairseq/models/transformer/transformer_decoder.py", "B": "fairseq-main/fairseq/models/transformer/transformer_decoder.py:torch"}, {"A": "fairseq-main/tests/test_dictionary.py", "B": "fairseq-main/tests/test_dictionary.py:torch"}, {"A": "fairseq-main/tests/test_dictionary.py", "B": "fairseq-main/tests/test_dictionary.py:tempfile"}, {"A": "fairseq-main/fairseq/models/transformer/transformer_config.py", "B": "fairseq-main/fairseq/models/transformer/transformer_config.py:typing"}, {"A": "fairseq-main/fairseq/models/transformer/transformer_config.py", "B": "fairseq-main/fairseq/models/transformer/transformer_config.py:dataclasses"}, {"A": "fairseq-main/fairseq/models/transformer/transformer_config.py", "B": "fairseq-main/fairseq/models/transformer/transformer_config.py:re"}, {"A": "fairseq-main/fairseq/models/transformer/transformer_config.py", "B": "fairseq-main/fairseq/models/transformer/transformer_config.py:omegaconf"}, {"A": "fairseq-main/tests/test_reproducibility.py", "B": "fairseq-main/tests/test_reproducibility.py:torch"}, {"A": "fairseq-main/tests/test_reproducibility.py", "B": "fairseq-main/tests/test_reproducibility.py:tempfile"}, {"A": "fairseq-main/tests/test_reproducibility.py", "B": "fairseq-main/tests/test_reproducibility.py:json"}, {"A": "fairseq-main/tests/test_multihead_attention.py", "B": "fairseq-main/tests/test_multihead_attention.py:torch"}, {"A": "fairseq-main/fairseq/models/transformer/transformer_base.py", "B": "fairseq-main/fairseq/models/transformer/transformer_base.py:typing"}, {"A": "fairseq-main/fairseq/models/transformer/transformer_base.py", "B": "fairseq-main/fairseq/models/transformer/transformer_base.py:torch"}, {"A": "fairseq-main/tests/test_sparse_multihead_attention.py", "B": "fairseq-main/tests/test_sparse_multihead_attention.py:torch"}, {"A": "fairseq-main/tests/test_label_smoothing.py", "B": "fairseq-main/tests/test_label_smoothing.py:torch"}, {"A": "fairseq-main/tests/test_label_smoothing.py", "B": "fairseq-main/tests/test_label_smoothing.py:argparse"}, {"A": "fairseq-main/fairseq/models/hubert/hubert_asr.py", "B": "fairseq-main/fairseq/models/hubert/hubert_asr.py:typing"}, {"A": "fairseq-main/fairseq/models/hubert/hubert_asr.py", "B": "fairseq-main/fairseq/models/hubert/hubert_asr.py:torch"}, {"A": "fairseq-main/fairseq/models/hubert/hubert_asr.py", "B": "fairseq-main/fairseq/models/hubert/hubert_asr.py:dataclasses"}, {"A": "fairseq-main/fairseq/models/hubert/hubert_asr.py", "B": "fairseq-main/fairseq/models/hubert/hubert_asr.py:omegaconf"}, {"A": "fairseq-main/fairseq/models/hubert/hubert_asr.py", "B": "fairseq-main/fairseq/models/hubert/hubert_asr.py:contextlib"}, {"A": "fairseq-main/fairseq/models/hubert/hubert_asr.py", "B": "fairseq-main/fairseq/models/hubert/hubert_asr.py:argparse"}, {"A": "fairseq-main/tests/test_checkpoint_utils.py", "B": "fairseq-main/tests/test_checkpoint_utils.py:torch"}, {"A": "fairseq-main/tests/test_checkpoint_utils.py", "B": "fairseq-main/tests/test_checkpoint_utils.py:omegaconf"}, {"A": "fairseq-main/tests/test_checkpoint_utils.py", "B": "fairseq-main/tests/test_checkpoint_utils.py:contextlib"}, {"A": "fairseq-main/tests/test_checkpoint_utils.py", "B": "fairseq-main/tests/test_checkpoint_utils.py:tempfile"}, {"A": "fairseq-main/fairseq/models/hubert/hubert.py", "B": "fairseq-main/fairseq/models/hubert/hubert.py:typing"}, {"A": "fairseq-main/fairseq/models/hubert/hubert.py", "B": "fairseq-main/fairseq/models/hubert/hubert.py:torch"}, {"A": "fairseq-main/fairseq/models/hubert/hubert.py", "B": "fairseq-main/fairseq/models/hubert/hubert.py:dataclasses"}, {"A": "fairseq-main/fairseq/models/hubert/hubert.py", "B": "fairseq-main/fairseq/models/hubert/hubert.py:numpy"}, {"A": "fairseq-main/fairseq/models/hubert/hubert.py", "B": "fairseq-main/fairseq/models/hubert/hubert.py:omegaconf"}, {"A": "fairseq-main/tests/test_lm_context_window.py", "B": "fairseq-main/tests/test_lm_context_window.py:torch"}, {"A": "fairseq-main/tests/test_file_io.py", "B": "fairseq-main/tests/test_file_io.py:typing"}, {"A": "fairseq-main/tests/test_file_io.py", "B": "fairseq-main/tests/test_file_io.py:tempfile"}, {"A": "fairseq-main/fairseq/models/huggingface/hf_gpt2.py", "B": "fairseq-main/fairseq/models/huggingface/hf_gpt2.py:typing"}, {"A": "fairseq-main/fairseq/models/huggingface/hf_gpt2.py", "B": "fairseq-main/fairseq/models/huggingface/hf_gpt2.py:torch"}, {"A": "fairseq-main/fairseq/models/huggingface/hf_gpt2.py", "B": "fairseq-main/fairseq/models/huggingface/hf_gpt2.py:transformers"}, {"A": "fairseq-main/tests/test_file_chunker_utils.py", "B": "fairseq-main/tests/test_file_chunker_utils.py:typing"}, {"A": "fairseq-main/tests/test_file_chunker_utils.py", "B": "fairseq-main/tests/test_file_chunker_utils.py:tempfile"}, {"A": "fairseq-main/tests/test_utils.py", "B": "fairseq-main/tests/test_utils.py:torch"}, {"A": "fairseq-main/fairseq/models/nat/levenshtein_transformer.py", "B": "fairseq-main/fairseq/models/nat/levenshtein_transformer.py:torch"}, {"A": "fairseq-main/tests/test_hf_hub.py", "B": "fairseq-main/tests/test_hf_hub.py:torch"}, {"A": "fairseq-main/fairseq/models/nat/levenshtein_utils.py", "B": "fairseq-main/fairseq/models/nat/levenshtein_utils.py:torch"}, {"A": "fairseq-main/fairseq/models/nat/nonautoregressive_transformer.py", "B": "fairseq-main/fairseq/models/nat/nonautoregressive_transformer.py:torch"}, {"A": "fairseq-main/tests/test_roberta.py", "B": "fairseq-main/tests/test_roberta.py:typing"}, {"A": "fairseq-main/tests/test_roberta.py", "B": "fairseq-main/tests/test_roberta.py:functools"}, {"A": "fairseq-main/tests/test_roberta.py", "B": "fairseq-main/tests/test_roberta.py:torch"}, {"A": "fairseq-main/fairseq/models/nat/nonautoregressive_ensembles.py", "B": "fairseq-main/fairseq/models/nat/nonautoregressive_ensembles.py:torch"}, {"A": "fairseq-main/fairseq/models/nat/insertion_transformer.py", "B": "fairseq-main/fairseq/models/nat/insertion_transformer.py:numpy"}, {"A": "fairseq-main/fairseq/models/nat/insertion_transformer.py", "B": "fairseq-main/fairseq/models/nat/insertion_transformer.py:torch"}, {"A": "fairseq-main/tests/test_memory_efficient_fp16.py", "B": "fairseq-main/tests/test_memory_efficient_fp16.py:torch"}, {"A": "fairseq-main/tests/test_memory_efficient_fp16.py", "B": "fairseq-main/tests/test_memory_efficient_fp16.py:omegaconf"}, {"A": "fairseq-main/tests/test_memory_efficient_fp16.py", "B": "fairseq-main/tests/test_memory_efficient_fp16.py:argparse"}, {"A": "fairseq-main/fairseq/models/nat/fairseq_nat_model.py", "B": "fairseq-main/fairseq/models/nat/fairseq_nat_model.py:torch"}, {"A": "fairseq-main/tests/test_binarizer.py", "B": "fairseq-main/tests/test_binarizer.py:typing"}, {"A": "fairseq-main/tests/test_binarizer.py", "B": "fairseq-main/tests/test_binarizer.py:tempfile"}, {"A": "fairseq-main/fairseq/models/nat/iterative_nonautoregressive_transformer.py", "B": "fairseq-main/fairseq/models/nat/iterative_nonautoregressive_transformer.py:torch"}, {"A": "fairseq-main/tests/test_data_utils.py", "B": "fairseq-main/tests/test_data_utils.py:numpy"}, {"A": "fairseq-main/tests/test_sequence_scorer.py", "B": "fairseq-main/tests/test_sequence_scorer.py:torch"}, {"A": "fairseq-main/tests/test_sequence_scorer.py", "B": "fairseq-main/tests/test_sequence_scorer.py:argparse"}, {"A": "fairseq-main/fairseq/models/text_to_speech/tts_transformer.py", "B": "fairseq-main/fairseq/models/text_to_speech/tts_transformer.py:typing"}, {"A": "fairseq-main/fairseq/models/text_to_speech/tts_transformer.py", "B": "fairseq-main/fairseq/models/text_to_speech/tts_transformer.py:torch"}, {"A": "fairseq-main/tests/test_fp16_optimizer.py", "B": "fairseq-main/tests/test_fp16_optimizer.py:torch"}, {"A": "fairseq-main/tests/test_fp16_optimizer.py", "B": "fairseq-main/tests/test_fp16_optimizer.py:omegaconf"}, {"A": "fairseq-main/tests/test_train.py", "B": "fairseq-main/tests/test_train.py:torch"}, {"A": "fairseq-main/tests/test_train.py", "B": "fairseq-main/tests/test_train.py:omegaconf"}, {"A": "fairseq-main/tests/test_train.py", "B": "fairseq-main/tests/test_train.py:contextlib"}, {"A": "fairseq-main/fairseq/models/text_to_speech/hub_interface.py", "B": "fairseq-main/fairseq/models/text_to_speech/hub_interface.py:typing"}, {"A": "fairseq-main/fairseq/models/text_to_speech/hub_interface.py", "B": "fairseq-main/fairseq/models/text_to_speech/hub_interface.py:pathlib"}, {"A": "fairseq-main/fairseq/models/text_to_speech/hub_interface.py", "B": "fairseq-main/fairseq/models/text_to_speech/hub_interface.py:torch"}, {"A": "fairseq-main/fairseq/models/text_to_speech/hub_interface.py", "B": "fairseq-main/fairseq/models/text_to_speech/hub_interface.py:hanziconv"}, {"A": "fairseq-main/fairseq/models/text_to_speech/hub_interface.py", "B": "fairseq-main/fairseq/models/text_to_speech/hub_interface.py:random"}, {"A": "fairseq-main/fairseq/models/text_to_speech/hub_interface.py", "B": "fairseq-main/fairseq/models/text_to_speech/hub_interface.py:sentencepiece"}, {"A": "fairseq-main/tests/test_dataset.py", "B": "fairseq-main/tests/test_dataset.py:typing"}, {"A": "fairseq-main/fairseq/models/text_to_speech/vocoder.py", "B": "fairseq-main/fairseq/models/text_to_speech/vocoder.py:typing"}, {"A": "fairseq-main/fairseq/models/text_to_speech/vocoder.py", "B": "fairseq-main/fairseq/models/text_to_speech/vocoder.py:torch"}, {"A": "fairseq-main/fairseq/models/text_to_speech/vocoder.py", "B": "fairseq-main/fairseq/models/text_to_speech/vocoder.py:numpy"}, {"A": "fairseq-main/fairseq/models/text_to_speech/vocoder.py", "B": "fairseq-main/fairseq/models/text_to_speech/vocoder.py:json"}, {"A": "fairseq-main/tests/test_dataclass_utils.py", "B": "fairseq-main/tests/test_dataclass_utils.py:argparse"}, {"A": "fairseq-main/tests/test_dataclass_utils.py", "B": "fairseq-main/tests/test_dataclass_utils.py:dataclasses"}, {"A": "fairseq-main/tests/test_sequence_generator.py", "B": "fairseq-main/tests/test_sequence_generator.py:torch"}, {"A": "fairseq-main/tests/test_sequence_generator.py", "B": "fairseq-main/tests/test_sequence_generator.py:numpy"}, {"A": "fairseq-main/tests/test_sequence_generator.py", "B": "fairseq-main/tests/test_sequence_generator.py:argparse"}, {"A": "fairseq-main/tests/test_sequence_generator.py", "B": "fairseq-main/tests/test_sequence_generator.py:tempfile"}, {"A": "fairseq-main/fairseq/models/text_to_speech/fastspeech2.py", "B": "fairseq-main/fairseq/models/text_to_speech/fastspeech2.py:torch"}, {"A": "fairseq-main/fairseq/models/text_to_speech/tacotron2.py", "B": "fairseq-main/fairseq/models/text_to_speech/tacotron2.py:torch"}, {"A": "fairseq-main/tests/test_token_block_dataset.py", "B": "fairseq-main/tests/test_token_block_dataset.py:torch"}, {"A": "fairseq-main/fairseq/models/bart/model.py", "B": "fairseq-main/fairseq/models/bart/model.py:typing"}, {"A": "fairseq-main/fairseq/models/bart/model.py", "B": "fairseq-main/fairseq/models/bart/model.py:torch"}, {"A": "fairseq-main/tests/test_amp_optimizer.py", "B": "fairseq-main/tests/test_amp_optimizer.py:torch"}, {"A": "fairseq-main/tests/test_amp_optimizer.py", "B": "fairseq-main/tests/test_amp_optimizer.py:argparse"}, {"A": "fairseq-main/fairseq/models/bart/hub_interface.py", "B": "fairseq-main/fairseq/models/bart/hub_interface.py:typing"}, {"A": "fairseq-main/fairseq/models/bart/hub_interface.py", "B": "fairseq-main/fairseq/models/bart/hub_interface.py:torch"}, {"A": "fairseq-main/fairseq/models/bart/hub_interface.py", "B": "fairseq-main/fairseq/models/bart/hub_interface.py:numpy"}, {"A": "fairseq-main/fairseq/models/bart/hub_interface.py", "B": "fairseq-main/fairseq/models/bart/hub_interface.py:omegaconf"}, {"A": "fairseq-main/tests/test_constraints.py", "B": "fairseq-main/tests/test_constraints.py:typing"}, {"A": "fairseq-main/tests/test_constraints.py", "B": "fairseq-main/tests/test_constraints.py:torch"}, {"A": "fairseq-main/tests/test_lstm_jitable.py", "B": "fairseq-main/tests/test_lstm_jitable.py:torch"}, {"A": "fairseq-main/tests/test_lstm_jitable.py", "B": "fairseq-main/tests/test_lstm_jitable.py:tempfile"}, {"A": "fairseq-main/tests/test_lstm_jitable.py", "B": "fairseq-main/tests/test_lstm_jitable.py:argparse"}, {"A": "fairseq-main/fairseq/models/speech_to_text/xm_transformer.py", "B": "fairseq-main/fairseq/models/speech_to_text/xm_transformer.py:typing"}, {"A": "fairseq-main/fairseq/models/speech_to_text/xm_transformer.py", "B": "fairseq-main/fairseq/models/speech_to_text/xm_transformer.py:torch"}, {"A": "fairseq-main/fairseq/models/speech_to_text/xm_transformer.py", "B": "fairseq-main/fairseq/models/speech_to_text/xm_transformer.py:numpy"}, {"A": "fairseq-main/tests/test_convtbc.py", "B": "fairseq-main/tests/test_convtbc.py:torch"}, {"A": "fairseq-main/fairseq/models/speech_to_text/hub_interface.py", "B": "fairseq-main/fairseq/models/speech_to_text/hub_interface.py:typing"}, {"A": "fairseq-main/fairseq/models/speech_to_text/hub_interface.py", "B": "fairseq-main/fairseq/models/speech_to_text/hub_interface.py:torchaudio"}, {"A": "fairseq-main/fairseq/models/speech_to_text/hub_interface.py", "B": "fairseq-main/fairseq/models/speech_to_text/hub_interface.py:torch"}, {"A": "fairseq-main/fairseq/models/speech_to_text/hub_interface.py", "B": "fairseq-main/fairseq/models/speech_to_text/hub_interface.py:argparse"}, {"A": "fairseq-main/tests/test_activation_checkpointing.py", "B": "fairseq-main/tests/test_activation_checkpointing.py:torch"}, {"A": "fairseq-main/tests/utils.py", "B": "fairseq-main/tests/utils.py:typing"}, {"A": "fairseq-main/tests/utils.py", "B": "fairseq-main/tests/utils.py:torch"}, {"A": "fairseq-main/tests/utils.py", "B": "fairseq-main/tests/utils.py:random"}, {"A": "fairseq-main/tests/utils.py", "B": "fairseq-main/tests/utils.py:argparse"}, {"A": "fairseq-main/tests/utils.py", "B": "fairseq-main/tests/utils.py:json"}, {"A": "fairseq-main/tests/test_resampling_dataset.py", "B": "fairseq-main/tests/test_resampling_dataset.py:numpy"}, {"A": "fairseq-main/tests/test_ema.py", "B": "fairseq-main/tests/test_ema.py:typing"}, {"A": "fairseq-main/tests/test_ema.py", "B": "fairseq-main/tests/test_ema.py:torch"}, {"A": "fairseq-main/tests/test_ema.py", "B": "fairseq-main/tests/test_ema.py:dataclasses"}, {"A": "fairseq-main/fairseq/models/speech_to_text/utils.py", "B": "fairseq-main/fairseq/models/speech_to_text/utils.py:typing"}, {"A": "fairseq-main/fairseq/models/speech_to_text/utils.py", "B": "fairseq-main/fairseq/models/speech_to_text/utils.py:torch"}, {"A": "fairseq-main/tests/test_export.py", "B": "fairseq-main/tests/test_export.py:torch"}, {"A": "fairseq-main/tests/test_export.py", "B": "fairseq-main/tests/test_export.py:tempfile"}, {"A": "fairseq-main/tests/test_export.py", "B": "fairseq-main/tests/test_export.py:argparse"}, {"A": "fairseq-main/fairseq/models/speech_to_text/modules/augmented_memory_attention.py", "B": "fairseq-main/fairseq/models/speech_to_text/modules/augmented_memory_attention.py:typing"}, {"A": "fairseq-main/fairseq/models/speech_to_text/modules/augmented_memory_attention.py", "B": "fairseq-main/fairseq/models/speech_to_text/modules/augmented_memory_attention.py:torch"}, {"A": "fairseq-main/tests/test_concat_dataset.py", "B": "fairseq-main/tests/test_concat_dataset.py:torch"}, {"A": "fairseq-main/fairseq/models/speech_to_text/modules/emformer.py", "B": "fairseq-main/fairseq/models/speech_to_text/modules/emformer.py:typing"}, {"A": "fairseq-main/fairseq/models/speech_to_text/modules/emformer.py", "B": "fairseq-main/fairseq/models/speech_to_text/modules/emformer.py:functools"}, {"A": "fairseq-main/fairseq/models/speech_to_text/modules/emformer.py", "B": "fairseq-main/fairseq/models/speech_to_text/modules/emformer.py:torch"}, {"A": "fairseq-main/fairseq/models/speech_to_text/modules/emformer.py", "B": "fairseq-main/fairseq/models/speech_to_text/modules/emformer.py:re"}, {"A": "fairseq-main/tests/gpu/test_ema_gpu.py", "B": "fairseq-main/tests/gpu/test_ema_gpu.py:typing"}, {"A": "fairseq-main/tests/gpu/test_ema_gpu.py", "B": "fairseq-main/tests/gpu/test_ema_gpu.py:torch"}, {"A": "fairseq-main/tests/gpu/test_ema_gpu.py", "B": "fairseq-main/tests/gpu/test_ema_gpu.py:dataclasses"}, {"A": "fairseq-main/fairseq/tasks/audio_pretraining.py", "B": "fairseq-main/fairseq/tasks/audio_pretraining.py:typing"}, {"A": "fairseq-main/fairseq/tasks/audio_pretraining.py", "B": "fairseq-main/fairseq/tasks/audio_pretraining.py:dataclasses"}, {"A": "fairseq-main/fairseq/tasks/audio_pretraining.py", "B": "fairseq-main/fairseq/tasks/audio_pretraining.py:omegaconf"}, {"A": "fairseq-main/fairseq/tasks/audio_pretraining.py", "B": "fairseq-main/fairseq/tasks/audio_pretraining.py:argparse"}, {"A": "fairseq-main/tests/gpu/test_binaries_gpu.py", "B": "fairseq-main/tests/gpu/test_binaries_gpu.py:torch"}, {"A": "fairseq-main/tests/gpu/test_binaries_gpu.py", "B": "fairseq-main/tests/gpu/test_binaries_gpu.py:tempfile"}, {"A": "fairseq-main/tests/gpu/test_binaries_gpu.py", "B": "fairseq-main/tests/gpu/test_binaries_gpu.py:contextlib"}, {"A": "fairseq-main/tests/gpu/test_binaries_gpu.py", "B": "fairseq-main/tests/gpu/test_binaries_gpu.py:json"}, {"A": "fairseq-main/fairseq/tasks/translation.py", "B": "fairseq-main/fairseq/tasks/translation.py:sacrebleu"}, {"A": "fairseq-main/fairseq/tasks/translation.py", "B": "fairseq-main/fairseq/tasks/translation.py:typing"}, {"A": "fairseq-main/fairseq/tasks/translation.py", "B": "fairseq-main/fairseq/tasks/translation.py:torch"}, {"A": "fairseq-main/fairseq/tasks/translation.py", "B": "fairseq-main/fairseq/tasks/translation.py:dataclasses"}, {"A": "fairseq-main/fairseq/tasks/translation.py", "B": "fairseq-main/fairseq/tasks/translation.py:numpy"}, {"A": "fairseq-main/fairseq/tasks/translation.py", "B": "fairseq-main/fairseq/tasks/translation.py:omegaconf"}, {"A": "fairseq-main/fairseq/tasks/translation.py", "B": "fairseq-main/fairseq/tasks/translation.py:inspect"}, {"A": "fairseq-main/fairseq/tasks/translation.py", "B": "fairseq-main/fairseq/tasks/translation.py:argparse"}, {"A": "fairseq-main/fairseq/tasks/translation.py", "B": "fairseq-main/fairseq/tasks/translation.py:json"}, {"A": "fairseq-main/tests/speech_recognition/test_collaters.py", "B": "fairseq-main/tests/speech_recognition/test_collaters.py:torch"}, {"A": "fairseq-main/tests/speech_recognition/test_collaters.py", "B": "fairseq-main/tests/speech_recognition/test_collaters.py:numpy"}, {"A": "fairseq-main/tests/speech_recognition/test_data_utils.py", "B": "fairseq-main/tests/speech_recognition/test_data_utils.py:torch"}, {"A": "fairseq-main/fairseq/tasks/multilingual_masked_lm.py", "B": "fairseq-main/fairseq/tasks/multilingual_masked_lm.py:torch"}, {"A": "fairseq-main/fairseq/tasks/multilingual_masked_lm.py", "B": "fairseq-main/fairseq/tasks/multilingual_masked_lm.py:numpy"}, {"A": "fairseq-main/tests/distributed/test_module_proxy_wrapper.py", "B": "fairseq-main/tests/distributed/test_module_proxy_wrapper.py:torch"}, {"A": "fairseq-main/tests/distributed/test_distributed_timeout_wrapper.py", "B": "fairseq-main/tests/distributed/test_distributed_timeout_wrapper.py:torch"}, {"A": "fairseq-main/tests/distributed/test_distributed_timeout_wrapper.py", "B": "fairseq-main/tests/distributed/test_distributed_timeout_wrapper.py:signal"}, {"A": "fairseq-main/fairseq/tasks/translation_lev.py", "B": "fairseq-main/fairseq/tasks/translation_lev.py:torch"}, {"A": "fairseq-main/fairseq/tasks/translation_lev.py", "B": "fairseq-main/fairseq/tasks/translation_lev.py:dataclasses"}, {"A": "fairseq-main/tests/distributed/test_bmuf.py", "B": "fairseq-main/tests/distributed/test_bmuf.py:functools"}, {"A": "fairseq-main/tests/distributed/test_bmuf.py", "B": "fairseq-main/tests/distributed/test_bmuf.py:torch"}, {"A": "fairseq-main/tests/distributed/test_bmuf.py", "B": "fairseq-main/tests/distributed/test_bmuf.py:multiprocessing"}, {"A": "fairseq-main/tests/distributed/test_bmuf.py", "B": "fairseq-main/tests/distributed/test_bmuf.py:omegaconf"}, {"A": "fairseq-main/tests/distributed/test_bmuf.py", "B": "fairseq-main/tests/distributed/test_bmuf.py:random"}, {"A": "fairseq-main/tests/distributed/test_bmuf.py", "B": "fairseq-main/tests/distributed/test_bmuf.py:argparse"}, {"A": "fairseq-main/fairseq/tasks/fairseq_task.py", "B": "fairseq-main/fairseq/tasks/fairseq_task.py:typing"}, {"A": "fairseq-main/fairseq/tasks/fairseq_task.py", "B": "fairseq-main/fairseq/tasks/fairseq_task.py:torch"}, {"A": "fairseq-main/fairseq/tasks/fairseq_task.py", "B": "fairseq-main/fairseq/tasks/fairseq_task.py:omegaconf"}, {"A": "fairseq-main/fairseq/tasks/fairseq_task.py", "B": "fairseq-main/fairseq/tasks/fairseq_task.py:argparse"}, {"A": "fairseq-main/fairseq/tasks/hubert_pretraining.py", "B": "fairseq-main/fairseq/tasks/hubert_pretraining.py:typing"}, {"A": "fairseq-main/fairseq/tasks/hubert_pretraining.py", "B": "fairseq-main/fairseq/tasks/hubert_pretraining.py:dataclasses"}, {"A": "fairseq-main/fairseq/tasks/hubert_pretraining.py", "B": "fairseq-main/fairseq/tasks/hubert_pretraining.py:numpy"}, {"A": "fairseq-main/fairseq/tasks/hubert_pretraining.py", "B": "fairseq-main/fairseq/tasks/hubert_pretraining.py:omegaconf"}, {"A": "fairseq-main/tests/distributed/test_utils.py", "B": "fairseq-main/tests/distributed/test_utils.py:functools"}, {"A": "fairseq-main/tests/distributed/test_utils.py", "B": "fairseq-main/tests/distributed/test_utils.py:torch"}, {"A": "fairseq-main/tests/distributed/utils.py", "B": "fairseq-main/tests/distributed/utils.py:torch"}, {"A": "fairseq-main/tests/distributed/utils.py", "B": "fairseq-main/tests/distributed/utils.py:tempfile"}, {"A": "fairseq-main/tests/distributed/utils.py", "B": "fairseq-main/tests/distributed/utils.py:functools"}, {"A": "fairseq-main/fairseq/tasks/multilingual_language_modeling.py", "B": "fairseq-main/fairseq/tasks/multilingual_language_modeling.py:typing"}, {"A": "fairseq-main/fairseq/tasks/multilingual_language_modeling.py", "B": "fairseq-main/fairseq/tasks/multilingual_language_modeling.py:torch"}, {"A": "fairseq-main/fairseq/tasks/multilingual_language_modeling.py", "B": "fairseq-main/fairseq/tasks/multilingual_language_modeling.py:dataclasses"}, {"A": "fairseq-main/fairseq/tasks/multilingual_language_modeling.py", "B": "fairseq-main/fairseq/tasks/multilingual_language_modeling.py:numpy"}, {"A": "fairseq-main/fairseq/tasks/multilingual_language_modeling.py", "B": "fairseq-main/fairseq/tasks/multilingual_language_modeling.py:omegaconf"}, {"A": "fairseq-main/tests/speech/test_tts_transformer.py", "B": "fairseq-main/tests/speech/test_tts_transformer.py:tqdm"}, {"A": "fairseq-main/tests/speech/test_tts_transformer.py", "B": "fairseq-main/tests/speech/test_tts_transformer.py:torch"}, {"A": "fairseq-main/fairseq/tasks/multilingual_denoising.py", "B": "fairseq-main/fairseq/tasks/multilingual_denoising.py:numpy"}, {"A": "fairseq-main/tests/speech/test_dualinput_s2t_transformer.py", "B": "fairseq-main/tests/speech/test_dualinput_s2t_transformer.py:tqdm"}, {"A": "fairseq-main/tests/speech/test_dualinput_s2t_transformer.py", "B": "fairseq-main/tests/speech/test_dualinput_s2t_transformer.py:pathlib"}, {"A": "fairseq-main/tests/speech/test_dualinput_s2t_transformer.py", "B": "fairseq-main/tests/speech/test_dualinput_s2t_transformer.py:torch"}, {"A": "fairseq-main/tests/speech/test_dualinput_s2t_transformer.py", "B": "fairseq-main/tests/speech/test_dualinput_s2t_transformer.py:argparse"}, {"A": "fairseq-main/fairseq/tasks/denoising.py", "B": "fairseq-main/fairseq/tasks/denoising.py:numpy"}, {"A": "fairseq-main/fairseq/tasks/language_modeling.py", "B": "fairseq-main/fairseq/tasks/language_modeling.py:typing"}, {"A": "fairseq-main/fairseq/tasks/language_modeling.py", "B": "fairseq-main/fairseq/tasks/language_modeling.py:torch"}, {"A": "fairseq-main/fairseq/tasks/language_modeling.py", "B": "fairseq-main/fairseq/tasks/language_modeling.py:dataclasses"}, {"A": "fairseq-main/fairseq/tasks/language_modeling.py", "B": "fairseq-main/fairseq/tasks/language_modeling.py:numpy"}, {"A": "fairseq-main/fairseq/tasks/language_modeling.py", "B": "fairseq-main/fairseq/tasks/language_modeling.py:omegaconf"}, {"A": "fairseq-main/tests/speech/test_wav2vec2.py", "B": "fairseq-main/tests/speech/test_wav2vec2.py:torch"}, {"A": "fairseq-main/tests/speech/test_wav2vec2.py", "B": "fairseq-main/tests/speech/test_wav2vec2.py:omegaconf"}, {"A": "fairseq-main/tests/speech/test_fastspeech2.py", "B": "fairseq-main/tests/speech/test_fastspeech2.py:tqdm"}, {"A": "fairseq-main/tests/speech/test_fastspeech2.py", "B": "fairseq-main/tests/speech/test_fastspeech2.py:torch"}, {"A": "fairseq-main/fairseq/tasks/translation_from_pretrained_xlm.py", "B": "fairseq-main/fairseq/tasks/translation_from_pretrained_xlm.py:dataclasses"}, {"A": "fairseq-main/fairseq/tasks/speech_to_text.py", "B": "fairseq-main/fairseq/tasks/speech_to_text.py:pathlib"}, {"A": "fairseq-main/fairseq/tasks/speech_to_text.py", "B": "fairseq-main/fairseq/tasks/speech_to_text.py:argparse"}, {"A": "fairseq-main/tests/speech/__init__.py", "B": "fairseq-main/tests/speech/__init__.py:typing"}, {"A": "fairseq-main/tests/speech/__init__.py", "B": "fairseq-main/tests/speech/__init__.py:tqdm"}, {"A": "fairseq-main/tests/speech/__init__.py", "B": "fairseq-main/tests/speech/__init__.py:pathlib"}, {"A": "fairseq-main/tests/speech/__init__.py", "B": "fairseq-main/tests/speech/__init__.py:torch"}, {"A": "fairseq-main/tests/speech/__init__.py", "B": "fairseq-main/tests/speech/__init__.py:argparse"}, {"A": "fairseq-main/tests/speech/__init__.py", "B": "fairseq-main/tests/speech/__init__.py:re"}, {"A": "fairseq-main/fairseq/tasks/masked_lm.py", "B": "fairseq-main/fairseq/tasks/masked_lm.py:dataclasses"}, {"A": "fairseq-main/fairseq/tasks/masked_lm.py", "B": "fairseq-main/fairseq/tasks/masked_lm.py:numpy"}, {"A": "fairseq-main/fairseq/tasks/masked_lm.py", "B": "fairseq-main/fairseq/tasks/masked_lm.py:omegaconf"}, {"A": "fairseq-main/fairseq/tasks/cross_lingual_lm.py", "B": "fairseq-main/fairseq/tasks/cross_lingual_lm.py:numpy"}, {"A": "fairseq-main/fairseq/tasks/speech_ulm_task.py", "B": "fairseq-main/fairseq/tasks/speech_ulm_task.py:typing"}, {"A": "fairseq-main/fairseq/tasks/speech_ulm_task.py", "B": "fairseq-main/fairseq/tasks/speech_ulm_task.py:torch"}, {"A": "fairseq-main/fairseq/tasks/speech_ulm_task.py", "B": "fairseq-main/fairseq/tasks/speech_ulm_task.py:dataclasses"}, {"A": "fairseq-main/fairseq/tasks/speech_ulm_task.py", "B": "fairseq-main/fairseq/tasks/speech_ulm_task.py:omegaconf"}, {"A": "fairseq-main/fairseq/tasks/translation_from_pretrained_bart.py", "B": "fairseq-main/fairseq/tasks/translation_from_pretrained_bart.py:torch"}, {"A": "fairseq-main/fairseq/tasks/speech_to_speech.py", "B": "fairseq-main/fairseq/tasks/speech_to_speech.py:pathlib"}, {"A": "fairseq-main/fairseq/tasks/speech_to_speech.py", "B": "fairseq-main/fairseq/tasks/speech_to_speech.py:torch"}, {"A": "fairseq-main/fairseq/tasks/speech_to_speech.py", "B": "fairseq-main/fairseq/tasks/speech_to_speech.py:argparse"}, {"A": "fairseq-main/fairseq/tasks/speech_to_speech.py", "B": "fairseq-main/fairseq/tasks/speech_to_speech.py:json"}, {"A": "fairseq-main/fairseq/tasks/translation_multi_simple_epoch.py", "B": "fairseq-main/fairseq/tasks/translation_multi_simple_epoch.py:datetime"}, {"A": "fairseq-main/fairseq/tasks/translation_multi_simple_epoch.py", "B": "fairseq-main/fairseq/tasks/translation_multi_simple_epoch.py:torch"}, {"A": "fairseq-main/fairseq/tasks/text_to_speech.py", "B": "fairseq-main/fairseq/tasks/text_to_speech.py:torchaudio"}, {"A": "fairseq-main/fairseq/tasks/text_to_speech.py", "B": "fairseq-main/fairseq/tasks/text_to_speech.py:torch"}, {"A": "fairseq-main/fairseq/tasks/text_to_speech.py", "B": "fairseq-main/fairseq/tasks/text_to_speech.py:matplotlib"}, {"A": "fairseq-main/fairseq/tasks/text_to_speech.py", "B": "fairseq-main/fairseq/tasks/text_to_speech.py:numpy"}, {"A": "fairseq-main/fairseq/tasks/text_to_speech.py", "B": "fairseq-main/fairseq/tasks/text_to_speech.py:tensorboardX"}, {"A": "fairseq-main/fairseq/tasks/sentence_prediction.py", "B": "fairseq-main/fairseq/tasks/sentence_prediction.py:typing"}, {"A": "fairseq-main/fairseq/tasks/sentence_prediction.py", "B": "fairseq-main/fairseq/tasks/sentence_prediction.py:dataclasses"}, {"A": "fairseq-main/fairseq/tasks/sentence_prediction.py", "B": "fairseq-main/fairseq/tasks/sentence_prediction.py:numpy"}, {"A": "fairseq-main/fairseq/tasks/sentence_prediction.py", "B": "fairseq-main/fairseq/tasks/sentence_prediction.py:omegaconf"}, {"A": "fairseq-main/fairseq/tasks/sentence_prediction.py", "B": "fairseq-main/fairseq/tasks/sentence_prediction.py:contextlib"}, {"A": "fairseq-main/fairseq/tasks/online_backtranslation.py", "B": "fairseq-main/fairseq/tasks/online_backtranslation.py:typing"}, {"A": "fairseq-main/fairseq/tasks/online_backtranslation.py", "B": "fairseq-main/fairseq/tasks/online_backtranslation.py:pathlib"}, {"A": "fairseq-main/fairseq/tasks/online_backtranslation.py", "B": "fairseq-main/fairseq/tasks/online_backtranslation.py:torch"}, {"A": "fairseq-main/fairseq/tasks/online_backtranslation.py", "B": "fairseq-main/fairseq/tasks/online_backtranslation.py:numpy"}, {"A": "fairseq-main/fairseq/tasks/online_backtranslation.py", "B": "fairseq-main/fairseq/tasks/online_backtranslation.py:contextlib"}, {"A": "fairseq-main/fairseq/tasks/online_backtranslation.py", "B": "fairseq-main/fairseq/tasks/online_backtranslation.py:argparse"}, {"A": "fairseq-main/fairseq/tasks/online_backtranslation.py", "B": "fairseq-main/fairseq/tasks/online_backtranslation.py:json"}, {"A": "fairseq-main/fairseq/tasks/legacy_masked_lm.py", "B": "fairseq-main/fairseq/tasks/legacy_masked_lm.py:numpy"}, {"A": "fairseq-main/fairseq/tasks/multilingual_translation.py", "B": "fairseq-main/fairseq/tasks/multilingual_translation.py:torch"}, {"A": "fairseq-main/fairseq/tasks/multilingual_translation.py", "B": "fairseq-main/fairseq/tasks/multilingual_translation.py:contextlib"}, {"A": "fairseq-main/fairseq/tasks/multilingual_translation.py", "B": "fairseq-main/fairseq/tasks/multilingual_translation.py:argparse"}, {"A": "fairseq-main/fairseq/tasks/__init__.py", "B": "fairseq-main/fairseq/tasks/__init__.py:argparse"}, {"A": "fairseq-main/fairseq/tasks/__init__.py", "B": "fairseq-main/fairseq/tasks/__init__.py:hydra"}, {"A": "fairseq-main/fairseq/tasks/audio_finetuning.py", "B": "fairseq-main/fairseq/tasks/audio_finetuning.py:sacrebleu"}, {"A": "fairseq-main/fairseq/tasks/audio_finetuning.py", "B": "fairseq-main/fairseq/tasks/audio_finetuning.py:typing"}, {"A": "fairseq-main/fairseq/tasks/audio_finetuning.py", "B": "fairseq-main/fairseq/tasks/audio_finetuning.py:editdistance"}, {"A": "fairseq-main/fairseq/tasks/audio_finetuning.py", "B": "fairseq-main/fairseq/tasks/audio_finetuning.py:torch"}, {"A": "fairseq-main/fairseq/tasks/audio_finetuning.py", "B": "fairseq-main/fairseq/tasks/audio_finetuning.py:dataclasses"}, {"A": "fairseq-main/fairseq/tasks/audio_finetuning.py", "B": "fairseq-main/fairseq/tasks/audio_finetuning.py:argparse"}, {"A": "fairseq-main/fairseq/tasks/audio_finetuning.py", "B": "fairseq-main/fairseq/tasks/audio_finetuning.py:json"}, {"A": "fairseq-main/fairseq/tasks/sentence_ranking.py", "B": "fairseq-main/fairseq/tasks/sentence_ranking.py:numpy"}, {"A": "fairseq-main/fairseq/modules/positional_encoding.py", "B": "fairseq-main/fairseq/modules/positional_encoding.py:torch"}, {"A": "fairseq-main/fairseq/modules/scalar_bias.py", "B": "fairseq-main/fairseq/modules/scalar_bias.py:torch"}, {"A": "fairseq-main/fairseq/modules/vggblock.py", "B": "fairseq-main/fairseq/modules/vggblock.py:__future__"}, {"A": "fairseq-main/fairseq/modules/vggblock.py", "B": "fairseq-main/fairseq/modules/vggblock.py:torch"}, {"A": "fairseq-main/fairseq/modules/transformer_sentence_encoder_layer.py", "B": "fairseq-main/fairseq/modules/transformer_sentence_encoder_layer.py:typing"}, {"A": "fairseq-main/fairseq/modules/transformer_sentence_encoder_layer.py", "B": "fairseq-main/fairseq/modules/transformer_sentence_encoder_layer.py:torch"}, {"A": "fairseq-main/fairseq/modules/fp32_instance_norm.py", "B": "fairseq-main/fairseq/modules/fp32_instance_norm.py:torch"}, {"A": "fairseq-main/fairseq/modules/fp32_batch_norm.py", "B": "fairseq-main/fairseq/modules/fp32_batch_norm.py:torch"}, {"A": "fairseq-main/fairseq/modules/gumbel_vector_quantizer.py", "B": "fairseq-main/fairseq/modules/gumbel_vector_quantizer.py:torch"}, {"A": "fairseq-main/fairseq/modules/multihead_attention.py", "B": "fairseq-main/fairseq/modules/multihead_attention.py:typing"}, {"A": "fairseq-main/fairseq/modules/multihead_attention.py", "B": "fairseq-main/fairseq/modules/multihead_attention.py:torch"}, {"A": "fairseq-main/fairseq/modules/sparse_transformer_sentence_encoder.py", "B": "fairseq-main/fairseq/modules/sparse_transformer_sentence_encoder.py:torch"}, {"A": "fairseq-main/fairseq/modules/grad_multiply.py", "B": "fairseq-main/fairseq/modules/grad_multiply.py:torch"}, {"A": "fairseq-main/fairseq/modules/sinusoidal_positional_embedding.py", "B": "fairseq-main/fairseq/modules/sinusoidal_positional_embedding.py:typing"}, {"A": "fairseq-main/fairseq/modules/sinusoidal_positional_embedding.py", "B": "fairseq-main/fairseq/modules/sinusoidal_positional_embedding.py:torch"}, {"A": "fairseq-main/fairseq/modules/gelu.py", "B": "fairseq-main/fairseq/modules/gelu.py:torch"}, {"A": "fairseq-main/fairseq/modules/kmeans_vector_quantizer.py", "B": "fairseq-main/fairseq/modules/kmeans_vector_quantizer.py:torch"}, {"A": "fairseq-main/fairseq/modules/sparse_multihead_attention.py", "B": "fairseq-main/fairseq/modules/sparse_multihead_attention.py:torch"}, {"A": "fairseq-main/fairseq/modules/layer_norm.py", "B": "fairseq-main/fairseq/modules/layer_norm.py:apex"}, {"A": "fairseq-main/fairseq/modules/layer_norm.py", "B": "fairseq-main/fairseq/modules/layer_norm.py:torch"}, {"A": "fairseq-main/fairseq/modules/fp32_group_norm.py", "B": "fairseq-main/fairseq/modules/fp32_group_norm.py:torch"}, {"A": "fairseq-main/fairseq/modules/unfold.py", "B": "fairseq-main/fairseq/modules/unfold.py:torch"}, {"A": "fairseq-main/fairseq/modules/linearized_convolution.py", "B": "fairseq-main/fairseq/modules/linearized_convolution.py:typing"}, {"A": "fairseq-main/fairseq/modules/linearized_convolution.py", "B": "fairseq-main/fairseq/modules/linearized_convolution.py:torch"}, {"A": "fairseq-main/fairseq/modules/conformer_layer.py", "B": "fairseq-main/fairseq/modules/conformer_layer.py:typing"}, {"A": "fairseq-main/fairseq/modules/conformer_layer.py", "B": "fairseq-main/fairseq/modules/conformer_layer.py:torch"}, {"A": "fairseq-main/fairseq/modules/character_token_embedder.py", "B": "fairseq-main/fairseq/modules/character_token_embedder.py:typing"}, {"A": "fairseq-main/fairseq/modules/character_token_embedder.py", "B": "fairseq-main/fairseq/modules/character_token_embedder.py:torch"}, {"A": "fairseq-main/fairseq/modules/conv_tbc.py", "B": "fairseq-main/fairseq/modules/conv_tbc.py:torch"}, {"A": "fairseq-main/fairseq/modules/adaptive_softmax.py", "B": "fairseq-main/fairseq/modules/adaptive_softmax.py:torch"}, {"A": "fairseq-main/fairseq/modules/adaptive_softmax.py", "B": "fairseq-main/fairseq/modules/adaptive_softmax.py:functools"}, {"A": "fairseq-main/fairseq/modules/dynamic_convolution.py", "B": "fairseq-main/fairseq/modules/dynamic_convolution.py:torch"}, {"A": "fairseq-main/fairseq/modules/quant_noise.py", "B": "fairseq-main/fairseq/modules/quant_noise.py:torch"}, {"A": "fairseq-main/fairseq/modules/positional_embedding.py", "B": "fairseq-main/fairseq/modules/positional_embedding.py:torch"}, {"A": "fairseq-main/fairseq/modules/lightweight_convolution.py", "B": "fairseq-main/fairseq/modules/lightweight_convolution.py:torch"}, {"A": "fairseq-main/fairseq/modules/fairseq_dropout.py", "B": "fairseq-main/fairseq/modules/fairseq_dropout.py:typing"}, {"A": "fairseq-main/fairseq/modules/fairseq_dropout.py", "B": "fairseq-main/fairseq/modules/fairseq_dropout.py:torch"}, {"A": "fairseq-main/fairseq/modules/location_attention.py", "B": "fairseq-main/fairseq/modules/location_attention.py:torch"}, {"A": "fairseq-main/fairseq/modules/checkpoint_activations.py", "B": "fairseq-main/fairseq/modules/checkpoint_activations.py:typing"}, {"A": "fairseq-main/fairseq/modules/checkpoint_activations.py", "B": "fairseq-main/fairseq/modules/checkpoint_activations.py:torch"}, {"A": "fairseq-main/fairseq/modules/checkpoint_activations.py", "B": "fairseq-main/fairseq/modules/checkpoint_activations.py:functools"}, {"A": "fairseq-main/fairseq/modules/transformer_layer.py", "B": "fairseq-main/fairseq/modules/transformer_layer.py:typing"}, {"A": "fairseq-main/fairseq/modules/transformer_layer.py", "B": "fairseq-main/fairseq/modules/transformer_layer.py:torch"}, {"A": "fairseq-main/fairseq/modules/base_layer.py", "B": "fairseq-main/fairseq/modules/base_layer.py:torch"}, {"A": "fairseq-main/fairseq/modules/espnet_multihead_attention.py", "B": "fairseq-main/fairseq/modules/espnet_multihead_attention.py:torch"}, {"A": "fairseq-main/fairseq/modules/adaptive_input.py", "B": "fairseq-main/fairseq/modules/adaptive_input.py:typing"}, {"A": "fairseq-main/fairseq/modules/adaptive_input.py", "B": "fairseq-main/fairseq/modules/adaptive_input.py:torch"}, {"A": "fairseq-main/fairseq/modules/lstm_cell_with_zoneout.py", "B": "fairseq-main/fairseq/modules/lstm_cell_with_zoneout.py:torch"}, {"A": "fairseq-main/fairseq/modules/layer_drop.py", "B": "fairseq-main/fairseq/modules/layer_drop.py:torch"}, {"A": "fairseq-main/fairseq/modules/beamable_mm.py", "B": "fairseq-main/fairseq/modules/beamable_mm.py:torch"}, {"A": "fairseq-main/fairseq/modules/dynamic_crf_layer.py", "B": "fairseq-main/fairseq/modules/dynamic_crf_layer.py:numpy"}, {"A": "fairseq-main/fairseq/modules/dynamic_crf_layer.py", "B": "fairseq-main/fairseq/modules/dynamic_crf_layer.py:torch"}, {"A": "fairseq-main/fairseq/modules/learned_positional_embedding.py", "B": "fairseq-main/fairseq/modules/learned_positional_embedding.py:typing"}, {"A": "fairseq-main/fairseq/modules/learned_positional_embedding.py", "B": "fairseq-main/fairseq/modules/learned_positional_embedding.py:torch"}, {"A": "fairseq-main/fairseq/modules/same_pad.py", "B": "fairseq-main/fairseq/modules/same_pad.py:torch"}, {"A": "fairseq-main/fairseq/modules/cross_entropy.py", "B": "fairseq-main/fairseq/modules/cross_entropy.py:apex"}, {"A": "fairseq-main/fairseq/modules/cross_entropy.py", "B": "fairseq-main/fairseq/modules/cross_entropy.py:torch"}, {"A": "fairseq-main/fairseq/modules/transpose_last.py", "B": "fairseq-main/fairseq/modules/transpose_last.py:torch"}, {"A": "fairseq-main/fairseq/modules/transformer_sentence_encoder.py", "B": "fairseq-main/fairseq/modules/transformer_sentence_encoder.py:typing"}, {"A": "fairseq-main/fairseq/modules/transformer_sentence_encoder.py", "B": "fairseq-main/fairseq/modules/transformer_sentence_encoder.py:torch"}, {"A": "fairseq-main/fairseq/modules/downsampled_multihead_attention.py", "B": "fairseq-main/fairseq/modules/downsampled_multihead_attention.py:torch"}, {"A": "fairseq-main/fairseq/modules/quantization/scalar/ops.py", "B": "fairseq-main/fairseq/modules/quantization/scalar/ops.py:torch"}, {"A": "fairseq-main/fairseq/modules/quantization/scalar/utils.py", "B": "fairseq-main/fairseq/modules/quantization/scalar/utils.py:torch"}, {"A": "fairseq-main/fairseq/modules/quantization/scalar/modules/qact.py", "B": "fairseq-main/fairseq/modules/quantization/scalar/modules/qact.py:torch"}, {"A": "fairseq-main/fairseq/modules/quantization/scalar/modules/qconv.py", "B": "fairseq-main/fairseq/modules/quantization/scalar/modules/qconv.py:torch"}, {"A": "fairseq-main/fairseq/modules/quantization/scalar/modules/qlinear.py", "B": "fairseq-main/fairseq/modules/quantization/scalar/modules/qlinear.py:torch"}, {"A": "fairseq-main/fairseq/modules/quantization/scalar/modules/qemb.py", "B": "fairseq-main/fairseq/modules/quantization/scalar/modules/qemb.py:torch"}, {"A": "fairseq-main/fairseq/modules/quantization/pq/em.py", "B": "fairseq-main/fairseq/modules/quantization/pq/em.py:torch"}, {"A": "fairseq-main/fairseq/modules/quantization/pq/em.py", "B": "fairseq-main/fairseq/modules/quantization/pq/em.py:random"}, {"A": "fairseq-main/fairseq/modules/quantization/pq/utils.py", "B": "fairseq-main/fairseq/modules/quantization/pq/utils.py:torch"}, {"A": "fairseq-main/fairseq/modules/quantization/pq/utils.py", "B": "fairseq-main/fairseq/modules/quantization/pq/utils.py:numpy"}, {"A": "fairseq-main/fairseq/modules/quantization/pq/utils.py", "B": "fairseq-main/fairseq/modules/quantization/pq/utils.py:re"}, {"A": "fairseq-main/fairseq/modules/quantization/pq/modules/qconv.py", "B": "fairseq-main/fairseq/modules/quantization/pq/modules/qconv.py:numpy"}, {"A": "fairseq-main/fairseq/modules/quantization/pq/modules/qconv.py", "B": "fairseq-main/fairseq/modules/quantization/pq/modules/qconv.py:torch"}, {"A": "fairseq-main/fairseq/modules/quantization/pq/modules/qlinear.py", "B": "fairseq-main/fairseq/modules/quantization/pq/modules/qlinear.py:torch"}, {"A": "fairseq-main/fairseq/modules/quantization/pq/modules/qemb.py", "B": "fairseq-main/fairseq/modules/quantization/pq/modules/qemb.py:torch"}, {"A": "fairseq-main/fairseq/modules/lightconv_layer/lightconv_layer.py", "B": "fairseq-main/fairseq/modules/lightconv_layer/lightconv_layer.py:torch"}, {"A": "fairseq-main/fairseq/modules/dynamicconv_layer/dynamicconv_layer.py", "B": "fairseq-main/fairseq/modules/dynamicconv_layer/dynamicconv_layer.py:torch"}, {"A": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy_with_alignment.py", "B": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy_with_alignment.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy_latency_augmented.py", "B": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy_latency_augmented.py:torch"}, {"A": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy_latency_augmented.py", "B": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy_latency_augmented.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/hubert_criterion.py", "B": "fairseq-main/fairseq/criterions/hubert_criterion.py:typing"}, {"A": "fairseq-main/fairseq/criterions/hubert_criterion.py", "B": "fairseq-main/fairseq/criterions/hubert_criterion.py:torch"}, {"A": "fairseq-main/fairseq/criterions/hubert_criterion.py", "B": "fairseq-main/fairseq/criterions/hubert_criterion.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/hubert_criterion.py", "B": "fairseq-main/fairseq/criterions/hubert_criterion.py:re"}, {"A": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy_with_ctc.py", "B": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy_with_ctc.py:torch"}, {"A": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy_with_ctc.py", "B": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy_with_ctc.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/adaptive_loss.py", "B": "fairseq-main/fairseq/criterions/adaptive_loss.py:torch"}, {"A": "fairseq-main/fairseq/criterions/adaptive_loss.py", "B": "fairseq-main/fairseq/criterions/adaptive_loss.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/adaptive_loss.py", "B": "fairseq-main/fairseq/criterions/adaptive_loss.py:omegaconf"}, {"A": "fairseq-main/fairseq/criterions/nat_loss.py", "B": "fairseq-main/fairseq/criterions/nat_loss.py:torch"}, {"A": "fairseq-main/fairseq/criterions/nat_loss.py", "B": "fairseq-main/fairseq/criterions/nat_loss.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/tacotron2_loss.py", "B": "fairseq-main/fairseq/criterions/tacotron2_loss.py:typing"}, {"A": "fairseq-main/fairseq/criterions/tacotron2_loss.py", "B": "fairseq-main/fairseq/criterions/tacotron2_loss.py:functools"}, {"A": "fairseq-main/fairseq/criterions/tacotron2_loss.py", "B": "fairseq-main/fairseq/criterions/tacotron2_loss.py:torch"}, {"A": "fairseq-main/fairseq/criterions/tacotron2_loss.py", "B": "fairseq-main/fairseq/criterions/tacotron2_loss.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/tacotron2_loss.py", "B": "fairseq-main/fairseq/criterions/tacotron2_loss.py:omegaconf"}, {"A": "fairseq-main/fairseq/criterions/masked_lm.py", "B": "fairseq-main/fairseq/criterions/masked_lm.py:torch"}, {"A": "fairseq-main/fairseq/criterions/masked_lm.py", "B": "fairseq-main/fairseq/criterions/masked_lm.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/masked_lm.py", "B": "fairseq-main/fairseq/criterions/masked_lm.py:omegaconf"}, {"A": "fairseq-main/fairseq/criterions/speech_to_speech_criterion.py", "B": "fairseq-main/fairseq/criterions/speech_to_speech_criterion.py:torch"}, {"A": "fairseq-main/fairseq/criterions/fairseq_criterion.py", "B": "fairseq-main/fairseq/criterions/fairseq_criterion.py:typing"}, {"A": "fairseq-main/fairseq/criterions/fairseq_criterion.py", "B": "fairseq-main/fairseq/criterions/fairseq_criterion.py:torch"}, {"A": "fairseq-main/fairseq/criterions/fairseq_criterion.py", "B": "fairseq-main/fairseq/criterions/fairseq_criterion.py:inspect"}, {"A": "fairseq-main/fairseq/criterions/wav2vec_criterion.py", "B": "fairseq-main/fairseq/criterions/wav2vec_criterion.py:typing"}, {"A": "fairseq-main/fairseq/criterions/wav2vec_criterion.py", "B": "fairseq-main/fairseq/criterions/wav2vec_criterion.py:torch"}, {"A": "fairseq-main/fairseq/criterions/wav2vec_criterion.py", "B": "fairseq-main/fairseq/criterions/wav2vec_criterion.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/sentence_prediction.py", "B": "fairseq-main/fairseq/criterions/sentence_prediction.py:torch"}, {"A": "fairseq-main/fairseq/criterions/sentence_prediction.py", "B": "fairseq-main/fairseq/criterions/sentence_prediction.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/model_criterion.py", "B": "fairseq-main/fairseq/criterions/model_criterion.py:typing"}, {"A": "fairseq-main/fairseq/criterions/model_criterion.py", "B": "fairseq-main/fairseq/criterions/model_criterion.py:torch"}, {"A": "fairseq-main/fairseq/criterions/model_criterion.py", "B": "fairseq-main/fairseq/criterions/model_criterion.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/legacy_masked_lm.py", "B": "fairseq-main/fairseq/criterions/legacy_masked_lm.py:torch"}, {"A": "fairseq-main/fairseq/criterions/speech_ulm_criterion.py", "B": "fairseq-main/fairseq/criterions/speech_ulm_criterion.py:omegaconf"}, {"A": "fairseq-main/fairseq/criterions/speech_ulm_criterion.py", "B": "fairseq-main/fairseq/criterions/speech_ulm_criterion.py:torch"}, {"A": "fairseq-main/fairseq/criterions/speech_ulm_criterion.py", "B": "fairseq-main/fairseq/criterions/speech_ulm_criterion.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/__init__.py", "B": "fairseq-main/fairseq/criterions/__init__.py:omegaconf"}, {"A": "fairseq-main/fairseq/criterions/cross_entropy.py", "B": "fairseq-main/fairseq/criterions/cross_entropy.py:torch"}, {"A": "fairseq-main/fairseq/criterions/cross_entropy.py", "B": "fairseq-main/fairseq/criterions/cross_entropy.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/cross_entropy.py", "B": "fairseq-main/fairseq/criterions/cross_entropy.py:omegaconf"}, {"A": "fairseq-main/fairseq/criterions/sentence_ranking.py", "B": "fairseq-main/fairseq/criterions/sentence_ranking.py:torch"}, {"A": "fairseq-main/fairseq/criterions/fastspeech2_loss.py", "B": "fairseq-main/fairseq/criterions/fastspeech2_loss.py:typing"}, {"A": "fairseq-main/fairseq/criterions/fastspeech2_loss.py", "B": "fairseq-main/fairseq/criterions/fastspeech2_loss.py:torch"}, {"A": "fairseq-main/fairseq/criterions/fastspeech2_loss.py", "B": "fairseq-main/fairseq/criterions/fastspeech2_loss.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy.py", "B": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy.py:torch"}, {"A": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy.py", "B": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy.py:dataclasses"}, {"A": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy.py", "B": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy.py:omegaconf"}, {"A": "fairseq-main/fairseq/criterions/composite_loss.py", "B": "fairseq-main/fairseq/criterions/composite_loss.py:torch"}, {"A": "fairseq-main/fairseq/distributed/distributed_timeout_wrapper.py", "B": "fairseq-main/fairseq/distributed/distributed_timeout_wrapper.py:torch"}, {"A": "fairseq-main/fairseq/distributed/distributed_timeout_wrapper.py", "B": "fairseq-main/fairseq/distributed/distributed_timeout_wrapper.py:signal"}, {"A": "fairseq-main/fairseq/distributed/fully_sharded_data_parallel.py", "B": "fairseq-main/fairseq/distributed/fully_sharded_data_parallel.py:typing"}, {"A": "fairseq-main/fairseq/distributed/fully_sharded_data_parallel.py", "B": "fairseq-main/fairseq/distributed/fully_sharded_data_parallel.py:torch"}, {"A": "fairseq-main/fairseq/distributed/fully_sharded_data_parallel.py", "B": "fairseq-main/fairseq/distributed/fully_sharded_data_parallel.py:contextlib"}, {"A": "fairseq-main/fairseq/distributed/legacy_distributed_data_parallel.py", "B": "fairseq-main/fairseq/distributed/legacy_distributed_data_parallel.py:contextlib"}, {"A": "fairseq-main/fairseq/distributed/legacy_distributed_data_parallel.py", "B": "fairseq-main/fairseq/distributed/legacy_distributed_data_parallel.py:torch"}, {"A": "fairseq-main/fairseq/distributed/tpu_distributed_data_parallel.py", "B": "fairseq-main/fairseq/distributed/tpu_distributed_data_parallel.py:torch"}, {"A": "fairseq-main/fairseq/distributed/utils.py", "B": "fairseq-main/fairseq/distributed/utils.py:typing"}, {"A": "fairseq-main/fairseq/distributed/utils.py", "B": "fairseq-main/fairseq/distributed/utils.py:pickle"}, {"A": "fairseq-main/fairseq/distributed/utils.py", "B": "fairseq-main/fairseq/distributed/utils.py:torch"}, {"A": "fairseq-main/fairseq/distributed/utils.py", "B": "fairseq-main/fairseq/distributed/utils.py:dataclasses"}, {"A": "fairseq-main/fairseq/distributed/utils.py", "B": "fairseq-main/fairseq/distributed/utils.py:omegaconf"}, {"A": "fairseq-main/fairseq/distributed/utils.py", "B": "fairseq-main/fairseq/distributed/utils.py:random"}, {"A": "fairseq-main/fairseq/distributed/utils.py", "B": "fairseq-main/fairseq/distributed/utils.py:argparse"}, {"A": "fairseq-main/fairseq/distributed/module_proxy_wrapper.py", "B": "fairseq-main/fairseq/distributed/module_proxy_wrapper.py:torch"}, {"A": "fairseq-main/fairseq/dataclass/initialize.py", "B": "fairseq-main/fairseq/dataclass/initialize.py:typing"}, {"A": "fairseq-main/fairseq/dataclass/initialize.py", "B": "fairseq-main/fairseq/dataclass/initialize.py:omegaconf"}, {"A": "fairseq-main/fairseq/dataclass/initialize.py", "B": "fairseq-main/fairseq/dataclass/initialize.py:hydra"}, {"A": "fairseq-main/fairseq/dataclass/configs.py", "B": "fairseq-main/fairseq/dataclass/configs.py:typing"}, {"A": "fairseq-main/fairseq/dataclass/configs.py", "B": "fairseq-main/fairseq/dataclass/configs.py:torch"}, {"A": "fairseq-main/fairseq/dataclass/configs.py", "B": "fairseq-main/fairseq/dataclass/configs.py:dataclasses"}, {"A": "fairseq-main/fairseq/dataclass/configs.py", "B": "fairseq-main/fairseq/dataclass/configs.py:omegaconf"}, {"A": "fairseq-main/fairseq/dataclass/constants.py", "B": "fairseq-main/fairseq/dataclass/constants.py:typing"}, {"A": "fairseq-main/fairseq/dataclass/constants.py", "B": "fairseq-main/fairseq/dataclass/constants.py:enum"}, {"A": "fairseq-main/fairseq/dataclass/utils.py", "B": "fairseq-main/fairseq/dataclass/utils.py:typing"}, {"A": "fairseq-main/fairseq/dataclass/utils.py", "B": "fairseq-main/fairseq/dataclass/utils.py:enum"}, {"A": "fairseq-main/fairseq/dataclass/utils.py", "B": "fairseq-main/fairseq/dataclass/utils.py:dataclasses"}, {"A": "fairseq-main/fairseq/dataclass/utils.py", "B": "fairseq-main/fairseq/dataclass/utils.py:omegaconf"}, {"A": "fairseq-main/fairseq/dataclass/utils.py", "B": "fairseq-main/fairseq/dataclass/utils.py:inspect"}, {"A": "fairseq-main/fairseq/dataclass/utils.py", "B": "fairseq-main/fairseq/dataclass/utils.py:argparse"}, {"A": "fairseq-main/fairseq/dataclass/utils.py", "B": "fairseq-main/fairseq/dataclass/utils.py:re"}, {"A": "fairseq-main/fairseq/dataclass/utils.py", "B": "fairseq-main/fairseq/dataclass/utils.py:hydra"}, {"A": "fairseq-main/fairseq/scoring/bleu.py", "B": "fairseq-main/fairseq/scoring/bleu.py:sacrebleu"}, {"A": "fairseq-main/fairseq/scoring/bleu.py", "B": "fairseq-main/fairseq/scoring/bleu.py:torch"}, {"A": "fairseq-main/fairseq/scoring/bleu.py", "B": "fairseq-main/fairseq/scoring/bleu.py:dataclasses"}, {"A": "fairseq-main/fairseq/scoring/meteor.py", "B": "fairseq-main/fairseq/scoring/meteor.py:numpy"}, {"A": "fairseq-main/fairseq/scoring/meteor.py", "B": "fairseq-main/fairseq/scoring/meteor.py:nltk"}, {"A": "fairseq-main/fairseq/scoring/meteor.py", "B": "fairseq-main/fairseq/scoring/meteor.py:dataclasses"}, {"A": "fairseq-main/fairseq/scoring/bertscore.py", "B": "fairseq-main/fairseq/scoring/bertscore.py:numpy"}, {"A": "fairseq-main/fairseq/scoring/bertscore.py", "B": "fairseq-main/fairseq/scoring/bertscore.py:dataclasses"}, {"A": "fairseq-main/fairseq/scoring/tokenizer.py", "B": "fairseq-main/fairseq/scoring/tokenizer.py:sacrebleu"}, {"A": "fairseq-main/fairseq/scoring/tokenizer.py", "B": "fairseq-main/fairseq/scoring/tokenizer.py:unicodedata"}, {"A": "fairseq-main/fairseq/scoring/chrf.py", "B": "fairseq-main/fairseq/scoring/chrf.py:sacrebleu"}, {"A": "fairseq-main/fairseq/scoring/chrf.py", "B": "fairseq-main/fairseq/scoring/chrf.py:dataclasses"}, {"A": "fairseq-main/fairseq/scoring/__init__.py", "B": "fairseq-main/fairseq/scoring/__init__.py:omegaconf"}, {"A": "fairseq-main/fairseq/scoring/wer.py", "B": "fairseq-main/fairseq/scoring/wer.py:editdistance"}, {"A": "fairseq-main/fairseq/scoring/wer.py", "B": "fairseq-main/fairseq/scoring/wer.py:dataclasses"}, {"A": "fairseq-main/fairseq/benchmark/dummy_mt.py", "B": "fairseq-main/fairseq/benchmark/dummy_mt.py:numpy"}, {"A": "fairseq-main/fairseq/benchmark/dummy_mt.py", "B": "fairseq-main/fairseq/benchmark/dummy_mt.py:torch"}, {"A": "fairseq-main/fairseq/benchmark/dummy_model.py", "B": "fairseq-main/fairseq/benchmark/dummy_model.py:torch"}, {"A": "fairseq-main/fairseq/benchmark/dummy_masked_lm.py", "B": "fairseq-main/fairseq/benchmark/dummy_masked_lm.py:typing"}, {"A": "fairseq-main/fairseq/benchmark/dummy_masked_lm.py", "B": "fairseq-main/fairseq/benchmark/dummy_masked_lm.py:torch"}, {"A": "fairseq-main/fairseq/benchmark/dummy_masked_lm.py", "B": "fairseq-main/fairseq/benchmark/dummy_masked_lm.py:dataclasses"}, {"A": "fairseq-main/fairseq/benchmark/dummy_masked_lm.py", "B": "fairseq-main/fairseq/benchmark/dummy_masked_lm.py:omegaconf"}, {"A": "fairseq-main/fairseq/benchmark/dummy_lm.py", "B": "fairseq-main/fairseq/benchmark/dummy_lm.py:typing"}, {"A": "fairseq-main/fairseq/benchmark/dummy_lm.py", "B": "fairseq-main/fairseq/benchmark/dummy_lm.py:torch"}, {"A": "fairseq-main/fairseq/benchmark/dummy_lm.py", "B": "fairseq-main/fairseq/benchmark/dummy_lm.py:dataclasses"}, {"A": "fairseq-main/fairseq/benchmark/dummy_lm.py", "B": "fairseq-main/fairseq/benchmark/dummy_lm.py:omegaconf"}, {"A": "fairseq-main/fairseq/logging/progress_bar.py", "B": "fairseq-main/fairseq/logging/progress_bar.py:azureml"}, {"A": "fairseq-main/fairseq/logging/progress_bar.py", "B": "fairseq-main/fairseq/logging/progress_bar.py:typing"}, {"A": "fairseq-main/fairseq/logging/progress_bar.py", "B": "fairseq-main/fairseq/logging/progress_bar.py:wandb"}, {"A": "fairseq-main/fairseq/logging/progress_bar.py", "B": "fairseq-main/fairseq/logging/progress_bar.py:functools"}, {"A": "fairseq-main/fairseq/logging/progress_bar.py", "B": "fairseq-main/fairseq/logging/progress_bar.py:tqdm"}, {"A": "fairseq-main/fairseq/logging/progress_bar.py", "B": "fairseq-main/fairseq/logging/progress_bar.py:torch"}, {"A": "fairseq-main/fairseq/logging/progress_bar.py", "B": "fairseq-main/fairseq/logging/progress_bar.py:contextlib"}, {"A": "fairseq-main/fairseq/logging/progress_bar.py", "B": "fairseq-main/fairseq/logging/progress_bar.py:json"}, {"A": "fairseq-main/fairseq/logging/progress_bar.py", "B": "fairseq-main/fairseq/logging/progress_bar.py:tensorboardX"}, {"A": "fairseq-main/fairseq/logging/metrics.py", "B": "fairseq-main/fairseq/logging/metrics.py:typing"}, {"A": "fairseq-main/fairseq/logging/metrics.py", "B": "fairseq-main/fairseq/logging/metrics.py:contextlib"}, {"A": "fairseq-main/fairseq/logging/meters.py", "B": "fairseq-main/fairseq/logging/meters.py:typing"}, {"A": "fairseq-main/fairseq/logging/meters.py", "B": "fairseq-main/fairseq/logging/meters.py:torch"}, {"A": "fairseq-main/fairseq/logging/meters.py", "B": "fairseq-main/fairseq/logging/meters.py:numpy"}, {"A": "fairseq-main/fairseq/data/iterators.py", "B": "fairseq-main/fairseq/data/iterators.py:torch"}, {"A": "fairseq-main/fairseq/data/iterators.py", "B": "fairseq-main/fairseq/data/iterators.py:numpy"}, {"A": "fairseq-main/fairseq/data/codedataset.py", "B": "fairseq-main/fairseq/data/codedataset.py:librosa"}, {"A": "fairseq-main/fairseq/data/codedataset.py", "B": "fairseq-main/fairseq/data/codedataset.py:pathlib"}, {"A": "fairseq-main/fairseq/data/codedataset.py", "B": "fairseq-main/fairseq/data/codedataset.py:torch"}, {"A": "fairseq-main/fairseq/data/codedataset.py", "B": "fairseq-main/fairseq/data/codedataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/codedataset.py", "B": "fairseq-main/fairseq/data/codedataset.py:random"}, {"A": "fairseq-main/fairseq/data/codedataset.py", "B": "fairseq-main/fairseq/data/codedataset.py:soundfile"}, {"A": "fairseq-main/fairseq/data/codedataset.py", "B": "fairseq-main/fairseq/data/codedataset.py:json"}, {"A": "fairseq-main/fairseq/data/codedataset.py", "B": "fairseq-main/fairseq/data/codedataset.py:scipy"}, {"A": "fairseq-main/fairseq/data/denoising_dataset.py", "B": "fairseq-main/fairseq/data/denoising_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/denoising_dataset.py", "B": "fairseq-main/fairseq/data/denoising_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/plasma_utils.py", "B": "fairseq-main/fairseq/data/plasma_utils.py:typing"}, {"A": "fairseq-main/fairseq/data/plasma_utils.py", "B": "fairseq-main/fairseq/data/plasma_utils.py:tempfile"}, {"A": "fairseq-main/fairseq/data/plasma_utils.py", "B": "fairseq-main/fairseq/data/plasma_utils.py:hashlib"}, {"A": "fairseq-main/fairseq/data/plasma_utils.py", "B": "fairseq-main/fairseq/data/plasma_utils.py:pyarrow"}, {"A": "fairseq-main/fairseq/data/plasma_utils.py", "B": "fairseq-main/fairseq/data/plasma_utils.py:json"}, {"A": "fairseq-main/fairseq/data/multi_corpus_sampled_dataset.py", "B": "fairseq-main/fairseq/data/multi_corpus_sampled_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/multi_corpus_sampled_dataset.py", "B": "fairseq-main/fairseq/data/multi_corpus_sampled_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/mask_tokens_dataset.py", "B": "fairseq-main/fairseq/data/mask_tokens_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/mask_tokens_dataset.py", "B": "fairseq-main/fairseq/data/mask_tokens_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/mask_tokens_dataset.py", "B": "fairseq-main/fairseq/data/mask_tokens_dataset.py:functools"}, {"A": "fairseq-main/fairseq/data/append_token_dataset.py", "B": "fairseq-main/fairseq/data/append_token_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/append_token_dataset.py", "B": "fairseq-main/fairseq/data/append_token_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/fairseq_dataset.py", "B": "fairseq-main/fairseq/data/fairseq_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/fairseq_dataset.py", "B": "fairseq-main/fairseq/data/fairseq_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/multi_corpus_dataset.py", "B": "fairseq-main/fairseq/data/multi_corpus_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/multi_corpus_dataset.py", "B": "fairseq-main/fairseq/data/multi_corpus_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/transform_eos_dataset.py", "B": "fairseq-main/fairseq/data/transform_eos_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/concat_dataset.py", "B": "fairseq-main/fairseq/data/concat_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/concat_dataset.py", "B": "fairseq-main/fairseq/data/concat_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/colorize_dataset.py", "B": "fairseq-main/fairseq/data/colorize_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/add_target_dataset.py", "B": "fairseq-main/fairseq/data/add_target_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/prepend_token_dataset.py", "B": "fairseq-main/fairseq/data/prepend_token_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/prepend_token_dataset.py", "B": "fairseq-main/fairseq/data/prepend_token_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/resampling_dataset.py", "B": "fairseq-main/fairseq/data/resampling_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/id_dataset.py", "B": "fairseq-main/fairseq/data/id_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/noising.py", "B": "fairseq-main/fairseq/data/noising.py:numpy"}, {"A": "fairseq-main/fairseq/data/noising.py", "B": "fairseq-main/fairseq/data/noising.py:torch"}, {"A": "fairseq-main/fairseq/data/shorten_dataset.py", "B": "fairseq-main/fairseq/data/shorten_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/indexed_dataset.py", "B": "fairseq-main/fairseq/data/indexed_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/indexed_dataset.py", "B": "fairseq-main/fairseq/data/indexed_dataset.py:functools"}, {"A": "fairseq-main/fairseq/data/indexed_dataset.py", "B": "fairseq-main/fairseq/data/indexed_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/indexed_dataset.py", "B": "fairseq-main/fairseq/data/indexed_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/numel_dataset.py", "B": "fairseq-main/fairseq/data/numel_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/numel_dataset.py", "B": "fairseq-main/fairseq/data/numel_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/raw_label_dataset.py", "B": "fairseq-main/fairseq/data/raw_label_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/transform_eos_lang_pair_dataset.py", "B": "fairseq-main/fairseq/data/transform_eos_lang_pair_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/transform_eos_lang_pair_dataset.py", "B": "fairseq-main/fairseq/data/transform_eos_lang_pair_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/backtranslation_dataset.py", "B": "fairseq-main/fairseq/data/backtranslation_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/fasta_dataset.py", "B": "fairseq-main/fairseq/data/fasta_dataset.py:pathlib"}, {"A": "fairseq-main/fairseq/data/fasta_dataset.py", "B": "fairseq-main/fairseq/data/fasta_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/fasta_dataset.py", "B": "fairseq-main/fairseq/data/fasta_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/data_utils.py", "B": "fairseq-main/fairseq/data/data_utils.py:typing"}, {"A": "fairseq-main/fairseq/data/data_utils.py", "B": "fairseq-main/fairseq/data/data_utils.py:torch"}, {"A": "fairseq-main/fairseq/data/data_utils.py", "B": "fairseq-main/fairseq/data/data_utils.py:contextlib"}, {"A": "fairseq-main/fairseq/data/data_utils.py", "B": "fairseq-main/fairseq/data/data_utils.py:numpy"}, {"A": "fairseq-main/fairseq/data/data_utils.py", "B": "fairseq-main/fairseq/data/data_utils.py:psutil"}, {"A": "fairseq-main/fairseq/data/data_utils.py", "B": "fairseq-main/fairseq/data/data_utils.py:re"}, {"A": "fairseq-main/fairseq/data/round_robin_zip_datasets.py", "B": "fairseq-main/fairseq/data/round_robin_zip_datasets.py:typing"}, {"A": "fairseq-main/fairseq/data/round_robin_zip_datasets.py", "B": "fairseq-main/fairseq/data/round_robin_zip_datasets.py:numpy"}, {"A": "fairseq-main/fairseq/data/monolingual_dataset.py", "B": "fairseq-main/fairseq/data/monolingual_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/monolingual_dataset.py", "B": "fairseq-main/fairseq/data/monolingual_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/lru_cache_dataset.py", "B": "fairseq-main/fairseq/data/lru_cache_dataset.py:functools"}, {"A": "fairseq-main/fairseq/data/bucket_pad_length_dataset.py", "B": "fairseq-main/fairseq/data/bucket_pad_length_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/bucket_pad_length_dataset.py", "B": "fairseq-main/fairseq/data/bucket_pad_length_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/language_pair_dataset.py", "B": "fairseq-main/fairseq/data/language_pair_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/language_pair_dataset.py", "B": "fairseq-main/fairseq/data/language_pair_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/prepend_dataset.py", "B": "fairseq-main/fairseq/data/prepend_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/prepend_dataset.py", "B": "fairseq-main/fairseq/data/prepend_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/base_wrapper_dataset.py", "B": "fairseq-main/fairseq/data/base_wrapper_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/token_block_dataset.py", "B": "fairseq-main/fairseq/data/token_block_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/token_block_dataset.py", "B": "fairseq-main/fairseq/data/token_block_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/token_block_dataset.py", "B": "fairseq-main/fairseq/data/token_block_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/dictionary.py", "B": "fairseq-main/fairseq/data/dictionary.py:torch"}, {"A": "fairseq-main/fairseq/data/dictionary.py", "B": "fairseq-main/fairseq/data/dictionary.py:multiprocessing"}, {"A": "fairseq-main/fairseq/data/sort_dataset.py", "B": "fairseq-main/fairseq/data/sort_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/subsample_dataset.py", "B": "fairseq-main/fairseq/data/subsample_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/transform_eos_concat_langpair_dataset.py", "B": "fairseq-main/fairseq/data/transform_eos_concat_langpair_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/text_compressor.py", "B": "fairseq-main/fairseq/data/text_compressor.py:enum"}, {"A": "fairseq-main/fairseq/data/nested_dictionary_dataset.py", "B": "fairseq-main/fairseq/data/nested_dictionary_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/concat_sentences_dataset.py", "B": "fairseq-main/fairseq/data/concat_sentences_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/roll_dataset.py", "B": "fairseq-main/fairseq/data/roll_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/lm_context_window_dataset.py", "B": "fairseq-main/fairseq/data/lm_context_window_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/lm_context_window_dataset.py", "B": "fairseq-main/fairseq/data/lm_context_window_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/lm_context_window_dataset.py", "B": "fairseq-main/fairseq/data/lm_context_window_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/audio/speech_to_text_joint_dataset.py", "B": "fairseq-main/fairseq/data/audio/speech_to_text_joint_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/audio/speech_to_text_joint_dataset.py", "B": "fairseq-main/fairseq/data/audio/speech_to_text_joint_dataset.py:pathlib"}, {"A": "fairseq-main/fairseq/data/audio/speech_to_text_joint_dataset.py", "B": "fairseq-main/fairseq/data/audio/speech_to_text_joint_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/audio/speech_to_text_dataset.py", "B": "fairseq-main/fairseq/data/audio/speech_to_text_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/audio/speech_to_text_dataset.py", "B": "fairseq-main/fairseq/data/audio/speech_to_text_dataset.py:pathlib"}, {"A": "fairseq-main/fairseq/data/audio/speech_to_text_dataset.py", "B": "fairseq-main/fairseq/data/audio/speech_to_text_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/audio/speech_to_text_dataset.py", "B": "fairseq-main/fairseq/data/audio/speech_to_text_dataset.py:dataclasses"}, {"A": "fairseq-main/fairseq/data/audio/speech_to_text_dataset.py", "B": "fairseq-main/fairseq/data/audio/speech_to_text_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/audio/speech_to_text_dataset.py", "B": "fairseq-main/fairseq/data/audio/speech_to_text_dataset.py:re"}, {"A": "fairseq-main/fairseq/data/audio/multi_modality_dataset.py", "B": "fairseq-main/fairseq/data/audio/multi_modality_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/audio/multi_modality_dataset.py", "B": "fairseq-main/fairseq/data/audio/multi_modality_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/audio/multi_modality_dataset.py", "B": "fairseq-main/fairseq/data/audio/multi_modality_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/audio/data_cfg.py", "B": "fairseq-main/fairseq/data/audio/data_cfg.py:typing"}, {"A": "fairseq-main/fairseq/data/audio/data_cfg.py", "B": "fairseq-main/fairseq/data/audio/data_cfg.py:pathlib"}, {"A": "fairseq-main/fairseq/data/audio/data_cfg.py", "B": "fairseq-main/fairseq/data/audio/data_cfg.py:argparse"}, {"A": "fairseq-main/fairseq/data/audio/text_to_speech_dataset.py", "B": "fairseq-main/fairseq/data/audio/text_to_speech_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/audio/text_to_speech_dataset.py", "B": "fairseq-main/fairseq/data/audio/text_to_speech_dataset.py:pathlib"}, {"A": "fairseq-main/fairseq/data/audio/text_to_speech_dataset.py", "B": "fairseq-main/fairseq/data/audio/text_to_speech_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/audio/text_to_speech_dataset.py", "B": "fairseq-main/fairseq/data/audio/text_to_speech_dataset.py:dataclasses"}, {"A": "fairseq-main/fairseq/data/audio/text_to_speech_dataset.py", "B": "fairseq-main/fairseq/data/audio/text_to_speech_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/audio/audio_utils.py", "B": "fairseq-main/fairseq/data/audio/audio_utils.py:typing"}, {"A": "fairseq-main/fairseq/data/audio/audio_utils.py", "B": "fairseq-main/fairseq/data/audio/audio_utils.py:librosa"}, {"A": "fairseq-main/fairseq/data/audio/audio_utils.py", "B": "fairseq-main/fairseq/data/audio/audio_utils.py:torchaudio"}, {"A": "fairseq-main/fairseq/data/audio/audio_utils.py", "B": "fairseq-main/fairseq/data/audio/audio_utils.py:pathlib"}, {"A": "fairseq-main/fairseq/data/audio/audio_utils.py", "B": "fairseq-main/fairseq/data/audio/audio_utils.py:torch"}, {"A": "fairseq-main/fairseq/data/audio/audio_utils.py", "B": "fairseq-main/fairseq/data/audio/audio_utils.py:numpy"}, {"A": "fairseq-main/fairseq/data/audio/audio_utils.py", "B": "fairseq-main/fairseq/data/audio/audio_utils.py:soundfile"}, {"A": "fairseq-main/fairseq/data/audio/raw_audio_dataset.py", "B": "fairseq-main/fairseq/data/audio/raw_audio_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/audio/raw_audio_dataset.py", "B": "fairseq-main/fairseq/data/audio/raw_audio_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/audio/raw_audio_dataset.py", "B": "fairseq-main/fairseq/data/audio/raw_audio_dataset.py:pyarrow"}, {"A": "fairseq-main/fairseq/data/audio/raw_audio_dataset.py", "B": "fairseq-main/fairseq/data/audio/raw_audio_dataset.py:soundfile"}, {"A": "fairseq-main/fairseq/data/audio/hubert_dataset.py", "B": "fairseq-main/fairseq/data/audio/hubert_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/audio/hubert_dataset.py", "B": "fairseq-main/fairseq/data/audio/hubert_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/audio/hubert_dataset.py", "B": "fairseq-main/fairseq/data/audio/hubert_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/audio/hubert_dataset.py", "B": "fairseq-main/fairseq/data/audio/hubert_dataset.py:soundfile"}, {"A": "fairseq-main/fairseq/data/audio/frm_text_to_speech_dataset.py", "B": "fairseq-main/fairseq/data/audio/frm_text_to_speech_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/audio/frm_text_to_speech_dataset.py", "B": "fairseq-main/fairseq/data/audio/frm_text_to_speech_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/audio/frm_text_to_speech_dataset.py", "B": "fairseq-main/fairseq/data/audio/frm_text_to_speech_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/audio/speech_to_speech_dataset.py", "B": "fairseq-main/fairseq/data/audio/speech_to_speech_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/audio/speech_to_speech_dataset.py", "B": "fairseq-main/fairseq/data/audio/speech_to_speech_dataset.py:pathlib"}, {"A": "fairseq-main/fairseq/data/audio/speech_to_speech_dataset.py", "B": "fairseq-main/fairseq/data/audio/speech_to_speech_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/audio/speech_to_speech_dataset.py", "B": "fairseq-main/fairseq/data/audio/speech_to_speech_dataset.py:dataclasses"}, {"A": "fairseq-main/fairseq/data/encoders/gpt2_bpe.py", "B": "fairseq-main/fairseq/data/encoders/gpt2_bpe.py:dataclasses"}, {"A": "fairseq-main/fairseq/data/encoders/moses_tokenizer.py", "B": "fairseq-main/fairseq/data/encoders/moses_tokenizer.py:dataclasses"}, {"A": "fairseq-main/fairseq/data/encoders/byte_bpe.py", "B": "fairseq-main/fairseq/data/encoders/byte_bpe.py:sentencepiece"}, {"A": "fairseq-main/fairseq/data/encoders/byte_bpe.py", "B": "fairseq-main/fairseq/data/encoders/byte_bpe.py:dataclasses"}, {"A": "fairseq-main/fairseq/data/encoders/gpt2_bpe_utils.py", "B": "fairseq-main/fairseq/data/encoders/gpt2_bpe_utils.py:regex"}, {"A": "fairseq-main/fairseq/data/encoders/gpt2_bpe_utils.py", "B": "fairseq-main/fairseq/data/encoders/gpt2_bpe_utils.py:json"}, {"A": "fairseq-main/fairseq/data/encoders/gpt2_bpe_utils.py", "B": "fairseq-main/fairseq/data/encoders/gpt2_bpe_utils.py:functools"}, {"A": "fairseq-main/fairseq/data/encoders/hf_byte_bpe.py", "B": "fairseq-main/fairseq/data/encoders/hf_byte_bpe.py:tokenizers"}, {"A": "fairseq-main/fairseq/data/encoders/hf_byte_bpe.py", "B": "fairseq-main/fairseq/data/encoders/hf_byte_bpe.py:dataclasses"}, {"A": "fairseq-main/fairseq/data/encoders/fastbpe.py", "B": "fairseq-main/fairseq/data/encoders/fastbpe.py:dataclasses"}, {"A": "fairseq-main/fairseq/data/encoders/subword_nmt_bpe.py", "B": "fairseq-main/fairseq/data/encoders/subword_nmt_bpe.py:subword_nmt"}, {"A": "fairseq-main/fairseq/data/encoders/subword_nmt_bpe.py", "B": "fairseq-main/fairseq/data/encoders/subword_nmt_bpe.py:dataclasses"}, {"A": "fairseq-main/fairseq/data/encoders/space_tokenizer.py", "B": "fairseq-main/fairseq/data/encoders/space_tokenizer.py:re"}, {"A": "fairseq-main/fairseq/data/encoders/hf_bert_bpe.py", "B": "fairseq-main/fairseq/data/encoders/hf_bert_bpe.py:typing"}, {"A": "fairseq-main/fairseq/data/encoders/hf_bert_bpe.py", "B": "fairseq-main/fairseq/data/encoders/hf_bert_bpe.py:transformers"}, {"A": "fairseq-main/fairseq/data/encoders/hf_bert_bpe.py", "B": "fairseq-main/fairseq/data/encoders/hf_bert_bpe.py:dataclasses"}, {"A": "fairseq-main/fairseq/data/encoders/sentencepiece_bpe.py", "B": "fairseq-main/fairseq/data/encoders/sentencepiece_bpe.py:typing"}, {"A": "fairseq-main/fairseq/data/encoders/sentencepiece_bpe.py", "B": "fairseq-main/fairseq/data/encoders/sentencepiece_bpe.py:sentencepiece"}, {"A": "fairseq-main/fairseq/data/encoders/sentencepiece_bpe.py", "B": "fairseq-main/fairseq/data/encoders/sentencepiece_bpe.py:dataclasses"}, {"A": "fairseq-main/fairseq/data/encoders/byte_utils.py", "B": "fairseq-main/fairseq/data/encoders/byte_utils.py:re"}, {"A": "fairseq-main/fairseq/data/encoders/nltk_tokenizer.py", "B": "fairseq-main/fairseq/data/encoders/nltk_tokenizer.py:nltk"}, {"A": "fairseq-main/fairseq/data/encoders/utils.py", "B": "fairseq-main/fairseq/data/encoders/utils.py:torch"}, {"A": "fairseq-main/fairseq/data/multilingual/sampled_multi_dataset.py", "B": "fairseq-main/fairseq/data/multilingual/sampled_multi_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/multilingual/sampled_multi_dataset.py", "B": "fairseq-main/fairseq/data/multilingual/sampled_multi_dataset.py:enum"}, {"A": "fairseq-main/fairseq/data/multilingual/sampled_multi_dataset.py", "B": "fairseq-main/fairseq/data/multilingual/sampled_multi_dataset.py:datetime"}, {"A": "fairseq-main/fairseq/data/multilingual/sampled_multi_dataset.py", "B": "fairseq-main/fairseq/data/multilingual/sampled_multi_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/multilingual/sampled_multi_dataset.py", "B": "fairseq-main/fairseq/data/multilingual/sampled_multi_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/multilingual/sampled_multi_dataset.py", "B": "fairseq-main/fairseq/data/multilingual/sampled_multi_dataset.py:hashlib"}, {"A": "fairseq-main/fairseq/data/multilingual/sampled_multi_epoch_dataset.py", "B": "fairseq-main/fairseq/data/multilingual/sampled_multi_epoch_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/multilingual/sampled_multi_epoch_dataset.py", "B": "fairseq-main/fairseq/data/multilingual/sampled_multi_epoch_dataset.py:hashlib"}, {"A": "fairseq-main/fairseq/data/multilingual/multilingual_data_manager.py", "B": "fairseq-main/fairseq/data/multilingual/multilingual_data_manager.py:argparse"}, {"A": "fairseq-main/fairseq/data/multilingual/multilingual_data_manager.py", "B": "fairseq-main/fairseq/data/multilingual/multilingual_data_manager.py:json"}, {"A": "fairseq-main/fairseq/data/multilingual/sampling_method.py", "B": "fairseq-main/fairseq/data/multilingual/sampling_method.py:typing"}, {"A": "fairseq-main/fairseq/data/legacy/masked_lm_dataset.py", "B": "fairseq-main/fairseq/data/legacy/masked_lm_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/legacy/masked_lm_dataset.py", "B": "fairseq-main/fairseq/data/legacy/masked_lm_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/legacy/masked_lm_dataset.py", "B": "fairseq-main/fairseq/data/legacy/masked_lm_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/legacy/block_pair_dataset.py", "B": "fairseq-main/fairseq/data/legacy/block_pair_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/legacy/block_pair_dataset.py", "B": "fairseq-main/fairseq/data/legacy/block_pair_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/huffman/huffman_mmap_indexed_dataset.py", "B": "fairseq-main/fairseq/data/huffman/huffman_mmap_indexed_dataset.py:typing"}, {"A": "fairseq-main/fairseq/data/huffman/huffman_mmap_indexed_dataset.py", "B": "fairseq-main/fairseq/data/huffman/huffman_mmap_indexed_dataset.py:functools"}, {"A": "fairseq-main/fairseq/data/huffman/huffman_mmap_indexed_dataset.py", "B": "fairseq-main/fairseq/data/huffman/huffman_mmap_indexed_dataset.py:torch"}, {"A": "fairseq-main/fairseq/data/huffman/huffman_mmap_indexed_dataset.py", "B": "fairseq-main/fairseq/data/huffman/huffman_mmap_indexed_dataset.py:numpy"}, {"A": "fairseq-main/fairseq/data/huffman/huffman_coder.py", "B": "fairseq-main/fairseq/data/huffman/huffman_coder.py:typing"}, {"A": "fairseq-main/fairseq/data/huffman/huffman_coder.py", "B": "fairseq-main/fairseq/data/huffman/huffman_coder.py:dataclasses"}, {"A": "fairseq-main/fairseq/data/huffman/huffman_coder.py", "B": "fairseq-main/fairseq/data/huffman/huffman_coder.py:bitarray"}, {"A": "fairseq-main/fairseq/data/huffman/huffman_coder.py", "B": "fairseq-main/fairseq/data/huffman/huffman_coder.py:re"}, {"A": "fairseq-main/fairseq_cli/preprocess.py", "B": "fairseq-main/fairseq_cli/preprocess.py:typing"}, {"A": "fairseq-main/fairseq_cli/preprocess.py", "B": "fairseq-main/fairseq_cli/preprocess.py:argparse"}, {"A": "fairseq-main/fairseq_cli/interactive.py", "B": "fairseq-main/fairseq_cli/interactive.py:torch"}, {"A": "fairseq-main/fairseq_cli/interactive.py", "B": "fairseq-main/fairseq_cli/interactive.py:numpy"}, {"A": "fairseq-main/fairseq_cli/interactive.py", "B": "fairseq-main/fairseq_cli/interactive.py:argparse"}, {"A": "fairseq-main/fairseq_cli/score.py", "B": "fairseq-main/fairseq_cli/score.py:sacrebleu"}, {"A": "fairseq-main/fairseq_cli/score.py", "B": "fairseq-main/fairseq_cli/score.py:argparse"}, {"A": "fairseq-main/fairseq_cli/train.py", "B": "fairseq-main/fairseq_cli/train.py:typing"}, {"A": "fairseq-main/fairseq_cli/train.py", "B": "fairseq-main/fairseq_cli/train.py:torch"}, {"A": "fairseq-main/fairseq_cli/train.py", "B": "fairseq-main/fairseq_cli/train.py:numpy"}, {"A": "fairseq-main/fairseq_cli/train.py", "B": "fairseq-main/fairseq_cli/train.py:omegaconf"}, {"A": "fairseq-main/fairseq_cli/train.py", "B": "fairseq-main/fairseq_cli/train.py:argparse"}, {"A": "fairseq-main/fairseq_cli/validate.py", "B": "fairseq-main/fairseq_cli/validate.py:torch"}, {"A": "fairseq-main/fairseq_cli/validate.py", "B": "fairseq-main/fairseq_cli/validate.py:omegaconf"}, {"A": "fairseq-main/fairseq_cli/validate.py", "B": "fairseq-main/fairseq_cli/validate.py:argparse"}, {"A": "fairseq-main/fairseq_cli/eval_lm.py", "B": "fairseq-main/fairseq_cli/eval_lm.py:typing"}, {"A": "fairseq-main/fairseq_cli/eval_lm.py", "B": "fairseq-main/fairseq_cli/eval_lm.py:torch"}, {"A": "fairseq-main/fairseq_cli/eval_lm.py", "B": "fairseq-main/fairseq_cli/eval_lm.py:omegaconf"}, {"A": "fairseq-main/fairseq_cli/eval_lm.py", "B": "fairseq-main/fairseq_cli/eval_lm.py:argparse"}, {"A": "fairseq-main/fairseq_cli/hydra_train.py", "B": "fairseq-main/fairseq_cli/hydra_train.py:torch"}, {"A": "fairseq-main/fairseq_cli/hydra_train.py", "B": "fairseq-main/fairseq_cli/hydra_train.py:omegaconf"}, {"A": "fairseq-main/fairseq_cli/hydra_train.py", "B": "fairseq-main/fairseq_cli/hydra_train.py:hydra"}, {"A": "fairseq-main/fairseq_cli/generate.py", "B": "fairseq-main/fairseq_cli/generate.py:torch"}, {"A": "fairseq-main/fairseq_cli/generate.py", "B": "fairseq-main/fairseq_cli/generate.py:numpy"}, {"A": "fairseq-main/fairseq_cli/generate.py", "B": "fairseq-main/fairseq_cli/generate.py:omegaconf"}, {"A": "fairseq-main/fairseq_cli/generate.py", "B": "fairseq-main/fairseq_cli/generate.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/wav2vec_featurize.py", "B": "fairseq-main/examples/wav2vec/wav2vec_featurize.py:h5py"}, {"A": "fairseq-main/examples/wav2vec/wav2vec_featurize.py", "B": "fairseq-main/examples/wav2vec/wav2vec_featurize.py:tqdm"}, {"A": "fairseq-main/examples/wav2vec/wav2vec_featurize.py", "B": "fairseq-main/examples/wav2vec/wav2vec_featurize.py:torch"}, {"A": "fairseq-main/examples/wav2vec/wav2vec_featurize.py", "B": "fairseq-main/examples/wav2vec/wav2vec_featurize.py:numpy"}, {"A": "fairseq-main/examples/wav2vec/wav2vec_featurize.py", "B": "fairseq-main/examples/wav2vec/wav2vec_featurize.py:glob"}, {"A": "fairseq-main/examples/wav2vec/wav2vec_featurize.py", "B": "fairseq-main/examples/wav2vec/wav2vec_featurize.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/wav2vec_featurize.py", "B": "fairseq-main/examples/wav2vec/wav2vec_featurize.py:soundfile"}, {"A": "fairseq-main/examples/wav2vec/libri_labels.py", "B": "fairseq-main/examples/wav2vec/libri_labels.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/vq-wav2vec_featurize.py", "B": "fairseq-main/examples/wav2vec/vq-wav2vec_featurize.py:tqdm"}, {"A": "fairseq-main/examples/wav2vec/vq-wav2vec_featurize.py", "B": "fairseq-main/examples/wav2vec/vq-wav2vec_featurize.py:torch"}, {"A": "fairseq-main/examples/wav2vec/vq-wav2vec_featurize.py", "B": "fairseq-main/examples/wav2vec/vq-wav2vec_featurize.py:glob"}, {"A": "fairseq-main/examples/wav2vec/vq-wav2vec_featurize.py", "B": "fairseq-main/examples/wav2vec/vq-wav2vec_featurize.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/vq-wav2vec_featurize.py", "B": "fairseq-main/examples/wav2vec/vq-wav2vec_featurize.py:soundfile"}, {"A": "fairseq-main/examples/wav2vec/wav2vec_manifest.py", "B": "fairseq-main/examples/wav2vec/wav2vec_manifest.py:glob"}, {"A": "fairseq-main/examples/wav2vec/wav2vec_manifest.py", "B": "fairseq-main/examples/wav2vec/wav2vec_manifest.py:random"}, {"A": "fairseq-main/examples/wav2vec/wav2vec_manifest.py", "B": "fairseq-main/examples/wav2vec/wav2vec_manifest.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/wav2vec_manifest.py", "B": "fairseq-main/examples/wav2vec/wav2vec_manifest.py:soundfile"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py", "B": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py:typing"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py", "B": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py:editdistance"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py", "B": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py:enum"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py", "B": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py:torch"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py", "B": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py:dataclasses"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py", "B": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py:omegaconf"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py", "B": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py:hydra"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/models/wav2vec_u.py", "B": "fairseq-main/examples/wav2vec/unsupervised/models/wav2vec_u.py:typing"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/models/wav2vec_u.py", "B": "fairseq-main/examples/wav2vec/unsupervised/models/wav2vec_u.py:enum"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/models/wav2vec_u.py", "B": "fairseq-main/examples/wav2vec/unsupervised/models/wav2vec_u.py:torch"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/models/wav2vec_u.py", "B": "fairseq-main/examples/wav2vec/unsupervised/models/wav2vec_u.py:dataclasses"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/models/wav2vec_u.py", "B": "fairseq-main/examples/wav2vec/unsupervised/models/wav2vec_u.py:numpy"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/tasks/unpaired_audio_text.py", "B": "fairseq-main/examples/wav2vec/unsupervised/tasks/unpaired_audio_text.py:typing"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/tasks/unpaired_audio_text.py", "B": "fairseq-main/examples/wav2vec/unsupervised/tasks/unpaired_audio_text.py:editdistance"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/tasks/unpaired_audio_text.py", "B": "fairseq-main/examples/wav2vec/unsupervised/tasks/unpaired_audio_text.py:torch"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/tasks/unpaired_audio_text.py", "B": "fairseq-main/examples/wav2vec/unsupervised/tasks/unpaired_audio_text.py:dataclasses"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/tasks/unpaired_audio_text.py", "B": "fairseq-main/examples/wav2vec/unsupervised/tasks/unpaired_audio_text.py:omegaconf"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/g2p_wrd_to_phn.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/g2p_wrd_to_phn.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_apply_cluster_faiss.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_apply_cluster_faiss.py:tqdm"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_apply_cluster_faiss.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_apply_cluster_faiss.py:torch"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_apply_cluster_faiss.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_apply_cluster_faiss.py:numpy"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_apply_cluster_faiss.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_apply_cluster_faiss.py:faiss"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_apply_cluster_faiss.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_apply_cluster_faiss.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/remove_silence.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/remove_silence.py:torchaudio"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/remove_silence.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/remove_silence.py:tqdm"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/remove_silence.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/remove_silence.py:torch"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/remove_silence.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/remove_silence.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/filter_lexicon.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/filter_lexicon.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/vads.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/vads.py:tqdm"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/vads.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/vads.py:numpy"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/vads.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/vads.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/vads.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/vads.py:soundfile"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/vads.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/vads.py:scipy"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/merge_clusters.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/merge_clusters.py:tqdm"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/merge_clusters.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/merge_clusters.py:torch"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/merge_clusters.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/merge_clusters.py:numpy"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/merge_clusters.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/merge_clusters.py:random"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/merge_clusters.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/merge_clusters.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/pca.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/pca.py:numpy"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/pca.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/pca.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/pca.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/pca.py:faiss"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/filter_tsv.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/filter_tsv.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/apply_pca.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/apply_pca.py:tqdm"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/apply_pca.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/apply_pca.py:torch"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/apply_pca.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/apply_pca.py:numpy"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/apply_pca.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/apply_pca.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py:tqdm"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py:torch"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py:numpy"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py:faiss"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py:random"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py:soundfile"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_extract_features.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_extract_features.py:tqdm"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_extract_features.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_extract_features.py:torch"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_extract_features.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_extract_features.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_extract_features.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_extract_features.py:soundfile"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/phonemize_with_sil.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/phonemize_with_sil.py:numpy"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/phonemize_with_sil.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/phonemize_with_sil.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/normalize_text.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/normalize_text.py:regex"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/mean_pool.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/mean_pool.py:tqdm"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/mean_pool.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/mean_pool.py:torch"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/mean_pool.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/mean_pool.py:numpy"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/mean_pool.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/mean_pool.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wer.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wer.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/wer.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wer.py:editdistance"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/normalize_and_filter_text.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/normalize_and_filter_text.py:regex"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/scripts/normalize_and_filter_text.py", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/normalize_and_filter_text.py:argparse"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/data/random_input_dataset.py", "B": "fairseq-main/examples/wav2vec/unsupervised/data/random_input_dataset.py:random"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/data/random_input_dataset.py", "B": "fairseq-main/examples/wav2vec/unsupervised/data/random_input_dataset.py:typing"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/data/extracted_features_dataset.py", "B": "fairseq-main/examples/wav2vec/unsupervised/data/extracted_features_dataset.py:torch"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/data/extracted_features_dataset.py", "B": "fairseq-main/examples/wav2vec/unsupervised/data/extracted_features_dataset.py:numpy"}, {"A": "fairseq-main/examples/wav2vec/unsupervised/data/extracted_features_dataset.py", "B": "fairseq-main/examples/wav2vec/unsupervised/data/extracted_features_dataset.py:contextlib"}, {"A": "fairseq-main/examples/truncated_bptt/transformer_xl_model.py", "B": "fairseq-main/examples/truncated_bptt/transformer_xl_model.py:typing"}, {"A": "fairseq-main/examples/truncated_bptt/transformer_xl_model.py", "B": "fairseq-main/examples/truncated_bptt/transformer_xl_model.py:torch"}, {"A": "fairseq-main/examples/truncated_bptt/transformer_xl_model.py", "B": "fairseq-main/examples/truncated_bptt/transformer_xl_model.py:transformers"}, {"A": "fairseq-main/examples/truncated_bptt/transformer_xl_model.py", "B": "fairseq-main/examples/truncated_bptt/transformer_xl_model.py:dataclasses"}, {"A": "fairseq-main/examples/truncated_bptt/transformer_xl_model.py", "B": "fairseq-main/examples/truncated_bptt/transformer_xl_model.py:omegaconf"}, {"A": "fairseq-main/examples/truncated_bptt/truncated_bptt_lm_task.py", "B": "fairseq-main/examples/truncated_bptt/truncated_bptt_lm_task.py:typing"}, {"A": "fairseq-main/examples/truncated_bptt/truncated_bptt_lm_task.py", "B": "fairseq-main/examples/truncated_bptt/truncated_bptt_lm_task.py:torch"}, {"A": "fairseq-main/examples/truncated_bptt/truncated_bptt_lm_task.py", "B": "fairseq-main/examples/truncated_bptt/truncated_bptt_lm_task.py:dataclasses"}, {"A": "fairseq-main/examples/truncated_bptt/truncated_bptt_lm_task.py", "B": "fairseq-main/examples/truncated_bptt/truncated_bptt_lm_task.py:omegaconf"}, {"A": "fairseq-main/examples/linformer/linformer_src/models/linformer_roberta.py", "B": "fairseq-main/examples/linformer/linformer_src/models/linformer_roberta.py:torch"}, {"A": "fairseq-main/examples/linformer/linformer_src/modules/multihead_linear_attention.py", "B": "fairseq-main/examples/linformer/linformer_src/modules/multihead_linear_attention.py:typing"}, {"A": "fairseq-main/examples/linformer/linformer_src/modules/multihead_linear_attention.py", "B": "fairseq-main/examples/linformer/linformer_src/modules/multihead_linear_attention.py:torch"}, {"A": "fairseq-main/examples/linformer/linformer_src/modules/linformer_sentence_encoder.py", "B": "fairseq-main/examples/linformer/linformer_src/modules/linformer_sentence_encoder.py:torch"}, {"A": "fairseq-main/examples/linformer/linformer_src/modules/linformer_sentence_encoder_layer.py", "B": "fairseq-main/examples/linformer/linformer_src/modules/linformer_sentence_encoder_layer.py:torch"}, {"A": "fairseq-main/examples/byte_level_bpe/gru_transformer.py", "B": "fairseq-main/examples/byte_level_bpe/gru_transformer.py:torch"}, {"A": "fairseq-main/examples/byte_level_bpe/get_bitext.py", "B": "fairseq-main/examples/byte_level_bpe/get_bitext.py:typing"}, {"A": "fairseq-main/examples/byte_level_bpe/get_bitext.py", "B": "fairseq-main/examples/byte_level_bpe/get_bitext.py:multiprocessing"}, {"A": "fairseq-main/examples/byte_level_bpe/get_bitext.py", "B": "fairseq-main/examples/byte_level_bpe/get_bitext.py:argparse"}, {"A": "fairseq-main/examples/byte_level_bpe/get_bitext.py", "B": "fairseq-main/examples/byte_level_bpe/get_bitext.py:sentencepiece"}, {"A": "fairseq-main/examples/unsupervised_quality_estimation/repeat_lines.py", "B": "fairseq-main/examples/unsupervised_quality_estimation/repeat_lines.py:argparse"}, {"A": "fairseq-main/examples/unsupervised_quality_estimation/meteor.py", "B": "fairseq-main/examples/unsupervised_quality_estimation/meteor.py:argparse"}, {"A": "fairseq-main/examples/unsupervised_quality_estimation/meteor.py", "B": "fairseq-main/examples/unsupervised_quality_estimation/meteor.py:tempfile"}, {"A": "fairseq-main/examples/unsupervised_quality_estimation/aggregate_scores.py", "B": "fairseq-main/examples/unsupervised_quality_estimation/aggregate_scores.py:numpy"}, {"A": "fairseq-main/examples/unsupervised_quality_estimation/aggregate_scores.py", "B": "fairseq-main/examples/unsupervised_quality_estimation/aggregate_scores.py:argparse"}, {"A": "fairseq-main/examples/speech_recognition/infer.py", "B": "fairseq-main/examples/speech_recognition/infer.py:editdistance"}, {"A": "fairseq-main/examples/speech_recognition/infer.py", "B": "fairseq-main/examples/speech_recognition/infer.py:torch"}, {"A": "fairseq-main/examples/speech_recognition/infer.py", "B": "fairseq-main/examples/speech_recognition/infer.py:numpy"}, {"A": "fairseq-main/examples/speech_recognition/w2l_decoder.py", "B": "fairseq-main/examples/speech_recognition/w2l_decoder.py:typing"}, {"A": "fairseq-main/examples/speech_recognition/w2l_decoder.py", "B": "fairseq-main/examples/speech_recognition/w2l_decoder.py:torch"}, {"A": "fairseq-main/examples/speech_recognition/w2l_decoder.py", "B": "fairseq-main/examples/speech_recognition/w2l_decoder.py:numpy"}, {"A": "fairseq-main/examples/speech_recognition/w2l_decoder.py", "B": "fairseq-main/examples/speech_recognition/w2l_decoder.py:omegaconf"}, {"A": "fairseq-main/examples/speech_recognition/datasets/asr_prep_json.py", "B": "fairseq-main/examples/speech_recognition/datasets/asr_prep_json.py:torchaudio"}, {"A": "fairseq-main/examples/speech_recognition/datasets/asr_prep_json.py", "B": "fairseq-main/examples/speech_recognition/datasets/asr_prep_json.py:__future__"}, {"A": "fairseq-main/examples/speech_recognition/datasets/asr_prep_json.py", "B": "fairseq-main/examples/speech_recognition/datasets/asr_prep_json.py:multiprocessing"}, {"A": "fairseq-main/examples/speech_recognition/datasets/asr_prep_json.py", "B": "fairseq-main/examples/speech_recognition/datasets/asr_prep_json.py:argparse"}, {"A": "fairseq-main/examples/speech_recognition/datasets/asr_prep_json.py", "B": "fairseq-main/examples/speech_recognition/datasets/asr_prep_json.py:json"}, {"A": "fairseq-main/examples/speech_recognition/datasets/asr_prep_json.py", "B": "fairseq-main/examples/speech_recognition/datasets/asr_prep_json.py:sentencepiece"}, {"A": "fairseq-main/examples/speech_recognition/models/w2l_conv_glu_enc.py", "B": "fairseq-main/examples/speech_recognition/models/w2l_conv_glu_enc.py:torch"}, {"A": "fairseq-main/examples/speech_recognition/models/vggtransformer.py", "B": "fairseq-main/examples/speech_recognition/models/vggtransformer.py:torch"}, {"A": "fairseq-main/examples/speech_recognition/models/vggtransformer.py", "B": "fairseq-main/examples/speech_recognition/models/vggtransformer.py:argparse"}, {"A": "fairseq-main/examples/speech_recognition/kaldi/kaldi_decoder.py", "B": "fairseq-main/examples/speech_recognition/kaldi/kaldi_decoder.py:typing"}, {"A": "fairseq-main/examples/speech_recognition/kaldi/kaldi_decoder.py", "B": "fairseq-main/examples/speech_recognition/kaldi/kaldi_decoder.py:torch"}, {"A": "fairseq-main/examples/speech_recognition/kaldi/kaldi_decoder.py", "B": "fairseq-main/examples/speech_recognition/kaldi/kaldi_decoder.py:dataclasses"}, {"A": "fairseq-main/examples/speech_recognition/kaldi/kaldi_decoder.py", "B": "fairseq-main/examples/speech_recognition/kaldi/kaldi_decoder.py:omegaconf"}, {"A": "fairseq-main/examples/speech_recognition/kaldi/kaldi_initializer.py", "B": "fairseq-main/examples/speech_recognition/kaldi/kaldi_initializer.py:typing"}, {"A": "fairseq-main/examples/speech_recognition/kaldi/kaldi_initializer.py", "B": "fairseq-main/examples/speech_recognition/kaldi/kaldi_initializer.py:pathlib"}, {"A": "fairseq-main/examples/speech_recognition/kaldi/kaldi_initializer.py", "B": "fairseq-main/examples/speech_recognition/kaldi/kaldi_initializer.py:dataclasses"}, {"A": "fairseq-main/examples/speech_recognition/kaldi/kaldi_initializer.py", "B": "fairseq-main/examples/speech_recognition/kaldi/kaldi_initializer.py:omegaconf"}, {"A": "fairseq-main/examples/speech_recognition/kaldi/kaldi_initializer.py", "B": "fairseq-main/examples/speech_recognition/kaldi/kaldi_initializer.py:hydra"}, {"A": "fairseq-main/examples/speech_recognition/tasks/speech_recognition.py", "B": "fairseq-main/examples/speech_recognition/tasks/speech_recognition.py:json"}, {"A": "fairseq-main/examples/speech_recognition/tasks/speech_recognition.py", "B": "fairseq-main/examples/speech_recognition/tasks/speech_recognition.py:torch"}, {"A": "fairseq-main/examples/speech_recognition/tasks/speech_recognition.py", "B": "fairseq-main/examples/speech_recognition/tasks/speech_recognition.py:re"}, {"A": "fairseq-main/examples/speech_recognition/criterions/cross_entropy_acc.py", "B": "fairseq-main/examples/speech_recognition/criterions/cross_entropy_acc.py:__future__"}, {"A": "fairseq-main/examples/speech_recognition/criterions/cross_entropy_acc.py", "B": "fairseq-main/examples/speech_recognition/criterions/cross_entropy_acc.py:torch"}, {"A": "fairseq-main/examples/speech_recognition/criterions/ASG_loss.py", "B": "fairseq-main/examples/speech_recognition/criterions/ASG_loss.py:torch"}, {"A": "fairseq-main/examples/speech_recognition/new/infer.py", "B": "fairseq-main/examples/speech_recognition/new/infer.py:typing"}, {"A": "fairseq-main/examples/speech_recognition/new/infer.py", "B": "fairseq-main/examples/speech_recognition/new/infer.py:editdistance"}, {"A": "fairseq-main/examples/speech_recognition/new/infer.py", "B": "fairseq-main/examples/speech_recognition/new/infer.py:pathlib"}, {"A": "fairseq-main/examples/speech_recognition/new/infer.py", "B": "fairseq-main/examples/speech_recognition/new/infer.py:torch"}, {"A": "fairseq-main/examples/speech_recognition/new/infer.py", "B": "fairseq-main/examples/speech_recognition/new/infer.py:dataclasses"}, {"A": "fairseq-main/examples/speech_recognition/new/infer.py", "B": "fairseq-main/examples/speech_recognition/new/infer.py:hashlib"}, {"A": "fairseq-main/examples/speech_recognition/new/infer.py", "B": "fairseq-main/examples/speech_recognition/new/infer.py:omegaconf"}, {"A": "fairseq-main/examples/speech_recognition/new/infer.py", "B": "fairseq-main/examples/speech_recognition/new/infer.py:hydra"}, {"A": "fairseq-main/examples/speech_recognition/new/decoders/base_decoder.py", "B": "fairseq-main/examples/speech_recognition/new/decoders/base_decoder.py:typing"}, {"A": "fairseq-main/examples/speech_recognition/new/decoders/base_decoder.py", "B": "fairseq-main/examples/speech_recognition/new/decoders/base_decoder.py:torch"}, {"A": "fairseq-main/examples/speech_recognition/new/decoders/flashlight_decoder.py", "B": "fairseq-main/examples/speech_recognition/new/decoders/flashlight_decoder.py:typing"}, {"A": "fairseq-main/examples/speech_recognition/new/decoders/flashlight_decoder.py", "B": "fairseq-main/examples/speech_recognition/new/decoders/flashlight_decoder.py:torch"}, {"A": "fairseq-main/examples/speech_recognition/new/decoders/flashlight_decoder.py", "B": "fairseq-main/examples/speech_recognition/new/decoders/flashlight_decoder.py:numpy"}, {"A": "fairseq-main/examples/speech_recognition/new/decoders/flashlight_decoder.py", "B": "fairseq-main/examples/speech_recognition/new/decoders/flashlight_decoder.py:omegaconf"}, {"A": "fairseq-main/examples/speech_recognition/new/decoders/decoder_config.py", "B": "fairseq-main/examples/speech_recognition/new/decoders/decoder_config.py:typing"}, {"A": "fairseq-main/examples/speech_recognition/new/decoders/decoder_config.py", "B": "fairseq-main/examples/speech_recognition/new/decoders/decoder_config.py:dataclasses"}, {"A": "fairseq-main/examples/speech_recognition/new/decoders/decoder_config.py", "B": "fairseq-main/examples/speech_recognition/new/decoders/decoder_config.py:omegaconf"}, {"A": "fairseq-main/examples/speech_recognition/new/decoders/viterbi_decoder.py", "B": "fairseq-main/examples/speech_recognition/new/decoders/viterbi_decoder.py:typing"}, {"A": "fairseq-main/examples/speech_recognition/new/decoders/viterbi_decoder.py", "B": "fairseq-main/examples/speech_recognition/new/decoders/viterbi_decoder.py:torch"}, {"A": "fairseq-main/examples/speech_recognition/new/decoders/decoder.py", "B": "fairseq-main/examples/speech_recognition/new/decoders/decoder.py:typing"}, {"A": "fairseq-main/examples/speech_recognition/utils/wer_utils.py", "B": "fairseq-main/examples/speech_recognition/utils/wer_utils.py:__future__"}, {"A": "fairseq-main/examples/speech_recognition/utils/wer_utils.py", "B": "fairseq-main/examples/speech_recognition/utils/wer_utils.py:enum"}, {"A": "fairseq-main/examples/speech_recognition/utils/wer_utils.py", "B": "fairseq-main/examples/speech_recognition/utils/wer_utils.py:numpy"}, {"A": "fairseq-main/examples/speech_recognition/utils/wer_utils.py", "B": "fairseq-main/examples/speech_recognition/utils/wer_utils.py:re"}, {"A": "fairseq-main/examples/speech_recognition/data/data_utils.py", "B": "fairseq-main/examples/speech_recognition/data/data_utils.py:torch"}, {"A": "fairseq-main/examples/speech_recognition/data/asr_dataset.py", "B": "fairseq-main/examples/speech_recognition/data/asr_dataset.py:numpy"}, {"A": "fairseq-main/examples/speech_recognition/data/asr_dataset.py", "B": "fairseq-main/examples/speech_recognition/data/asr_dataset.py:torchaudio"}, {"A": "fairseq-main/examples/speech_recognition/data/collaters.py", "B": "fairseq-main/examples/speech_recognition/data/collaters.py:numpy"}, {"A": "fairseq-main/examples/speech_recognition/data/collaters.py", "B": "fairseq-main/examples/speech_recognition/data/collaters.py:__future__"}, {"A": "fairseq-main/examples/speech_recognition/data/collaters.py", "B": "fairseq-main/examples/speech_recognition/data/collaters.py:torch"}, {"A": "fairseq-main/examples/backtranslation/deduplicate_lines.py", "B": "fairseq-main/examples/backtranslation/deduplicate_lines.py:multiprocessing"}, {"A": "fairseq-main/examples/backtranslation/deduplicate_lines.py", "B": "fairseq-main/examples/backtranslation/deduplicate_lines.py:hashlib"}, {"A": "fairseq-main/examples/backtranslation/deduplicate_lines.py", "B": "fairseq-main/examples/backtranslation/deduplicate_lines.py:argparse"}, {"A": "fairseq-main/examples/backtranslation/extract_bt_data.py", "B": "fairseq-main/examples/backtranslation/extract_bt_data.py:argparse"}, {"A": "fairseq-main/examples/backtranslation/extract_bt_data.py", "B": "fairseq-main/examples/backtranslation/extract_bt_data.py:tqdm"}, {"A": "fairseq-main/examples/megatron_11b/detok.py", "B": "fairseq-main/examples/megatron_11b/detok.py:argparse"}, {"A": "fairseq-main/examples/criss/save_encoder.py", "B": "fairseq-main/examples/criss/save_encoder.py:numpy"}, {"A": "fairseq-main/examples/criss/save_encoder.py", "B": "fairseq-main/examples/criss/save_encoder.py:torch"}, {"A": "fairseq-main/examples/criss/mining/mine.py", "B": "fairseq-main/examples/criss/mining/mine.py:numpy"}, {"A": "fairseq-main/examples/criss/mining/mine.py", "B": "fairseq-main/examples/criss/mining/mine.py:glob"}, {"A": "fairseq-main/examples/criss/mining/mine.py", "B": "fairseq-main/examples/criss/mining/mine.py:faiss"}, {"A": "fairseq-main/examples/criss/mining/mine.py", "B": "fairseq-main/examples/criss/mining/mine.py:argparse"}, {"A": "fairseq-main/examples/criss/sentence_retrieval/encoder_analysis.py", "B": "fairseq-main/examples/criss/sentence_retrieval/encoder_analysis.py:numpy"}, {"A": "fairseq-main/examples/criss/sentence_retrieval/encoder_analysis.py", "B": "fairseq-main/examples/criss/sentence_retrieval/encoder_analysis.py:argparse"}, {"A": "fairseq-main/examples/criss/sentence_retrieval/encoder_analysis.py", "B": "fairseq-main/examples/criss/sentence_retrieval/encoder_analysis.py:glob"}, {"A": "fairseq-main/examples/adaptive_span/adaptive_span_attention.py", "B": "fairseq-main/examples/adaptive_span/adaptive_span_attention.py:torch"}, {"A": "fairseq-main/examples/adaptive_span/adaptive_span_model_wrapper.py", "B": "fairseq-main/examples/adaptive_span/adaptive_span_model_wrapper.py:typing"}, {"A": "fairseq-main/examples/adaptive_span/adaptive_span_model_wrapper.py", "B": "fairseq-main/examples/adaptive_span/adaptive_span_model_wrapper.py:torch"}, {"A": "fairseq-main/examples/adaptive_span/adaptive_span_model_wrapper.py", "B": "fairseq-main/examples/adaptive_span/adaptive_span_model_wrapper.py:dataclasses"}, {"A": "fairseq-main/examples/adaptive_span/adagrad_with_grad_clip.py", "B": "fairseq-main/examples/adaptive_span/adagrad_with_grad_clip.py:torch"}, {"A": "fairseq-main/examples/adaptive_span/adaptive_span_loss.py", "B": "fairseq-main/examples/adaptive_span/adaptive_span_loss.py:torch"}, {"A": "fairseq-main/examples/adaptive_span/adaptive_span_loss.py", "B": "fairseq-main/examples/adaptive_span/adaptive_span_loss.py:dataclasses"}, {"A": "fairseq-main/examples/adaptive_span/adaptive_span_loss.py", "B": "fairseq-main/examples/adaptive_span/adaptive_span_loss.py:omegaconf"}, {"A": "fairseq-main/examples/adaptive_span/adaptive_span_model.py", "B": "fairseq-main/examples/adaptive_span/adaptive_span_model.py:torch"}, {"A": "fairseq-main/examples/attention_head_selection/src/speech_to_text_head_selection.py", "B": "fairseq-main/examples/attention_head_selection/src/speech_to_text_head_selection.py:torch"}, {"A": "fairseq-main/examples/attention_head_selection/src/models/head_selection_transformer.py", "B": "fairseq-main/examples/attention_head_selection/src/models/head_selection_transformer.py:typing"}, {"A": "fairseq-main/examples/attention_head_selection/src/models/head_selection_transformer.py", "B": "fairseq-main/examples/attention_head_selection/src/models/head_selection_transformer.py:torch"}, {"A": "fairseq-main/examples/attention_head_selection/src/models/head_selection_s2t_transformer.py", "B": "fairseq-main/examples/attention_head_selection/src/models/head_selection_s2t_transformer.py:typing"}, {"A": "fairseq-main/examples/attention_head_selection/src/models/head_selection_s2t_transformer.py", "B": "fairseq-main/examples/attention_head_selection/src/models/head_selection_s2t_transformer.py:pathlib"}, {"A": "fairseq-main/examples/attention_head_selection/src/models/head_selection_s2t_transformer.py", "B": "fairseq-main/examples/attention_head_selection/src/models/head_selection_s2t_transformer.py:torch"}, {"A": "fairseq-main/examples/attention_head_selection/src/modules/multihead_attention_selection.py", "B": "fairseq-main/examples/attention_head_selection/src/modules/multihead_attention_selection.py:typing"}, {"A": "fairseq-main/examples/attention_head_selection/src/modules/multihead_attention_selection.py", "B": "fairseq-main/examples/attention_head_selection/src/modules/multihead_attention_selection.py:torch"}, {"A": "fairseq-main/examples/attention_head_selection/src/modules/attn_head_selector.py", "B": "fairseq-main/examples/attention_head_selection/src/modules/attn_head_selector.py:torch"}, {"A": "fairseq-main/examples/attention_head_selection/src/modules/multihead_functional.py", "B": "fairseq-main/examples/attention_head_selection/src/modules/multihead_functional.py:typing"}, {"A": "fairseq-main/examples/attention_head_selection/src/modules/multihead_functional.py", "B": "fairseq-main/examples/attention_head_selection/src/modules/multihead_functional.py:torch"}, {"A": "fairseq-main/examples/attention_head_selection/src/loss/attention_head_selection.py", "B": "fairseq-main/examples/attention_head_selection/src/loss/attention_head_selection.py:torch"}, {"A": "fairseq-main/examples/attention_head_selection/src/data/speech_to_text_dataset_with_domain.py", "B": "fairseq-main/examples/attention_head_selection/src/data/speech_to_text_dataset_with_domain.py:typing"}, {"A": "fairseq-main/examples/attention_head_selection/src/data/speech_to_text_dataset_with_domain.py", "B": "fairseq-main/examples/attention_head_selection/src/data/speech_to_text_dataset_with_domain.py:pathlib"}, {"A": "fairseq-main/examples/attention_head_selection/src/data/speech_to_text_dataset_with_domain.py", "B": "fairseq-main/examples/attention_head_selection/src/data/speech_to_text_dataset_with_domain.py:torch"}, {"A": "fairseq-main/examples/attention_head_selection/src/data/speech_to_text_dataset_with_domain.py", "B": "fairseq-main/examples/attention_head_selection/src/data/speech_to_text_dataset_with_domain.py:dataclasses"}, {"A": "fairseq-main/examples/discriminative_reranking_nmt/drnmt_rerank.py", "B": "fairseq-main/examples/discriminative_reranking_nmt/drnmt_rerank.py:sacrebleu"}, {"A": "fairseq-main/examples/discriminative_reranking_nmt/drnmt_rerank.py", "B": "fairseq-main/examples/discriminative_reranking_nmt/drnmt_rerank.py:torch"}, {"A": "fairseq-main/examples/discriminative_reranking_nmt/drnmt_rerank.py", "B": "fairseq-main/examples/discriminative_reranking_nmt/drnmt_rerank.py:random"}, {"A": "fairseq-main/examples/discriminative_reranking_nmt/drnmt_rerank.py", "B": "fairseq-main/examples/discriminative_reranking_nmt/drnmt_rerank.py:numpy"}, {"A": "fairseq-main/examples/discriminative_reranking_nmt/drnmt_rerank.py", "B": "fairseq-main/examples/discriminative_reranking_nmt/drnmt_rerank.py:multiprocessing"}, {"A": "fairseq-main/examples/discriminative_reranking_nmt/tasks/discriminative_reranking_task.py", "B": "fairseq-main/examples/discriminative_reranking_nmt/tasks/discriminative_reranking_task.py:sacrebleu"}, {"A": "fairseq-main/examples/discriminative_reranking_nmt/tasks/discriminative_reranking_task.py", "B": "fairseq-main/examples/discriminative_reranking_nmt/tasks/discriminative_reranking_task.py:torch"}, {"A": "fairseq-main/examples/discriminative_reranking_nmt/tasks/discriminative_reranking_task.py", "B": "fairseq-main/examples/discriminative_reranking_nmt/tasks/discriminative_reranking_task.py:dataclasses"}, {"A": "fairseq-main/examples/discriminative_reranking_nmt/tasks/discriminative_reranking_task.py", "B": "fairseq-main/examples/discriminative_reranking_nmt/tasks/discriminative_reranking_task.py:numpy"}, {"A": "fairseq-main/examples/discriminative_reranking_nmt/tasks/discriminative_reranking_task.py", "B": "fairseq-main/examples/discriminative_reranking_nmt/tasks/discriminative_reranking_task.py:omegaconf"}, {"A": "fairseq-main/examples/discriminative_reranking_nmt/tasks/discriminative_reranking_task.py", "B": "fairseq-main/examples/discriminative_reranking_nmt/tasks/discriminative_reranking_task.py:inspect"}, {"A": "fairseq-main/examples/discriminative_reranking_nmt/criterions/discriminative_reranking_criterion.py", "B": "fairseq-main/examples/discriminative_reranking_nmt/criterions/discriminative_reranking_criterion.py:torch"}, {"A": "fairseq-main/examples/discriminative_reranking_nmt/criterions/discriminative_reranking_criterion.py", "B": "fairseq-main/examples/discriminative_reranking_nmt/criterions/discriminative_reranking_criterion.py:dataclasses"}, {"A": "fairseq-main/examples/roberta/multiprocessing_bpe_encoder.py", "B": "fairseq-main/examples/roberta/multiprocessing_bpe_encoder.py:multiprocessing"}, {"A": "fairseq-main/examples/roberta/multiprocessing_bpe_encoder.py", "B": "fairseq-main/examples/roberta/multiprocessing_bpe_encoder.py:contextlib"}, {"A": "fairseq-main/examples/roberta/multiprocessing_bpe_encoder.py", "B": "fairseq-main/examples/roberta/multiprocessing_bpe_encoder.py:argparse"}, {"A": "fairseq-main/examples/roberta/preprocess_RACE.py", "B": "fairseq-main/examples/roberta/preprocess_RACE.py:argparse"}, {"A": "fairseq-main/examples/roberta/preprocess_RACE.py", "B": "fairseq-main/examples/roberta/preprocess_RACE.py:re"}, {"A": "fairseq-main/examples/roberta/preprocess_RACE.py", "B": "fairseq-main/examples/roberta/preprocess_RACE.py:json"}, {"A": "fairseq-main/examples/roberta/wsc/wsc_criterion.py", "B": "fairseq-main/examples/roberta/wsc/wsc_criterion.py:torch"}, {"A": "fairseq-main/examples/roberta/wsc/wsc_utils.py", "B": "fairseq-main/examples/roberta/wsc/wsc_utils.py:json"}, {"A": "fairseq-main/examples/roberta/wsc/wsc_utils.py", "B": "fairseq-main/examples/roberta/wsc/wsc_utils.py:functools"}, {"A": "fairseq-main/examples/roberta/wsc/wsc_task.py", "B": "fairseq-main/examples/roberta/wsc/wsc_task.py:torch"}, {"A": "fairseq-main/examples/roberta/wsc/wsc_task.py", "B": "fairseq-main/examples/roberta/wsc/wsc_task.py:tempfile"}, {"A": "fairseq-main/examples/roberta/wsc/wsc_task.py", "B": "fairseq-main/examples/roberta/wsc/wsc_task.py:numpy"}, {"A": "fairseq-main/examples/roberta/wsc/wsc_task.py", "B": "fairseq-main/examples/roberta/wsc/wsc_task.py:json"}, {"A": "fairseq-main/examples/roberta/commonsense_qa/commonsense_qa_task.py", "B": "fairseq-main/examples/roberta/commonsense_qa/commonsense_qa_task.py:json"}, {"A": "fairseq-main/examples/roberta/commonsense_qa/commonsense_qa_task.py", "B": "fairseq-main/examples/roberta/commonsense_qa/commonsense_qa_task.py:torch"}, {"A": "fairseq-main/examples/roberta/commonsense_qa/commonsense_qa_task.py", "B": "fairseq-main/examples/roberta/commonsense_qa/commonsense_qa_task.py:numpy"}, {"A": "fairseq-main/examples/m2m_100/tokenizers/tokenize_indic.py", "B": "fairseq-main/examples/m2m_100/tokenizers/tokenize_indic.py:indicnlp"}, {"A": "fairseq-main/examples/m2m_100/tokenizers/tokenize_zh.py", "B": "fairseq-main/examples/m2m_100/tokenizers/tokenize_zh.py:sacrebleu"}, {"A": "fairseq-main/examples/m2m_100/tokenizers/tokenize_thai.py", "B": "fairseq-main/examples/m2m_100/tokenizers/tokenize_thai.py:pythainlp"}, {"A": "fairseq-main/examples/latent_depth/latent_depth_src/models/latent_transformer.py", "B": "fairseq-main/examples/latent_depth/latent_depth_src/models/latent_transformer.py:typing"}, {"A": "fairseq-main/examples/latent_depth/latent_depth_src/models/latent_transformer.py", "B": "fairseq-main/examples/latent_depth/latent_depth_src/models/latent_transformer.py:torch"}, {"A": "fairseq-main/examples/latent_depth/latent_depth_src/modules/latent_layers.py", "B": "fairseq-main/examples/latent_depth/latent_depth_src/modules/latent_layers.py:torch"}, {"A": "fairseq-main/examples/latent_depth/latent_depth_src/loss/latent_depth.py", "B": "fairseq-main/examples/latent_depth/latent_depth_src/loss/latent_depth.py:torch"}, {"A": "fairseq-main/examples/fast_noisy_channel/noisy_channel_sequence_generator.py", "B": "fairseq-main/examples/fast_noisy_channel/noisy_channel_sequence_generator.py:typing"}, {"A": "fairseq-main/examples/fast_noisy_channel/noisy_channel_sequence_generator.py", "B": "fairseq-main/examples/fast_noisy_channel/noisy_channel_sequence_generator.py:torch"}, {"A": "fairseq-main/examples/fast_noisy_channel/noisy_channel_sequence_generator.py", "B": "fairseq-main/examples/fast_noisy_channel/noisy_channel_sequence_generator.py:numpy"}, {"A": "fairseq-main/examples/fast_noisy_channel/noisy_channel_translation.py", "B": "fairseq-main/examples/fast_noisy_channel/noisy_channel_translation.py:argparse"}, {"A": "fairseq-main/examples/fast_noisy_channel/noisy_channel_translation.py", "B": "fairseq-main/examples/fast_noisy_channel/noisy_channel_translation.py:torch"}, {"A": "fairseq-main/examples/fast_noisy_channel/noisy_channel_beam_search.py", "B": "fairseq-main/examples/fast_noisy_channel/noisy_channel_beam_search.py:torch"}, {"A": "fairseq-main/examples/translation_moe/score.py", "B": "fairseq-main/examples/translation_moe/score.py:sacrebleu"}, {"A": "fairseq-main/examples/translation_moe/score.py", "B": "fairseq-main/examples/translation_moe/score.py:numpy"}, {"A": "fairseq-main/examples/translation_moe/score.py", "B": "fairseq-main/examples/translation_moe/score.py:random"}, {"A": "fairseq-main/examples/translation_moe/score.py", "B": "fairseq-main/examples/translation_moe/score.py:argparse"}, {"A": "fairseq-main/examples/translation_moe/translation_moe_src/mean_pool_gating_network.py", "B": "fairseq-main/examples/translation_moe/translation_moe_src/mean_pool_gating_network.py:torch"}, {"A": "fairseq-main/examples/translation_moe/translation_moe_src/translation_moe.py", "B": "fairseq-main/examples/translation_moe/translation_moe_src/translation_moe.py:torch"}, {"A": "fairseq-main/examples/translation_moe/translation_moe_src/translation_moe.py", "B": "fairseq-main/examples/translation_moe/translation_moe_src/translation_moe.py:omegaconf"}, {"A": "fairseq-main/examples/translation_moe/translation_moe_src/translation_moe.py", "B": "fairseq-main/examples/translation_moe/translation_moe_src/translation_moe.py:dataclasses"}, {"A": "fairseq-main/examples/translation_moe/translation_moe_src/logsumexp_moe.py", "B": "fairseq-main/examples/translation_moe/translation_moe_src/logsumexp_moe.py:torch"}, {"A": "fairseq-main/examples/multilingual/data_scripts/check_self_overlaps.py", "B": "fairseq-main/examples/multilingual/data_scripts/check_self_overlaps.py:glob"}, {"A": "fairseq-main/examples/multilingual/data_scripts/check_self_overlaps.py", "B": "fairseq-main/examples/multilingual/data_scripts/check_self_overlaps.py:utils"}, {"A": "fairseq-main/examples/multilingual/data_scripts/check_self_overlaps.py", "B": "fairseq-main/examples/multilingual/data_scripts/check_self_overlaps.py:argparse"}, {"A": "fairseq-main/examples/multilingual/data_scripts/download_ted_and_extract.py", "B": "fairseq-main/examples/multilingual/data_scripts/download_ted_and_extract.py:json"}, {"A": "fairseq-main/examples/multilingual/data_scripts/download_ted_and_extract.py", "B": "fairseq-main/examples/multilingual/data_scripts/download_ted_and_extract.py:argparse"}, {"A": "fairseq-main/examples/multilingual/data_scripts/download_ted_and_extract.py", "B": "fairseq-main/examples/multilingual/data_scripts/download_ted_and_extract.py:six"}, {"A": "fairseq-main/examples/multilingual/data_scripts/check_valid_test_overlaps.py", "B": "fairseq-main/examples/multilingual/data_scripts/check_valid_test_overlaps.py:argparse"}, {"A": "fairseq-main/examples/multilingual/data_scripts/check_valid_test_overlaps.py", "B": "fairseq-main/examples/multilingual/data_scripts/check_valid_test_overlaps.py:pandas"}, {"A": "fairseq-main/examples/multilingual/data_scripts/check_iswlt_test_data.py", "B": "fairseq-main/examples/multilingual/data_scripts/check_iswlt_test_data.py:re"}, {"A": "fairseq-main/examples/multilingual/data_scripts/dedup_all.py", "B": "fairseq-main/examples/multilingual/data_scripts/dedup_all.py:glob"}, {"A": "fairseq-main/examples/multilingual/data_scripts/dedup_all.py", "B": "fairseq-main/examples/multilingual/data_scripts/dedup_all.py:utils"}, {"A": "fairseq-main/examples/multilingual/data_scripts/dedup_all.py", "B": "fairseq-main/examples/multilingual/data_scripts/dedup_all.py:argparse"}, {"A": "fairseq-main/examples/multilingual/data_scripts/utils/dedup.py", "B": "fairseq-main/examples/multilingual/data_scripts/utils/dedup.py:argparse"}, {"A": "fairseq-main/examples/multilingual/data_scripts/utils/fasttext_multi_filter.py", "B": "fairseq-main/examples/multilingual/data_scripts/utils/fasttext_multi_filter.py:functools"}, {"A": "fairseq-main/examples/multilingual/data_scripts/utils/fasttext_multi_filter.py", "B": "fairseq-main/examples/multilingual/data_scripts/utils/fasttext_multi_filter.py:multiprocessing"}, {"A": "fairseq-main/examples/multilingual/data_scripts/utils/fasttext_multi_filter.py", "B": "fairseq-main/examples/multilingual/data_scripts/utils/fasttext_multi_filter.py:contextlib"}, {"A": "fairseq-main/examples/multilingual/data_scripts/utils/fasttext_multi_filter.py", "B": "fairseq-main/examples/multilingual/data_scripts/utils/fasttext_multi_filter.py:argparse"}, {"A": "fairseq-main/examples/constrained_decoding/tok.py", "B": "fairseq-main/examples/constrained_decoding/tok.py:argparse"}, {"A": "fairseq-main/examples/constrained_decoding/normalize.py", "B": "fairseq-main/examples/constrained_decoding/normalize.py:argparse"}, {"A": "fairseq-main/examples/speech_text_joint_to_text/models/s2t_dualinputxmtransformer.py", "B": "fairseq-main/examples/speech_text_joint_to_text/models/s2t_dualinputxmtransformer.py:torch"}, {"A": "fairseq-main/examples/speech_text_joint_to_text/models/s2t_dualinputtransformer.py", "B": "fairseq-main/examples/speech_text_joint_to_text/models/s2t_dualinputtransformer.py:torch"}, {"A": "fairseq-main/examples/speech_text_joint_to_text/tasks/speech_text_joint.py", "B": "fairseq-main/examples/speech_text_joint_to_text/tasks/speech_text_joint.py:pathlib"}, {"A": "fairseq-main/examples/speech_text_joint_to_text/tasks/speech_text_joint.py", "B": "fairseq-main/examples/speech_text_joint_to_text/tasks/speech_text_joint.py:torch"}, {"A": "fairseq-main/examples/speech_text_joint_to_text/tasks/speech_text_joint.py", "B": "fairseq-main/examples/speech_text_joint_to_text/tasks/speech_text_joint.py:argparse"}, {"A": "fairseq-main/examples/speech_text_joint_to_text/criterions/text_guide_cross_entropy_acc.py", "B": "fairseq-main/examples/speech_text_joint_to_text/criterions/text_guide_cross_entropy_acc.py:torch"}, {"A": "fairseq-main/examples/speech_text_joint_to_text/scripts/g2p_encode.py", "B": "fairseq-main/examples/speech_text_joint_to_text/scripts/g2p_encode.py:argparse"}, {"A": "fairseq-main/examples/speech_text_joint_to_text/scripts/g2p_encode.py", "B": "fairseq-main/examples/speech_text_joint_to_text/scripts/g2p_encode.py:re"}, {"A": "fairseq-main/examples/speech_synthesis/generate_waveform.py", "B": "fairseq-main/examples/speech_synthesis/generate_waveform.py:torchaudio"}, {"A": "fairseq-main/examples/speech_synthesis/generate_waveform.py", "B": "fairseq-main/examples/speech_synthesis/generate_waveform.py:pathlib"}, {"A": "fairseq-main/examples/speech_synthesis/generate_waveform.py", "B": "fairseq-main/examples/speech_synthesis/generate_waveform.py:torch"}, {"A": "fairseq-main/examples/speech_synthesis/generate_waveform.py", "B": "fairseq-main/examples/speech_synthesis/generate_waveform.py:matplotlib"}, {"A": "fairseq-main/examples/speech_synthesis/generate_waveform.py", "B": "fairseq-main/examples/speech_synthesis/generate_waveform.py:numpy"}, {"A": "fairseq-main/examples/speech_synthesis/generate_waveform.py", "B": "fairseq-main/examples/speech_synthesis/generate_waveform.py:soundfile"}, {"A": "fairseq-main/examples/speech_synthesis/data_utils.py", "B": "fairseq-main/examples/speech_synthesis/data_utils.py:typing"}, {"A": "fairseq-main/examples/speech_synthesis/data_utils.py", "B": "fairseq-main/examples/speech_synthesis/data_utils.py:tqdm"}, {"A": "fairseq-main/examples/speech_synthesis/data_utils.py", "B": "fairseq-main/examples/speech_synthesis/data_utils.py:pathlib"}, {"A": "fairseq-main/examples/speech_synthesis/data_utils.py", "B": "fairseq-main/examples/speech_synthesis/data_utils.py:torch"}, {"A": "fairseq-main/examples/speech_synthesis/data_utils.py", "B": "fairseq-main/examples/speech_synthesis/data_utils.py:dataclasses"}, {"A": "fairseq-main/examples/speech_synthesis/data_utils.py", "B": "fairseq-main/examples/speech_synthesis/data_utils.py:numpy"}, {"A": "fairseq-main/examples/speech_synthesis/data_utils.py", "B": "fairseq-main/examples/speech_synthesis/data_utils.py:tempfile"}, {"A": "fairseq-main/examples/speech_synthesis/data_utils.py", "B": "fairseq-main/examples/speech_synthesis/data_utils.py:scipy"}, {"A": "fairseq-main/examples/speech_synthesis/utils.py", "B": "fairseq-main/examples/speech_synthesis/utils.py:torchaudio"}, {"A": "fairseq-main/examples/speech_synthesis/utils.py", "B": "fairseq-main/examples/speech_synthesis/utils.py:torch"}, {"A": "fairseq-main/examples/speech_synthesis/utils.py", "B": "fairseq-main/examples/speech_synthesis/utils.py:numpy"}, {"A": "fairseq-main/examples/speech_synthesis/utils.py", "B": "fairseq-main/examples/speech_synthesis/utils.py:scipy"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/get_eval_manifest.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/get_eval_manifest.py:pathlib"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/get_eval_manifest.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/get_eval_manifest.py:argparse"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_sp.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_sp.py:torchaudio"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_sp.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_sp.py:tqdm"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_sp.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_sp.py:tabulate"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_sp.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_sp.py:torch"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_sp.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_sp.py:numpy"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_sp.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_sp.py:argparse"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_f0.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_f0.py:torchaudio"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_f0.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_f0.py:tqdm"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_f0.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_f0.py:tabulate"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_f0.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_f0.py:numpy"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_f0.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_f0.py:argparse"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_asr.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_asr.py:editdistance"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_asr.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_asr.py:pathlib"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_asr.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_asr.py:argparse"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_asr.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_asr.py:soundfile"}, {"A": "fairseq-main/examples/speech_synthesis/evaluation/eval_asr.py", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_asr.py:re"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_speaker_embedding.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_speaker_embedding.py:torchaudio"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_speaker_embedding.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_speaker_embedding.py:tqdm"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_speaker_embedding.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_speaker_embedding.py:pathlib"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_speaker_embedding.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_speaker_embedding.py:numpy"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_speaker_embedding.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_speaker_embedding.py:argparse"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py:typing"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py:torchaudio"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py:pandas"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py:tqdm"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py:pathlib"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py:numpy"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py:argparse"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_feature_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_feature_manifest.py:torchaudio"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_feature_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_feature_manifest.py:pandas"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_feature_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_feature_manifest.py:tqdm"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_feature_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_feature_manifest.py:pathlib"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_feature_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_feature_manifest.py:argparse"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_feature_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_feature_manifest.py:tempfile"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py:torchaudio"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py:pandas"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py:tqdm"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py:pathlib"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py:webrtcvad"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py:argparse"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py:tempfile"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_ljspeech_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_ljspeech_audio_manifest.py:torchaudio"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_ljspeech_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_ljspeech_audio_manifest.py:pandas"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_ljspeech_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_ljspeech_audio_manifest.py:tqdm"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_ljspeech_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_ljspeech_audio_manifest.py:pathlib"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_ljspeech_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_ljspeech_audio_manifest.py:argparse"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py:torchaudio"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py:pandas"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py:tqdm"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py:pathlib"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py:numpy"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py:argparse"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py:re"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/demucs.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/demucs.py:argparse"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/demucs.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/demucs.py:torch"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/resample.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/resample.py:torch"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/pretrained.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/pretrained.py:torch"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/utils.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/utils.py:functools"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/utils.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/utils.py:torch"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/utils.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/utils.py:contextlib"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/utils.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/utils.py:inspect"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/speaker_embedder/__init__.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/speaker_embedder/__init__.py:librosa"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/speaker_embedder/__init__.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/speaker_embedder/__init__.py:torchaudio"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/speaker_embedder/__init__.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/speaker_embedder/__init__.py:torch"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/vad/__init__.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/vad/__init__.py:wave"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/vad/__init__.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/vad/__init__.py:tqdm"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/vad/__init__.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/vad/__init__.py:webrtcvad"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/vad/__init__.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/vad/__init__.py:contextlib"}, {"A": "fairseq-main/examples/speech_synthesis/preprocessing/vad/__init__.py", "B": "fairseq-main/examples/speech_synthesis/preprocessing/vad/__init__.py:argparse"}, {"A": "fairseq-main/examples/rxf/rxf_src/sentence_prediction_r3f.py", "B": "fairseq-main/examples/rxf/rxf_src/sentence_prediction_r3f.py:torch"}, {"A": "fairseq-main/examples/rxf/rxf_src/label_smoothed_cross_entropy_r3f.py", "B": "fairseq-main/examples/rxf/rxf_src/label_smoothed_cross_entropy_r3f.py:torch"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/locallaunch.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/setup.py:setuptools"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt_cli/localjob.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt_cli/predict.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/scripts/text_token_extractor/pretokenization.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/scripts/video_feature_extractor/videoreader.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/scripts/video_feature_extractor/model.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/scripts/video_feature_extractor/random_sequence_shuffler.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/scripts/video_feature_extractor/extract.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/scripts/video_feature_extractor/shard_feature.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/scripts/video_feature_extractor/pathbuilder.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/scripts/video_feature_extractor/preprocessing.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/__init__.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/datasets/fairseqmmdataset.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/datasets/mmdataset.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/datasets/__init__.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/models/transformermodel.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/models/mmfusionnlg.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/models/__init__.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/models/mmfusion.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/models/fairseqmmmodel.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/tasks/vlmtask.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/tasks/milncetask.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/tasks/retritask.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/tasks/fairseqmmtask.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/tasks/task.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/tasks/__init__.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/modules/retri.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/modules/vectorpool.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/modules/__init__.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/modules/mm.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/evaluators/evaluator.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/evaluators/metric.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/evaluators/predictor.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/evaluators/__init__.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/losses/fairseqmmloss.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/losses/loss.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/losses/nce.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/losses/__init__.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/utils/shardedtensor.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/utils/load_config.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/utils/__init__.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/processors/dsprocessor.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/processors/how2processor.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/processors/processor.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/processors/how2retriprocessor.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/processors/dedupprocessor.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/processors/__init__.py"}, {"A": "fairseq-main/examples/MMPT", "B": "fairseq-main/examples/MMPT/mmpt/processors/models/s3dg.py"}, {"A": "fairseq-main/examples/data2vec/models/data2vec_text.py", "B": "fairseq-main/examples/data2vec/models/data2vec_text.py:typing"}, {"A": "fairseq-main/examples/data2vec/models/data2vec_text.py", "B": "fairseq-main/examples/data2vec/models/data2vec_text.py:torch"}, {"A": "fairseq-main/examples/data2vec/models/data2vec_text.py", "B": "fairseq-main/examples/data2vec/models/data2vec_text.py:dataclasses"}, {"A": "fairseq-main/examples/data2vec/models/data2vec_text.py", "B": "fairseq-main/examples/data2vec/models/data2vec_text.py:omegaconf"}, {"A": "fairseq-main/examples/data2vec/models/data2vec_audio.py", "B": "fairseq-main/examples/data2vec/models/data2vec_audio.py:typing"}, {"A": "fairseq-main/examples/data2vec/models/data2vec_audio.py", "B": "fairseq-main/examples/data2vec/models/data2vec_audio.py:torch"}, {"A": "fairseq-main/examples/data2vec/models/data2vec_audio.py", "B": "fairseq-main/examples/data2vec/models/data2vec_audio.py:dataclasses"}, {"A": "fairseq-main/examples/data2vec/models/data2vec_audio.py", "B": "fairseq-main/examples/data2vec/models/data2vec_audio.py:omegaconf"}, {"A": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py", "B": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py:tqdm"}, {"A": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py", "B": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py:pathlib"}, {"A": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py", "B": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py:torch"}, {"A": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py", "B": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py:random"}, {"A": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py", "B": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py:argparse"}, {"A": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py", "B": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py:soundfile"}, {"A": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py", "B": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py:json"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_sn_output_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_sn_output_data.py:pathlib"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_sn_output_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_sn_output_data.py:argparse"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_sn_output_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_sn_output_data.py:tqdm"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2spect_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2spect_data.py:torchaudio"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2spect_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2spect_data.py:pandas"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2spect_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2spect_data.py:tqdm"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2spect_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2spect_data.py:pathlib"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2spect_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2spect_data.py:argparse"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2spect_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2spect_data.py:soundfile"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/data_utils.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/data_utils.py:pathlib"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/data_utils.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/data_utils.py:typing"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2ut_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2ut_data.py:pandas"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2ut_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2ut_data.py:tqdm"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2ut_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2ut_data.py:pathlib"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2ut_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2ut_data.py:argparse"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2ut_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2ut_data.py:soundfile"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_sn_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_sn_data.py:glob"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_sn_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_sn_data.py:argparse"}, {"A": "fairseq-main/examples/speech_to_speech/preprocessing/prep_sn_data.py", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_sn_data.py:soundfile"}, {"A": "fairseq-main/examples/hubert/measure_teacher_quality.py", "B": "fairseq-main/examples/hubert/measure_teacher_quality.py:tabulate"}, {"A": "fairseq-main/examples/hubert/measure_teacher_quality.py", "B": "fairseq-main/examples/hubert/measure_teacher_quality.py:numpy"}, {"A": "fairseq-main/examples/hubert/measure_teacher_quality.py", "B": "fairseq-main/examples/hubert/measure_teacher_quality.py:argparse"}, {"A": "fairseq-main/examples/hubert/measure_teacher_quality.py", "B": "fairseq-main/examples/hubert/measure_teacher_quality.py:re"}, {"A": "fairseq-main/examples/hubert/update_ckpt.py", "B": "fairseq-main/examples/hubert/update_ckpt.py:torch"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_hubert_feature_s2t.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_hubert_feature_s2t.py:argparse"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_mfcc_feature.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_mfcc_feature.py:torchaudio"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_mfcc_feature.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_mfcc_feature.py:torch"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_mfcc_feature.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_mfcc_feature.py:argparse"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_mfcc_feature.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_mfcc_feature.py:soundfile"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_hubert_feature.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_hubert_feature.py:torch"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_hubert_feature.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_hubert_feature.py:argparse"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_hubert_feature.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_hubert_feature.py:soundfile"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_km_label.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_km_label.py:joblib"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_km_label.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_km_label.py:tqdm"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_km_label.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_km_label.py:torch"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_km_label.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_km_label.py:numpy"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_km_label.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_km_label.py:argparse"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_w2v2_feature.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_w2v2_feature.py:torch"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_w2v2_feature.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_w2v2_feature.py:argparse"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/dump_w2v2_feature.py", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_w2v2_feature.py:soundfile"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/learn_kmeans.py", "B": "fairseq-main/examples/hubert/simple_kmeans/learn_kmeans.py:joblib"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/learn_kmeans.py", "B": "fairseq-main/examples/hubert/simple_kmeans/learn_kmeans.py:numpy"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/learn_kmeans.py", "B": "fairseq-main/examples/hubert/simple_kmeans/learn_kmeans.py:argparse"}, {"A": "fairseq-main/examples/hubert/simple_kmeans/feature_utils.py", "B": "fairseq-main/examples/hubert/simple_kmeans/feature_utils.py:tqdm"}, {"A": "fairseq-main/examples/simultaneous_translation/models/transformer_monotonic_attention.py", "B": "fairseq-main/examples/simultaneous_translation/models/transformer_monotonic_attention.py:typing"}, {"A": "fairseq-main/examples/simultaneous_translation/models/transformer_monotonic_attention.py", "B": "fairseq-main/examples/simultaneous_translation/models/transformer_monotonic_attention.py:torch"}, {"A": "fairseq-main/examples/simultaneous_translation/models/convtransformer_simul_trans.py", "B": "fairseq-main/examples/simultaneous_translation/models/convtransformer_simul_trans.py:typing"}, {"A": "fairseq-main/examples/simultaneous_translation/models/convtransformer_simul_trans.py", "B": "fairseq-main/examples/simultaneous_translation/models/convtransformer_simul_trans.py:torch"}, {"A": "fairseq-main/examples/simultaneous_translation/modules/monotonic_transformer_layer.py", "B": "fairseq-main/examples/simultaneous_translation/modules/monotonic_transformer_layer.py:typing"}, {"A": "fairseq-main/examples/simultaneous_translation/modules/monotonic_transformer_layer.py", "B": "fairseq-main/examples/simultaneous_translation/modules/monotonic_transformer_layer.py:torch"}, {"A": "fairseq-main/examples/simultaneous_translation/modules/monotonic_multihead_attention.py", "B": "fairseq-main/examples/simultaneous_translation/modules/monotonic_multihead_attention.py:typing"}, {"A": "fairseq-main/examples/simultaneous_translation/modules/monotonic_multihead_attention.py", "B": "fairseq-main/examples/simultaneous_translation/modules/monotonic_multihead_attention.py:torch"}, {"A": "fairseq-main/examples/simultaneous_translation/utils/functions.py", "B": "fairseq-main/examples/simultaneous_translation/utils/functions.py:torch"}, {"A": "fairseq-main/examples/simultaneous_translation/eval/agents/simul_t2t_enja.py", "B": "fairseq-main/examples/simultaneous_translation/eval/agents/simul_t2t_enja.py:torch"}, {"A": "fairseq-main/examples/simultaneous_translation/eval/agents/simul_t2t_enja.py", "B": "fairseq-main/examples/simultaneous_translation/eval/agents/simul_t2t_enja.py:sentencepiece"}, {"A": "fairseq-main/examples/laser/laser_src/laser_transformer.py", "B": "fairseq-main/examples/laser/laser_src/laser_transformer.py:typing"}, {"A": "fairseq-main/examples/laser/laser_src/laser_transformer.py", "B": "fairseq-main/examples/laser/laser_src/laser_transformer.py:torch"}, {"A": "fairseq-main/examples/laser/laser_src/laser_lstm.py", "B": "fairseq-main/examples/laser/laser_src/laser_lstm.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/hubconf.py"}, {"A": "fairseq-main", "B": "fairseq-main/setup.py:setuptools"}, {"A": "fairseq-main", "B": "fairseq-main/setup.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/setup.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/train.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/speech_generator.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/ngram_repeat_block.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/trainer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/options.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/registry.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/hub_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/sequence_generator.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/iterative_refinement_generator.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/file_io.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/binarizer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/checkpoint_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tokenizer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/file_chunker_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/pdb.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/file_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/sequence_scorer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/incremental_decoding_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/token_generation_constraints.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/quantization_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/search.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/nan_detector.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/megatron_trainer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/models/transformer_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/models/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/models/transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/models/roberta/model.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/models/roberta/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/models/pipeline_parallel_transformer/layers.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/models/pipeline_parallel_transformer/model.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/models/pipeline_parallel_transformer/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/modules/multihead_attention.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/modules/transformer_layer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/modules/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/criterions/vocab_parallel_cross_entropy.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/model_parallel/criterions/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/adamax.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/sgd.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/fused_adam.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/fp16_optimizer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/nag.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/fused_lamb.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/cpu_adam.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/dynamic_loss_scaler.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/adadelta.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/bmuf.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/composite.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/amp_optimizer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/fairseq_optimizer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/adafactor.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/adam.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/shard.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/adagrad.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/lr_scheduler/tri_stage_lr_scheduler.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/lr_scheduler/polynomial_decay_schedule.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/lr_scheduler/fixed_schedule.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/lr_scheduler/manual_lr_scheduler.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/lr_scheduler/triangular_lr_scheduler.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/lr_scheduler/inverse_square_root_schedule.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/lr_scheduler/pass_through.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/lr_scheduler/reduce_lr_on_plateau.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/lr_scheduler/step_lr_scheduler.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/lr_scheduler/fairseq_lr_scheduler.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/lr_scheduler/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/optim/lr_scheduler/cosine_lr_scheduler.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/fairseq_decoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/transformer_from_pretrained_xlm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/fairseq_model.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/composite_encoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/lstm_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/fairseq_incremental_decoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/lightconv_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/fconv_self_att.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/multilingual_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/fairseq_encoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/masked_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/lightconv.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/lstm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/distributed_fairseq_model.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/transformer_align.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/fconv.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/transformer_ulm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/transformer_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/model_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/fconv_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec2.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/wav2vec/wav2vec2_asr.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/wav2vec/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/wav2vec/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/roberta/model.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/roberta/model_xlmr.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/roberta/model_gottbert.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/roberta/hub_interface.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/roberta/model_camembert.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/roberta/enc_dec.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/roberta/enc_dec.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/roberta/alignment_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/roberta/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_speech/s2s_conformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_speech/modules.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_speech/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_speech/s2s_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/transformer/transformer_encoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/transformer/transformer_decoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/transformer/transformer_legacy.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/transformer/transformer_config.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/transformer/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/transformer/transformer_base.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/hubert/hubert_asr.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/hubert/hubert.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/hubert/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/huggingface/hf_gpt2.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/huggingface/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/nat/levenshtein_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/nat/cmlm_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/nat/levenshtein_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/nat/nonautoregressive_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/nat/nonautoregressive_ensembles.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/nat/insertion_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/nat/fairseq_nat_model.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/nat/iterative_nonautoregressive_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/nat/nat_crf_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/nat/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/ema/ema.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/ema/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/text_to_speech/tts_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/text_to_speech/hifigan.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/text_to_speech/codehifigan.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/text_to_speech/codehifigan.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/text_to_speech/hub_interface.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/text_to_speech/vocoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/text_to_speech/fastspeech2.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/text_to_speech/tacotron2.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/text_to_speech/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/bart/model.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/bart/hub_interface.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/bart/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_text/xm_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_text/hub_interface.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_text/s2t_transformer.py:typing"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_text/s2t_transformer.py:pathlib"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_text/s2t_transformer.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_text/convtransformer.py:typing"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_text/convtransformer.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_text/s2t_conformer.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_text/berard.py:typing"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_text/berard.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_text/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_text/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_text/modules/augmented_memory_attention.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/models/speech_to_text/modules/emformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/audio_pretraining.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/translation.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/multilingual_masked_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/frm_text_to_speech.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/translation_lev.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/fairseq_task.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/hubert_pretraining.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/multilingual_language_modeling.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/multilingual_denoising.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/simultaneous_translation.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/denoising.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/language_modeling.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/translation_from_pretrained_xlm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/speech_to_text.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/masked_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/cross_lingual_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/speech_ulm_task.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/translation_from_pretrained_bart.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/speech_to_speech.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/translation_multi_simple_epoch.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/text_to_speech.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/sentence_prediction.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/online_backtranslation.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/legacy_masked_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/multilingual_translation.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/audio_finetuning.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/semisupervised_translation.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/tasks/sentence_ranking.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/positional_encoding.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/scalar_bias.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/vggblock.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/transformer_sentence_encoder_layer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/fp32_instance_norm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/fp32_batch_norm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/gumbel_vector_quantizer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/multihead_attention.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/sparse_transformer_sentence_encoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/grad_multiply.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/sinusoidal_positional_embedding.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/gelu.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/kmeans_vector_quantizer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/sparse_multihead_attention.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/layer_norm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/fp32_group_norm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/unfold.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/rotary_positional_embedding.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/linearized_convolution.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/conformer_layer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/kmeans_attention.py:functools"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/kmeans_attention.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/kmeans_attention.py:inspect"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/character_token_embedder.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/conv_tbc.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/adaptive_softmax.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/ema_module.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/ema_module.py:dataclasses"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/dynamic_convolution.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quant_noise.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/positional_embedding.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/lightweight_convolution.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/fairseq_dropout.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/location_attention.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/checkpoint_activations.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/transformer_layer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/base_layer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/espnet_multihead_attention.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/adaptive_input.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/lstm_cell_with_zoneout.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/layer_drop.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/beamable_mm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/dynamic_crf_layer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/learned_positional_embedding.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/same_pad.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/cross_entropy.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/transpose_last.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/transformer_sentence_encoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/sparse_transformer_sentence_encoder_layer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/downsampled_multihead_attention.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/quantization_options.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/scalar/ops.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/scalar/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/scalar/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/scalar/modules/qact.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/scalar/modules/qconv.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/scalar/modules/qlinear.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/scalar/modules/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/scalar/modules/qemb.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/pq/em.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/pq/pq.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/pq/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/pq/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/pq/modules/qconv.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/pq/modules/qlinear.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/pq/modules/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/quantization/pq/modules/qemb.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/lightconv_layer/lightconv_layer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/lightconv_layer"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/dynamicconv_layer/dynamicconv_layer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/modules/dynamicconv_layer"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy_with_alignment.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy_latency_augmented.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/hubert_criterion.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy_with_ctc.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/adaptive_loss.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/nat_loss.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/tacotron2_loss.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/masked_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/speech_to_speech_criterion.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/fairseq_criterion.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/wav2vec_criterion.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/sentence_prediction.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/model_criterion.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/legacy_masked_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/speech_ulm_criterion.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/cross_entropy.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/ctc.py:typing"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/ctc.py:editdistance"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/ctc.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/ctc.py:dataclasses"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/ctc.py:omegaconf"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/ctc.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/sentence_ranking.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/fastspeech2_loss.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/label_smoothed_cross_entropy.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/criterions/composite_loss.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/distributed/distributed_timeout_wrapper.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/distributed/fully_sharded_data_parallel.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/distributed/legacy_distributed_data_parallel.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/distributed/tpu_distributed_data_parallel.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/distributed/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/distributed/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/distributed/module_proxy_wrapper.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/dataclass/initialize.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/dataclass/configs.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/dataclass/constants.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/dataclass/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/dataclass/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/scoring/bleu.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/scoring/meteor.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/scoring/bertscore.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/scoring/tokenizer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/scoring/chrf.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/scoring/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/scoring/wer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/benchmark/dummy_mt.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/benchmark/dummy_model.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/benchmark/dummy_dataset.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/benchmark/dummy_masked_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/benchmark/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/benchmark/dummy_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/config/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/logging/progress_bar.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/logging/metrics.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/logging/meters.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/iterators.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/codedataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/denoising_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/plasma_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/multi_corpus_sampled_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/strip_token_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/mask_tokens_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/append_token_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/fairseq_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/multi_corpus_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/transform_eos_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/concat_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/colorize_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/add_target_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/offset_tokens_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/prepend_token_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/resampling_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/id_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/noising.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/shorten_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/indexed_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/numel_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/raw_label_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/num_samples_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/transform_eos_lang_pair_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/backtranslation_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/fasta_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/replace_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/pad_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/data_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/round_robin_zip_datasets.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/monolingual_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/lru_cache_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/bucket_pad_length_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/language_pair_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/prepend_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/base_wrapper_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/token_block_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/dictionary.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/sort_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/subsample_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/list_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/transform_eos_concat_langpair_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/text_compressor.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/nested_dictionary_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/concat_sentences_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/roll_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/lm_context_window_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/speech_to_text_joint_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/speech_to_text_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/multi_modality_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/data_cfg.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/text_to_speech_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/audio_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/raw_audio_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/hubert_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/frm_text_to_speech_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/speech_to_speech_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/feature_transforms/specaugment.py:typing"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/feature_transforms/specaugment.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/feature_transforms/delta_deltas.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/feature_transforms/delta_deltas.py:torchaudio"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/feature_transforms/delta_deltas.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/feature_transforms/utterance_cmvn.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/feature_transforms/__init__.py:typing"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/audio/feature_transforms/global_cmvn.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/gpt2_bpe.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/moses_tokenizer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/byte_bpe.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/gpt2_bpe_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/hf_byte_bpe.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/bytes.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/characters.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/fastbpe.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/subword_nmt_bpe.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/space_tokenizer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/hf_bert_bpe.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/sentencepiece_bpe.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/byte_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/nltk_tokenizer.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/encoders/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/multilingual/sampled_multi_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/multilingual/sampled_multi_epoch_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/multilingual/multilingual_utils.py:typing"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/multilingual/multilingual_utils.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/multilingual/multilingual_utils.py:enum"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/multilingual/multilingual_data_manager.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/multilingual/sampling_method.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/multilingual/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/legacy/masked_lm_dictionary.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/legacy/masked_lm_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/legacy/block_pair_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/legacy/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/huffman/huffman_mmap_indexed_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/huffman/huffman_coder.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq/data/huffman/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq_cli/preprocess.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq_cli/interactive.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq_cli/score.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq_cli/train.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq_cli/validate.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq_cli/eval_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq_cli/hydra_train.py"}, {"A": "fairseq-main", "B": "fairseq-main/fairseq_cli/generate.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/wav2vec_featurize.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/libri_labels.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/vq-wav2vec_featurize.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/wav2vec_manifest.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/w2vu_generate.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/models/wav2vec_u.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/models/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/tasks/unpaired_audio_text.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/tasks/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/kaldi_self_train/st/local/unsup_select.py:editdistance"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/kaldi_self_train/st/local/unsup_select.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/kaldi_self_train/st/local/prepare_data_from_w2v.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/kaldi_self_train/st/local/prepare_data_from_w2v.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/g2p_wrd_to_phn.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_apply_cluster_faiss.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/remove_silence.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/filter_lexicon.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wrd_to_ltr.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/vads.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/merge_clusters.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/pca.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/copy_labels.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/filter_tsv.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/apply_pca.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_cluster_faiss.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wav2vec_extract_features.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/phonemize_with_sil.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/normalize_text.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/mean_pool.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/wer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/normalize_and_filter_text.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/scripts/ltr_to_wrd.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/data/random_input_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/data/extracted_features_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/wav2vec/unsupervised/data/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/truncated_bptt/transformer_xl_model.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/truncated_bptt/truncated_bptt_lm_task.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/truncated_bptt/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/linformer/linformer_src/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/linformer/linformer_src/models/linformer_roberta.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/linformer/linformer_src/modules/multihead_linear_attention.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/linformer/linformer_src/modules/linformer_sentence_encoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/linformer/linformer_src/modules/linformer_sentence_encoder_layer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/byte_level_bpe/gru_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/byte_level_bpe/get_bitext.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/unsupervised_quality_estimation/repeat_lines.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/unsupervised_quality_estimation/meteor.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/unsupervised_quality_estimation/aggregate_scores.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/infer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/w2l_decoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/datasets/asr_prep_json.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/models/w2l_conv_glu_enc.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/models/vggtransformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/kaldi/kaldi_decoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/kaldi/kaldi_initializer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/tasks/speech_recognition.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/criterions/cross_entropy_acc.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/criterions/ASG_loss.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/new/infer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/new/decoders/base_decoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/new/decoders/flashlight_decoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/new/decoders/decoder_config.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/new/decoders/viterbi_decoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/new/decoders/decoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/utils/wer_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/data/data_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/data/replabels.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/data/asr_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/data/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_recognition/data/collaters.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/backtranslation/deduplicate_lines.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/backtranslation/extract_bt_data.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/megatron_11b/detok.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/criss/save_encoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/criss/mining/mine.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/criss/sentence_retrieval/encoder_analysis.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/adaptive_span/adaptive_span_attention.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/adaptive_span/adaptive_span_model_wrapper.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/adaptive_span/adagrad_with_grad_clip.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/adaptive_span/adaptive_span_loss.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/adaptive_span/adaptive_span_model.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/adaptive_span/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/attention_head_selection/src/speech_to_text_head_selection.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/attention_head_selection/src/models/head_selection_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/attention_head_selection/src/models/head_selection_s2t_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/attention_head_selection/src/modules/head_selection_transformer_layer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/attention_head_selection/src/modules/multihead_attention_selection.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/attention_head_selection/src/modules/attn_head_selector.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/attention_head_selection/src/modules/multihead_functional.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/attention_head_selection/src/loss/attention_head_selection.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/attention_head_selection/src/data/speech_to_text_dataset_with_domain.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/discriminative_reranking_nmt/drnmt_rerank.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/discriminative_reranking_nmt/models/discriminative_reranking_model.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/discriminative_reranking_nmt/models/discriminative_reranking_model.py:dataclasses"}, {"A": "fairseq-main", "B": "fairseq-main/examples/discriminative_reranking_nmt/tasks/discriminative_reranking_task.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/discriminative_reranking_nmt/criterions/discriminative_reranking_criterion.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/discriminative_reranking_nmt/scripts/prep_data.py:sacrebleu"}, {"A": "fairseq-main", "B": "fairseq-main/examples/discriminative_reranking_nmt/scripts/prep_data.py:pathlib"}, {"A": "fairseq-main", "B": "fairseq-main/examples/discriminative_reranking_nmt/scripts/prep_data.py:multiprocessing"}, {"A": "fairseq-main", "B": "fairseq-main/examples/discriminative_reranking_nmt/scripts/prep_data.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/examples/discriminative_reranking_nmt/scripts/prep_data.py:sentencepiece"}, {"A": "fairseq-main", "B": "fairseq-main/examples/roberta/multiprocessing_bpe_encoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/roberta/preprocess_RACE.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/roberta/wsc/wsc_criterion.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/roberta/wsc/wsc_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/roberta/wsc/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/roberta/wsc/wsc_task.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/roberta/commonsense_qa/commonsense_qa_task.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/roberta/commonsense_qa/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/m2m_100/process_data/dedup_data.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/examples/m2m_100/process_data/clean_histogram.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/examples/m2m_100/process_data/remove_too_much_punc.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/examples/m2m_100/tokenizers/tokenize_indic.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/m2m_100/tokenizers/tokenize_zh.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/m2m_100/tokenizers/tokenize_thai.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/latent_depth/latent_depth_src/multilingual_translation_latent_depth.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/latent_depth/latent_depth_src/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/latent_depth/latent_depth_src/models/latent_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/latent_depth/latent_depth_src/models/latent_multilingual_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/latent_depth/latent_depth_src/modules/latent_layers.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/latent_depth/latent_depth_src/loss/latent_depth.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/fast_noisy_channel/noisy_channel_sequence_generator.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/fast_noisy_channel/noisy_channel_translation.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/fast_noisy_channel/noisy_channel_beam_search.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/fast_noisy_channel/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/translation_moe/score.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/translation_moe/translation_moe_src/mean_pool_gating_network.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/translation_moe/translation_moe_src/translation_moe.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/translation_moe/translation_moe_src/logsumexp_moe.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/translation_moe/translation_moe_src/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/check_self_overlaps.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/download_ted_and_extract.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/check_valid_test_overlaps.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/check_iswlt_test_data.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/download_wmt19_and_before.py:typing"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/download_wmt19_and_before.py:functools"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/download_wmt19_and_before.py:pathlib"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/download_wmt19_and_before.py:glob"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/download_wmt19_and_before.py:urllib"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/download_wmt19_and_before.py:multiprocessing"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/download_wmt19_and_before.py:re"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/binarize.py:pathlib"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/binarize.py:glob"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/binarize.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/dedup_all.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/remove_valid_test_in_train.py:pandas"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/remove_valid_test_in_train.py:glob"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/remove_valid_test_in_train.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/utils/dedup.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/multilingual/data_scripts/utils/fasttext_multi_filter.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/constrained_decoding/tok.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/constrained_decoding/normalize.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_text_joint_to_text/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_text_joint_to_text/models/s2t_dualinputxmtransformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_text_joint_to_text/models/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_text_joint_to_text/models/s2t_dualinputtransformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_text_joint_to_text/tasks/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_text_joint_to_text/tasks/speech_text_joint.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_text_joint_to_text/criterions/text_guide_cross_entropy_acc.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_text_joint_to_text/criterions/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_text_joint_to_text/scripts/g2p_encode.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/generate_waveform.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/data_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/evaluation/get_eval_manifest.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_sp.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_f0.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/evaluation/eval_asr.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/evaluation/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_speaker_embedding.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_common_voice_audio_manifest.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_feature_manifest.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoise_and_vad_audio.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_ljspeech_audio_manifest.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/preprocessing/get_vctk_audio_manifest.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/preprocessing/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/demucs.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/resample.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/pretrained.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/preprocessing/denoiser/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/preprocessing/speaker_embedder/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_synthesis/preprocessing/vad/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/rxf/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/rxf/rxf_src/sentence_prediction_r3f.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/rxf/rxf_src/label_smoothed_cross_entropy_r3f.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/rxf/rxf_src/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/MMPT"}, {"A": "fairseq-main", "B": "fairseq-main/examples/data2vec/models/data2vec_text.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/data2vec/models/data2vec_audio.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/generate_waveform_from_code.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_sn_output_data.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2spect_data.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/preprocessing/data_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_s2ut_data.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/preprocessing/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/preprocessing/prep_sn_data.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/benchmarking/core.py:json"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/benchmarking/core.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/benchmarking/core.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/benchmarking/core.py:soundfile"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/benchmarking/core.py:memory_profiler"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/benchmarking/get_metrics.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/benchmarking/get_metrics.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/benchmarking/data_utils.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/benchmarking/data_utils.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/benchmarking/data_utils.py:random"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_speech/benchmarking/data_utils.py:soundfile"}, {"A": "fairseq-main", "B": "fairseq-main/examples/hubert/measure_teacher_quality.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/hubert/update_ckpt.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_hubert_feature_s2t.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_mfcc_feature.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_hubert_feature.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_km_label.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/hubert/simple_kmeans/dump_w2v2_feature.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/hubert/simple_kmeans/learn_kmeans.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/hubert/simple_kmeans/feature_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/models/transformer_monotonic_attention.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/models/convtransformer_simul_trans.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/models/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/modules/monotonic_transformer_layer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/modules/monotonic_multihead_attention.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/modules/fixed_pre_decision.py:typing"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/modules/fixed_pre_decision.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/modules/fixed_pre_decision.py:functools"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/modules/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/utils/monotonic_attention.py:typing"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/utils/monotonic_attention.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/utils/p_choose_strategy.py:typing"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/utils/p_choose_strategy.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/utils/functions.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/utils/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/tests/test_alignment_train.py:hypothesis"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/tests/test_alignment_train.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/tests/test_alignment_train.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/tests/test_text_models.py:typing"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/tests/test_text_models.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/tests/test_text_models.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/examples/simultaneous_translation/eval/agents/simul_t2t_enja.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/laser/laser_src/laser_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/laser/laser_src/laser_lstm.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/laser/laser_src/multitask_data_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/laser/laser_src/laser_task.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/laser/laser_src/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/paraphraser/paraphrase.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/examples/noisychannel/rerank_score_lm.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/noisychannel/rerank_score_bw.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/noisychannel/rerank_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/noisychannel/rerank_tune.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/noisychannel/rerank_options.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/noisychannel/rerank.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/noisychannel/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/noisychannel/rerank_generate.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/ulm/sample.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/glow.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tts_data.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/synthesize_audio_from_units.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/convert_to_16k.py:progressbar"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/convert_to_16k.py:pathlib"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/convert_to_16k.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/multiproc.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/audio_processing.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/audio_processing.py:librosa"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/audio_processing.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/audio_processing.py:scipy"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/layers.py:librosa"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/layers.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/model.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/cmudict.py:re"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/stft.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/waveglow_denoiser.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/text.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/text.py:re"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/numbers.py:re"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/cleaners.py:re"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/unit2speech/tacotron2/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/cluster_kmeans.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/dump_feats.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/quantize_with_kmeans.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/clustering/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/w2v2_feature_reader.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/cpc_feature_reader.py:soundfile"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/cpc_feature_reader.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/hubert_feature_reader.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/logmel_feature_reader.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/speech2unit/pretrained/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/self_auto_bleu.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/ppx.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/continuation_eval.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/misc/bleu_utils.py:nltk"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/asr_metrics/misc/cut_as.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/metrics/abx_metrics/dump_abx_feats.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/gslm/tools/resynthesize_speech.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/pgslm/preprocess_f0.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/pgslm/truncated_laplace.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/pgslm/generate_waveform.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/pgslm/inference_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/pgslm/prepare_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/pgslm/data_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/pgslm/naive_decoder.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/pgslm/quantize_f0.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/pgslm/sample/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/pgslm/sample/sample.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/pgslm/scripts/join_units_manifest.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/pgslm/eval/cont_metrics.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/textless_nlp/pgslm/eval/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/pointer_generator/postprocess.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/pointer_generator/preprocess.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/pointer_generator/pointer_generator_src/__init__.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/pointer_generator/pointer_generator_src/transformer_pg.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/bart/summarize.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_text/prep_mustc_data.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_text/prep_covost_data.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_text/data_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_text/prep_mtedx_data.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_text/prep_librispeech_data.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_text/seg_mustc_data.py"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_text/simultaneous_translation/agents/fairseq_simul_st_agent.py:torchaudio"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_text/simultaneous_translation/agents/fairseq_simul_st_agent.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_text/simultaneous_translation/agents/fairseq_simul_st_agent.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/examples/speech_to_text/simultaneous_translation/agents/fairseq_simul_st_agent.py:json"}, {"A": "fairseq-main", "B": "fairseq-main/scripts/compare_namespaces.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/scripts/average_checkpoints.py"}, {"A": "fairseq-main", "B": "fairseq-main/scripts/split_train_valid_docs.py"}, {"A": "fairseq-main", "B": "fairseq-main/scripts/spm_encode.py"}, {"A": "fairseq-main", "B": "fairseq-main/scripts/count_docs.py"}, {"A": "fairseq-main", "B": "fairseq-main/scripts/rm_pt.py"}, {"A": "fairseq-main", "B": "fairseq-main/scripts/spm_decode.py"}, {"A": "fairseq-main", "B": "fairseq-main/scripts/spm_train.py"}, {"A": "fairseq-main", "B": "fairseq-main/scripts/shard_docs.py"}, {"A": "fairseq-main", "B": "fairseq-main/scripts/build_sym_alignment.py"}, {"A": "fairseq-main", "B": "fairseq-main/scripts/read_binarized.py"}, {"A": "fairseq-main", "B": "fairseq-main/scripts/constraints/extract.py"}, {"A": "fairseq-main", "B": "fairseq-main/scripts/constraints/validate.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_character_token_embedder.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_backtranslation_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_huffman.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_multi_corpus_sampled_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_multi_corpus_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_average_checkpoints.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_espnet_multihead_attention.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_espnet_multihead_attention.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_valid_subset_checks.py:tempfile"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_noising.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_binaries.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_plasma_utils.py:pyarrow"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_plasma_utils.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_plasma_utils.py:contextlib"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_plasma_utils.py:tempfile"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_online_backtranslation.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_iopath.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_dictionary.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_reproducibility.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_multihead_attention.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_sparse_multihead_attention.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_label_smoothing.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_checkpoint_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_iterators.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_positional_encoding.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_positional_encoding.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_lm_context_window.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_file_io.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_file_chunker_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_hf_hub.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_rotary_positional_embedding.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_rotary_positional_embedding.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_roberta.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_memory_efficient_fp16.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_binarizer.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_data_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_sequence_scorer.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_fp16_optimizer.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_train.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_inference_dropout.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_transformer.py:typing"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_transformer.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_transformer.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_dataclass_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_sequence_generator.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_token_block_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_amp_optimizer.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_constraints.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_lstm_jitable.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_convtbc.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_activation_checkpointing.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_metrics.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_resampling_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_ema.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_export.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/test_concat_dataset.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/gpu/test_ema_gpu.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/gpu/test_binaries_gpu.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech_recognition/test_collaters.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech_recognition/test_data_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech_recognition/test_cross_entropy.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech_recognition/asr_test_base.py:torch"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech_recognition/asr_test_base.py:numpy"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech_recognition/asr_test_base.py:inspect"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech_recognition/asr_test_base.py:argparse"}, {"A": "fairseq-main", "B": "fairseq-main/tests/distributed/test_module_proxy_wrapper.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/distributed/test_distributed_timeout_wrapper.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/distributed/test_bmuf.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/distributed/test_utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/distributed/utils.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech/test_s2t_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech/test_tts_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech/test_dualinput_s2t_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech/test_wav2vec2.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech/test_convtransformer_simul_trans.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech/test_xm_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech/test_fastspeech2.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech/test_s2s_transformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech/test_s2t_conformer.py"}, {"A": "fairseq-main", "B": "fairseq-main/tests/speech/__init__.py"}]