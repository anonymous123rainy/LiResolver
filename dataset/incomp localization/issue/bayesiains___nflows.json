[{"A": "nflows-master", "B": "nflows-master/setup.py:setuptools"}, {"A": "nflows-master", "B": "nflows-master/tests/flows/base_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/flows/realnvp_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/flows/autoregressive_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/base_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/base_test.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/permutations_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/lu_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/normalization_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/standard_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/standard_test.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/qr_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/autoregressive_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/made_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/transform_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/svd_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/reshape_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/coupling_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/linear_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/nonlinearities_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/conv_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/orthogonal_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/splines/cubic_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/splines/rational_quadratic_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/splines/linear_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/transforms/splines/quadratic_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/utils/torchutils_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/distributions/normal_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/tests/distributions/discrete_test.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/nn/nde/made.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/nn/nde/made.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/nn/nde/made.py:matplotlib"}, {"A": "nflows-master", "B": "nflows-master/nflows/nn/nets/resnet.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/nn/nets/mlp.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/nn/nets/mlp.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/flows/realnvp.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/flows/autoregressive.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/flows/base.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/linear.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/linear.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/permutations.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/standard.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/standard.py:typing"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/qr.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/qr.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/coupling.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/coupling.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/svd.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/svd.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/nonlinearities.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/nonlinearities.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/orthogonal.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/orthogonal.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/reshape.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/autoregressive.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/autoregressive.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/base.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/base.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/lu.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/lu.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/made.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/normalization.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/normalization.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/UMNN/MonotonicNormalizer.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/splines/linear.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/splines/linear.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/splines/rational_quadratic.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/splines/rational_quadratic.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/splines/cubic.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/transforms/splines/quadratic.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/utils/torchutils.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/utils/torchutils.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/distributions/discrete.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/distributions/mixture.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/distributions/normal.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/distributions/normal.py:numpy"}, {"A": "nflows-master", "B": "nflows-master/nflows/distributions/uniform.py:torch"}, {"A": "nflows-master", "B": "nflows-master/nflows/distributions/uniform.py:typing"}, {"A": "nflows-master", "B": "nflows-master/nflows/distributions/base.py:torch"}]